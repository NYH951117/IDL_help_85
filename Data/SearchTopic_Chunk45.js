define({"3201":{i:5.50327019655568E-05,u:"../Content/IDL Analyst/LinearSystems/SingularValueDecomp.htm",a:"The SVD of an m by n matrix A is a matrix decomposition, A = USV T . With q = min( m, n ), the factors U m x q and V n x q are orthogonal matrices, and S q x q is a nonnegative diagonal matrix with nonincreasing diagonal terms. The IMSL_SVDCOMP function computes the singular values of A by default. ...",t:"Singular Value Decomposition and Generalized Inverse"},"3202":{i:5.50327019655568E-05,u:"../Content/IDL Analyst/LinearSystems/SolvingSystLinearEquations.htm",a:"A square system of linear equations has the form Ax = b , where A is a user-specified n × n matrix, b is a given n -vector, and x is the solution n -vector. You must specify each entry of A and b . The entire vector x is returned as output. When A is invertible, a unique solution to Ax = b exists. ...",t:"Solving Systems of Linear Equations"},"3203":{i:5.50327019655568E-05,u:"../Content/IDL Analyst/LinearSystems/SparseMatricesDirect.htm",a:"Several routines employ direct methods (as opposed to iterative methods) for solving problems involving sparse matrices. For general sparse linear systems, IMSL_SP_LUFAC and IMSL_SP_LUSOL form a factor/solve function pair. If a sparse matrix the problem Ax = b is to be solved for a single A, but ...",t:"Sparse Matrices: Direct Methods"},"3204":{i:5.50327019655568E-05,u:"../Content/IDL Analyst/LinearSystems/SparseMatricesIterative.htm",a:"Two routines employ iterative methods (as opposed to direct methods) for solving problems involving sparse matrices. The IMSL_SP_GMRES function, based on the FORTRAN subroutine GMRESD by H. F. Walker, solves the linear system Ax = b using the GMRES method. This method is described in detail by Saad ...",t:"Sparse Matrices: Iterative Methods"},"3205":{i:5.50327019655568E-05,u:"../Content/IDL Analyst/LinearSystems/SparseMatricesStorage.htm",a:"The dense linear algebra functions in IDL Analyst require input consisting of matrix dimensions and all values for the matrix entries. This is not practical for sparse linear algebra. Three different storage formats can be used for the functions in the sparse matrix sections. These methods include: ...",t:"Sparse Matrices: Matrix Storage Modes"},"3206":{i:5.50327019655568E-05,u:"../Content/IDL Analyst/LinearSystems/SparseMatricesUtilities.htm",a:"Sparse Matrices: Utilities Utilities designed to aid with the manipulation of sparse matrices are also provided. The common operation of matrix-vector multiplication can be efficiently executed using the IMSL_SP_MVMUL function. ",t:"Sparse Matrices: Utilities"},"3207":{i:5.50327019655568E-05,u:"../Content/IDL Analyst/Overview/About_IDL_Analyst.htm",a:"IDL Analyst combines the power of IDL with the IMSL C Numerical Library provided by Visual Numerics, Inc. The addition of the IMSL library gives IDL users access to an extensive and powerful set of mathematical and statistical analysis routines via the standard IDL programmer’s interface. If you ...",t:"About IDL Analyst"},"3208":{i:5.50327019655568E-05,u:"../Content/IDL Analyst/Overview/Error_Handling.htm",a:"IDL Analyst uses IDL’s built-in error handling mechanisms for most errors. This section describes areas in which IDL Analyst may provide a greater level of control than IDL itself. Underflow and Overflow In most cases, IDL Analyst routines are written so that computations are not affected by ...",t:"IDL Analyst Error Handling"},"3209":{i:5.50327019655568E-05,u:"../Content/IDL Analyst/Overview/Using_IDL_Analyst_docs.htm",a:"Each chapter of the IDL Analyst Reference Guide provides an overview of the functionality described in that chapter, along with information on the types of problems addressed by that functionality. Rows Versus Columns The IDL Analyst Reference Guide uses the standard linear algebraic convention for ...",t:"Using the IDL Analyst Documentation"},"3210":{i:7.28963768618897E-05,u:"../Content/IDL Graphics/GenerateCode Method.htm",a:"The Generate Code method generates the code needed to reproduce the contents of a graphics window. This method can be used to generate code after changes have been made interactively in the graphics window, e.g., moving, resizing, or changing properties. Example p = PLOT(/TEST, THICK=3, COLOR=\u0027red\u0027, ...",t:"Generate Code Method"},"3211":{i:5.50327019655568E-05,u:"../Content/IDL Graphics/Image Processing.htm",a:"Image Processing ",t:"Image Processing"},"3212":{i:0.000111825106983095,u:"../Content/Object Classes/Graphics/IDLgrVolume__GetVertexAttributeData.htm",a:"The IDLgrVolume:: GetVertexAttributeData procedure method retrieves the data associated with a named attribute variable containing per-vertex attribute data. This method is useful when a shader program defined by an IDLgrShader object modifies the vertices of an object. Syntax Obj -\u003e[ IDLgrVolume ...",t:"IDLgrVolume::GetVertexAttributeData"},"3213":{i:0.000122657182183995,u:"../Content/Object Classes/Graphics/IDLgrVolume__SetVertexAttributeData.htm",a:"The IDLgrVolume:: SetVertexAttributeData procedure method passes a set of per-vertex attribute data to a vertex shader program. When an IDLgrShader object is associated with the volume via the SHADER property, this attribute data is made available, a vertex\u0027s worth at a time, to the vertex shader ...",t:"IDLgrVolume::SetVertexAttributeData"},"3214":{i:0.000378826540584493,u:"../Content/Object Classes/Miscellaneous/IDL_Object_overloadImpliedPrint.htm",a:"The IDL_Object::_overloadImpliedPrint function method can return a variable of any type to be printed out. This method is designed to replicate the default behavior of objects that do not use operator overloading. As a result, object classes that do inherit from the IDL_Object class but that do not ...",t:"IDL_Object::_overloadImpliedPrint"},"3215":{i:0.000237962868452275,u:"../Content/Object Classes/Miscellaneous/IDL_Object_Properties.htm",a:"IDL_Object has the following properties. The following properties are used to return the variable attributes for the object. If you want, you can subclass the GetProperty method and return different values for these properties. DIM By default, calls the ::_overloadSize method and returns an array ...",t:"IDL_Object Properties"},"3216":{i:0.000720672982605519,u:"../Content/Objects/TranslatingRotatingScaling.htm",a:"An IDLgrModel object is a container for any visualization objects that are to be rotated, translated, or scaled. Each IDLgrModel object has a transformation property (set via the TRANSFORM keyword to the IDLgrModel::Init or SetProperty method), which is a 4 x 4 floating-point matrix. For a general ...",t:"Translating, Rotating, and Scaling Objects"},"3217":{i:8.34459058980336E-05,u:"../Content/Objects/ShaderObjects/ApplyLUTShaders.htm",a:"The IMAGE_1D property on the IDLgrImage object lets you load color lookup table (LUT) values into a texture map and pass the LUT to a shader program. LUTs are useful for a number of tasks including: Displaying palletized images. Adding color to greyscale images. Optimizing the evaluation of ...",t:"Applying Lookup Tables Using Shaders"},"3218":{i:5.50327019655568E-05,u:"../Content/Objects/ShaderObjects/BasicLUTShaderObjClass.htm",a:"The shader_lut_doc object class inherits from IDLgrShader and contains the Filter method, just like the “Basic RGB Shader Object Class”. See that section for the base code or the example for the complete code. The one difference is this example uses the shader object VERTEX_PROGRAM_FILENAME and ...",t:"Basic LUT Shader Object Class"},"3219":{i:7.10020808930568E-05,u:"../Content/Objects/ShaderObjects/FilterChainExample.htm",a:"There are no exposed uniform variables since the IDLgrShaderConvol3 object exposes its uniform variables as properties. When you call SetProperty for one of the convolution shader’s properties, it calls SetUniformVariable internally. See IDLgrShaderConvol3 Properties for information on the ...",t:"Filter Chain Example"},"3220":{i:7.5149970843124E-05,u:"../Content/Objects/ShaderObjects/FilterChainShaders.htm",a:"A series of image filtering shaders can be grouped and applied sequentially to an image. To do so, add each shader to an IDLgrFilterChain object, which is a specialized type of container designed to hold IDLgrShader objects or objects that subclass from IDLgrShader. Then associate the ...",t:"Filter Chain Shaders"},"3221":{i:5.50327019655568E-05,u:"../Content/Objects/ShaderObjects/HardwareShaderProgramLUT.htm",a:"This example reads the shader source from text files. The vertex shader ( LUTShaderVert.txt located in examples/doc/shaders ) contains the following code: void main (void) { gl_TexCoord[0] = gl_MultiTexCoord0; gl_Position = ftransform(); } This basic vertex program passes along the texture ...",t:"Hardware Shader Program for LUT Shader"},"3222":{i:5.50327019655568E-05,u:"../Content/Objects/ShaderObjects/HighPrecisionImages.htm",a:"Older graphics cards and monitors have been able to display a maximum color depth of 8-bits per channel. In such cases high-precision images that exceed 8-bits per channel must be converted to 8-bit for display. This was accomplished using the IDL BYTSCL function which was limited by the processing ...",t:"High Precision Images"},"3223":{i:8.96829490936021E-05,u:"../Content/Objects/ShaderObjects/HighPrecisionImagesExamples.htm",a:"The following examples provide guidelines for reading in various types of image data including how to set the IDLgrImage INTERNAL_DATA_TYPE property and supporting fragment shader code. However, due to the size limitations of the IDL distribution, high-precision images are not included, so you will ...",t:"Examples of Handling High Precision Images"},"3224":{i:5.50327019655568E-05,u:"../Content/Objects/ShaderObjects/ImageFilterShaders.htm",a:"Image shader programs are particularly easy to create: • The IDLgrImage object uses a texture-mapped polygon to draw the image. Most image filters do not change the size or the shape of the image, making it unnecessary to modify the vertices of the polygon. Therefore, a very trivial vertex shader ...",t:"Image Filter Shaders"},"3225":{i:5.50327019655568E-05,u:"../Content/Objects/ShaderObjects/LibraryShaderObj.htm",a:"The IDL distribution includes two shader objects that subclass from IDLgrShader . These pre-built shader objects let you quickly add the functionality of a shader to an image processing application without having to write any GLSL code. These subclasses also provide a software fallback mechanism to ...",t:"Library of Pre-Built Shader Objects"},"3226":{i:5.50327019655568E-05,u:"../Content/Objects/ShaderObjects/PassingInfoShader.htm",a:"The increased processing power provided by shaders allows the display to be quickly updated when object parameters change. This one-way communication lets you pass in object parameters, such as color updates, but also other variables such as time, for which there is no OpenGL equivalent. The ...",t:"Passing Information to a Shader Program"},"3227":{i:5.50327019655568E-05,u:"../Content/Objects/ShaderObjects/UniformVarForLUTExample.htm",a:"In this example, a uniform variable named lut contains the values of the 256-element array of color table values. This can either be a custom LUT such as an enhanced greyscale color table, or one of the predefined IDL LUTs. The following code creates a greyscale LUT defined by a curve rather than a ...",t:"Uniform Variable for LUT Example"},"3228":{i:5.50327019655568E-05,u:"../Content/Objects/ShaderObjects/UsingShadersIDL.htm",a:"The IDLgrShader object class exposes OpenGL Shader Language (GLSL) code within an IDL application. Using shader object properties, you can define the required vertex shader and fragment shader components by either passing in a string containing the GLSL program or by passing in a filename. Always ...",t:"Using Shaders in an IDL Application"},"3229":{i:5.50327019655568E-05,u:"../Content/PDF_pages/External Development Guide.htm",a:"IDL provides ways to link to code written in other programming languages. See the available External Linking IDL routines and functions. You can find more in-depth information in the External Development Guide found in the help\\pdf directory of your IDL installation. This book covers topics such as: ...",t:"External Development Guide"},"3230":{i:5.50327019655568E-05,u:"../Content/PDF_pages/IDL Bridges.htm",a:"Bridge technology allows applications in different programming languages or environments to share information: for example, between IDL and Java. With bridge technology, you can use an application that manipulates data in its native language by calling on objects and processes from IDL. Connectivity ...",t:"IDL Bridges"},"3231":{i:0.000188005283789168,u:"../Content/Reference Material/C/CDF Routines/CDF Overview.htm",a:"For information on the current CDF version, enter the following at the IDL prompt: HELP, \u0027cdf\u0027, /DLM The Common Data Format (CDF) is a file format that facilitates the storage and retrieval of multi-dimensional scientific data. CDF is a product of the National Space Science Data Center (NSSDC). ...",t:"CDF Overview"},"3232":{i:0.000107840659811585,u:"../Content/Reference Material/G/GRIB Routines/GRIB_MULTI_APPEND.htm",a:"The GRIB_MULTI_APPEND procedure appends a single-field GRIB message to a multi-field GRIB message. Examples See GRIB_SET for a general example using the GRIB routines. Syntax GRIB_MULTI_APPEND , Ghandle , Gmhandle, Start_section  Arguments Ghandle The GRIB handle from which the sections are copied. ...",t:"GRIB_MULTI_APPEND"},"3233":{i:0.00010735179904423,u:"../Content/Reference Material/H/HDF Routines/HDF Overview.htm",a:"For information on the current HDF version, enter the following at the IDL prompt: HELP, \u0027hdf\u0027, /DLM The Hierarchical Data Format (HDF) is a multi-object file format that facilitates the transfer of various types of data between machines and operating systems. HDF is a product of the National Center ...",t:"HDF Overview"},"3234":{i:0.000154129623010993,u:"../Content/Reference Material/H/HDF-EOS Routines/HDF-EOS Overview.htm",a:"For information on the current HDF-EOS version, enter the following at the IDL prompt: HELP, \u0027hdf\u0027, /DLM HDF-EOS (Hierarchical Data Format-Earth Observing System) is an extension of NCSA (National Center for Supercomputing Applications) HDF and uses HDF calls as an underlying basis. This API ...",t:"HDF-EOS Overview"},"3235":{i:5.50327019655568E-05,u:"../Content/Reference Material/H/HDF5 Routines/H5_PUT.htm",a:"This procedure writes a new dataset to either a new or existing HDF5 file. Because HDF5 does not at this time provide a mechanism to remove a dataset from a file, it is not possible to put a dataset into a file if the ID to that dataset already exists. Examples H5_PUT, \u0027temp.h5\u0027, \u0027group1/mydata\u0027, ...",t:"H5_PUT"},"3236":{i:0.000112677862937821,u:"../Content/Reference Material/H/HDF5 Routines/HDF5 Overview.htm",a:"For information on the current HDF5 version, enter the following at the IDL prompt: HELP, \u0027hdf5\u0027, /DLM The Hierarchical Data Format (HDF) version 5 file format was designed for scientific data consisting of a hierarchy of datasets and attributes (or metadata). HDF is a product of the National Center ...",t:"HDF5 Overview"},"3237":{i:5.59873514342662E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_BETACDF.htm",a:"The IMSL_BETACDF function evaluates the beta probability distribution function. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_BETACDF function evaluates the distribution function of a beta random ...",t:"IMSL_BETACDF"},"3238":{i:5.59873514342662E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_BINOMIALCDF.htm",a:"The IMSL_BINOMIALCDF function evaluates the binomial distribution function. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_BINOMIALCDF function evaluates the distribution function of a binomial random ...",t:"IMSL_BINOMIALCDF"},"3239":{i:5.59873514342662E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_BINOMIALCOEF.htm",a:"The IMSL_BINOMIALCOEF function evaluates the binomial coefficient. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The binomial function is defined to be: with n ≥ m ≥ 0. Also, n must not be so large that the ...",t:"IMSL_BINOMIALCOEF"},"3240":{i:5.59873514342662E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_BINOMIALPDF.htm",a:"The IMSL_BINOMIALPDF function evaluates the binomial probability function. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_BINOMIALPDF function evaluates the probability that a binomial random variable ...",t:"IMSL_BINOMIALPDF"},"3241":{i:5.59873514342662E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_BINORMALCDF.htm",a:"The IMSL_BINORMALCDF function evaluates the bivariate normal distribution function. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_BINORMALCDF function evaluates the distribution function F of a ...",t:"IMSL_BINORMALCDF"},"3242":{i:0.000387414530745103,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_CHFAC.htm",a:"The IMSL_CHFAC procedure computes the Cholesky factor, L , of a real or complex symmetric positive definite matrix A , such that A = LL H . This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_CHFAC procedure ...",t:"IMSL_CHFAC"},"3243":{i:5.59873514342662E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_CHISQCDF.htm",a:"The IMSL_CHISQCDF function evaluates the chi-squared distribution or non-central chi-squared distribution. Using a keyword the inverse of these distributions can be computed. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support ...",t:"IMSL_CHISQCDF"},"3244":{i:0.000387414530745103,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_CHNNDFAC.htm",a:"The IMSL_CHNNDFAC function solves a real symmetric non-negative definite system of linear equations Ax = b . Computes the solution to Ax = b given the Cholesky factor. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support ...",t:"IMSL_CHNNDFAC"},"3245":{i:0.000387414530745103,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_CHNNDSOL.htm",a:"The IMSL_CHNNDSOL function solves a real symmetric nonnegative definite system of linear equations Ax = b . Computes the solution to Ax = b given the Cholesky factor. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support ...",t:"IMSL_CHNNDSOL"},"3246":{i:0.000387414530745103,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_CHSOL.htm",a:"The IMSL_CHSOL function solves a symmetric positive definite system of real or complex linear equations Ax = b . This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_CHSOL function solves a system of linear ...",t:"IMSL_CHSOL"},"3247":{i:0.000373239848751893,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_CONSTANT.htm",a:"The IMSL_CONSTANT function returns the value of various mathematical and physical constants. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The names allowed are listed in the table that follows. Values marked ...",t:"IMSL_CONSTANT"},"3248":{i:0.000539856839377264,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_CONT_TABLE.htm",a:"The IMSL_CONT_TABLE procedure sets up table to generate pseudorandom numbers from a general continuous distribution. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. IMSL_CONT_TABLE sets up a table that ...",t:"IMSL_CONT_TABLE"},"3249":{i:0.000373239848751893,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_DATETODAYS.htm",a:"The IMSL_DATETODAYS function computes the number of days from January 1, 1900, to the given date. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_DATETODAYS function returns the number of days from ...",t:"IMSL_DATETODAYS"},"3250":{i:0.000373239848751893,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_DAYSTODATE.htm",a:"The IMSL_DAYSTODATE procedure gives the date corresponding to the number of days since January 1, 1900. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_DAYSTODATE procedure computes the date corresponding ...",t:"IMSL_DAYSTODATE"},"3251":{i:0.000191957478247019,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_DISCR_TABLE.htm",a:"The IMSL_DISCR_TABLE function sets up table to generate pseudorandom numbers from a general discrete distribution. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. IMSL_DISCR_TABLE sets up a table that ...",t:"IMSL_DISCR_TABLE"},"3252":{i:0.000366875705816166,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_EIG.htm",a:"The IMSL_EIG function computes the eigenexpansion of a real or complex matrix A . If the matrix is known to be symmetric or Hermitian, a keyword can be used to trigger more efficient algorithms. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or ...",t:"IMSL_EIG"},"3253":{i:0.000366875705816166,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_EIGSYMGEN.htm",a:"The IMSL_EIGSYMGEN function computes the generalized eigenexpansion of a system Ax = λBx . The matrices A and B are real and symmetric, and B is positive definite. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. ...",t:"IMSL_EIGSYMGEN"},"3254":{i:0.000373239848751893,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_FAURE_INIT.htm",a:"The IMSL_FAURE_INIT function initializes the structure used for computing a shuffled Faure sequence. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. Discrepancy measures the deviation from uniformity of a point ...",t:"IMSL_FAURE_INIT"},"3255":{i:0.000373239848751893,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_FAURE_NEXT_PT.htm",a:"The IMSL_FAURE_NEXT_PT function computes a shuffled Faure sequence. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. Discrepancy measures the deviation from uniformity of a point set. The discrepancy of the point ...",t:"IMSL_FAURE_NEXT_PT"},"3256":{i:5.59873514342662E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_FCDF.htm",a:"The IMSL_FCDF function evaluates the F distribution function. Using a keyword, the inverse of the F distribution function can be evaluated. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_FCDF function ...",t:"IMSL_FCDF"},"3257":{i:5.59873514342662E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_GAMMACDF.htm",a:"The IMSL_GAMMACDF function evaluates the gamma distribution function. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_GAMMACDF function evaluates the distribution function, F , of a gamma random variable ...",t:"IMSL_GAMMACDF"},"3258":{i:0.000366875705816166,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_GENEIG.htm",a:"The IMSL_GENEIG procedure computes the generalized eigenexpansion of a system Ax = λBx . This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_GENEIG function uses the QZ algorithm to compute the eigenvalues ...",t:"IMSL_GENEIG"},"3259":{i:5.59873514342662E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_HYPERGEOCDF.htm",a:"The IMSL_HYPERGEOCDF function evaluates the hypergeometric distribution function. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_HYPERGEOCDF function evaluates the distribution function of a ...",t:"IMSL_HYPERGEOCDF"},"3260":{i:0.000699257534595712,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_INV.htm",a:"The IMSL_INV function computes the inverse of a real or complex, square matrix. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. Example Compute the incomplete beta function for the corresponding elements of A, B, ...",t:"IMSL_INV"},"3261":{i:0.000387414530745103,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_LINLSQ.htm",a:"The IMSL_LINLSQ function solves a linear least-squares problem with linear constraints. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_LINLSQ function solves linear least-squares problems with linear ...",t:"IMSL_LINLSQ"},"3262":{i:0.00071130595186316,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_LUFAC.htm",a:"The IMSL_LUFAC procedure computes the LU factorization of a real or complex matrix. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. Any of several related computations can be performed by using keywords. These ...",t:"IMSL_LUFAC"},"3263":{i:0.00181623233498602,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_LUSOL.htm",a:"The IMSL_LUSOL function solves a general system of real or complex linear equations Ax = b . This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_LUSOL function solves a system of linear algebraic equations ...",t:"IMSL_LUSOL"},"3264":{i:5.59873514342662E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_MACHINE.htm",a:"The IMSL_MACHINE function returns information describing the computer’s arithmetic. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_MACHINE function returns information describing the computer’s ...",t:"IMSL_MACHINE"},"3265":{i:0.000373239848751893,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_MATRIX_NORM.htm",a:"The IMSL_MATRIX_NORM function computes various norms of a rectangular matrix, a matrix stored in band format, and a matrix stored in coordinate format. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. By default, ...",t:"IMSL_MATRIX_NORM"},"3266":{i:0.000373239848751893,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_NORM.htm",a:"The IMSL_NORM function computes various norms of a vector or the difference of two vectors. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. By default, IMSL_NORM computes the Euclidean norm as follows: If the ...",t:"IMSL_NORM"},"3267":{i:5.59873514342662E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_NORMALCDF.htm",a:"The IMSL_NORMALCDF function evaluates the standard normal (Gaussian) distribution function. Using a keyword, the inverse of the standard normal (Gaussian) distribution can be evaluated. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical ...",t:"IMSL_NORMALCDF"},"3268":{i:5.59873514342662E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_POISSONCDF.htm",a:"The IMSL_POISSONCDF function evaluates the Poisson distribution function. This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_POISSONCDF function evaluates the distribution function of a Poisson random ...",t:"IMSL_POISSONCDF"},"3269":{i:5.81136161600282E-05,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_QRFAC.htm",a:"The IMSL_QRFAC procedure computes the QR factorization of a real matrix A . This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. The IMSL_QRFAC procedure computes a QR factorization of the matrix AP , where P is the ...",t:"IMSL_QRFAC"},"3270":{i:0.000101067211676751,u:"../Content/Reference Material/I/IMSL_Routines/IMSL_QRSOL.htm",a:"The IMSL_QRSOL function solves a real linear least-squares problem Ax = b . This routine requires an IDL Analyst license. For more information, contact your Exelis VIS sales or technical support representative. IMSL_QRSOL solves a system of linear least-squares problems Ax = b with column pivoting. ...",t:"IMSL_QRSOL"},});