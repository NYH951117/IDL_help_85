define({"1746":{i:0.000461152269957253,u:"../Content/Object Classes/File Format/IDLffXMLDOMNode__SetNode.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMNode:: SetNodeValue procedure method sets the node’s value to the contents of a string . This method is applicable only to the following node types: Attribute, Text, CDATA, Comment, and ProcessingInstruction. For all other node types, ...",t:"IDLffXMLDOMNode::SetNodeValue"},"1747":{i:0.000212084063268047,u:"../Content/Object Classes/File Format/IDLffXMLDOMNodeIterator.htm",a:"The IDLffXMLDOMNodeIterator class is used to navigate a DOM tree by creating a node object for accessing a DOM node and then destroying that node object as the iterator moves to another DOM node. The iterator creates an object and returns an object reference to that object each time the iterator ...",t:"IDLffXMLDOMNodeIterator"},"1748":{i:5.50327019655568E-05,u:"../Content/Object Classes/File Format/IDLffXLMDOMNodeIterator.htm",a:"IDLffXLMDOMNodeIterator Properties Objects of this class have no properties of their own, but do have properties inherited from any superclasses. ",t:"IDLffXLMDOMNodeIterator Properties"},"1749":{i:8.50779508524781E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMNodeIterator_.htm",a:"The IDLffXMLDOMNodeIterator:: Cleanup procedure method performs cleanup on the node-iterator object. As part of this cleanup, the method destroys any other objects that were created by the iterator object. In particular, the node object returned when the iterator was last moved is destroyed. The ...",t:"IDLffXMLDOMNodeIterator::Cleanup"},"1750":{i:8.50779508524781E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMNodeIterator_1.htm",a:"The IDLffXMLDOMNodeIterator:: Init function method initializes the object, but this class should not be instantiated directly. Instead, use the IDLffXMLDOMDocument::CreateNodeIterator method to create instances of this class. This class should not be subclassed by a user class because the classes ...",t:"IDLffXMLDOMNodeIterator::Init"},"1751":{i:0.000238460307617257,u:"../Content/Object Classes/File Format/IDLffXMLDOMNodeIterator_2.htm",a:"The IDLffXMLDOMNodeIterator:: NextNode function method creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object. The object refers to the node in the DOM tree that appears after the iterator’s current position in document-order traversal. The iterator\u0027s ...",t:"IDLffXMLDOMNodeIterator::NextNode"},"1752":{i:0.000238460307617257,u:"../Content/Object Classes/File Format/IDLffXMLDOMNodeIterator_3.htm",a:"The IDLffXMLDOMNodeIterator:: PreviousNode function method creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object. The object refers to the node in the DOM tree that appears before the iterator’s current position in document-order traversal. The ...",t:"IDLffXMLDOMNodeIterator::PreviousNode"},"1753":{i:0.000572162953558038,u:"../Content/Object Classes/File Format/IDLffXMLDOMNodeList.htm",a:"Superclasses | Creation | Properties | Methods | Version History The IDLffXMLDOMNodeList class is a container for nodes (see IDLffXMLDOMNode and its subclasses). Superclasses None Creation See IDLffXMLDOMNodeList::Init . Properties Objects of this class have no properties of their own, but do have ...",t:"IDLffXMLDOMNodeList"},"1754":{i:5.50327019655568E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMNodeList_Prop.htm",a:"IDLffXMLDOMNodeList Properties Objects of this class have no properties of their own, but do have properties inherited from any superclasses. ",t:"IDLffXMLDOMNodeList Properties"},"1755":{i:0.000236676394906179,u:"../Content/Object Classes/File Format/IDLffXMLDOMNodeList__Cle.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMNodeList:: Cleanup procedure method destroys both the object (that is, the accessing object in the IDL tree) and any objects created by that object. It does not modify the actual DOM tree. This class should not be subclassed by a user ...",t:"IDLffXMLDOMNodeList::Cleanup"},"1756":{i:0.000236676394906179,u:"../Content/Object Classes/File Format/IDLffXMLDOMNodeList__Get.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMNodeList:: GetLength returns the number of nodes in the node list. Syntax Result = Obj -\u003e[ IDLffXMLDOMNodeList ::]GetLength() Return Value Returns an integer containing the number of nodes in the node list. Arguments None ...",t:"IDLffXMLDOMNodeList::GetLength"},"1757":{i:0.000136089026636108,u:"../Content/Object Classes/File Format/IDLffXMLDOMNodeList__Ini.htm",a:"The IDLffXMLDOMNodeList:: Init function method initializes the object, but this class should not be instantiated directly. Instead, methods such as IDLffXMLDOMNode::GetFirstChild are used to create objects of all classes except IDLffXMLDOMDocument . This class should not be subclassed by a user ...",t:"IDLffXMLDOMNodeList::Init"},"1758":{i:0.000189891601803877,u:"../Content/Object Classes/File Format/IDLffXMLDOMNodeList__Ite.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMNodeList:: Item returns an object reference to an instance of a subclass of IDLffXMLDOMNode that refers to an indexed node from the node list. Syntax Result = Obj -\u003e[ IDLffXMLDOMNodeList ::]Item( Index ) Return Value ...",t:"IDLffXMLDOMNodeList::Item"},"1759":{i:0.000200344728087762,u:"../Content/Object Classes/File Format/IDLffXMLDOMNotation.htm",a:"Superclasses | Creation | Properties | Methods | Version History The IDLffXMLDOMNotation class represents a notation in the DTD. Notations are obtained from the IDLffXMLDOMDocumentType class. Superclasses IDLffXMLDOMNode Creation See IDLffXMLDOMNotation::Init . Properties Objects of this class have ...",t:"IDLffXMLDOMNotation"},"1760":{i:5.50327019655568E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMNotation_Prop.htm",a:"IDLffXMLDOMNotation Properties Objects of this class have no properties of their own, but do have properties inherited from any superclasses. Objects of this class inherit: IDLffXMLDOMNode ",t:"IDLffXMLDOMNotation Properties"},"1761":{i:0.000138018012195935,u:"../Content/Object Classes/File Format/IDLffXMLDOMNotation__Cle.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMNotation:: Cleanup procedure method destroys both the object (that is, the accessing object in the IDL tree) and any objects created by that object. It does not modify the actual DOM tree. This class should not be subclassed by a user ...",t:"IDLffXMLDOMNotation::Cleanup"},"1762":{i:0.000138018012195935,u:"../Content/Object Classes/File Format/IDLffXMLDOMNotation__Get.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMNotation:: GetPublicID returns the public ID of the notation. Syntax Result = Obj -\u003e[ IDLffXMLDOMNotation ::]GetPublicID() Return Value Returns a scalar string containing the public ID of the notation. Arguments None ...",t:"IDLffXMLDOMNotation::GetPublicID"},"1763":{i:0.000138018012195935,u:"../Content/Object Classes/File Format/IDLffXMLDOMNotation__Get1.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMNotation:: GetSystemID returns the system ID of the notation. Syntax Result = Obj -\u003e[ IDLffXMLDOMNotation ::]GetSystemID() Return Value Returns a scalar string containing the system ID of the notation. Arguments None ...",t:"IDLffXMLDOMNotation::GetSystemID"},"1764":{i:7.93603008418188E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMNotation__Ini.htm",a:"The IDLffXMLDOMNotation:: Init function method initializes the object, but this class should not be instantiated directly. Instead, methods such as IDLffXMLDOMNode::GetFirstChild are used to create objects of all classes except IDLffXMLDOMDocument . This class should not be subclassed by a user ...",t:"IDLffXMLDOMNotation::Init"},"1765":{i:0.000458224282979416,u:"../Content/Object Classes/File Format/IDLffXMLDOMProcessingIns.htm",a:"Superclasses | Creation | Properties | Methods | Version History The IDLffXMLDOMProcessingInstruction class represents a processing instruction node in an XML document. Superclasses IDLffXMLDOMNode Creation See IDLffXMLDOMProcessingInstruction::Init . Properties Objects of this class have no ...",t:"IDLffXMLDOMProcessingInstruction"},"1766":{i:5.50327019655568E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMProcessingIns1.htm",a:"IDLffXMLDOMProcessingInstruction Properties Objects of this class have no properties of their own, but do have properties inherited from any superclasses. Objects of this class inherit: IDLffXMLDOMNode ",t:"IDLffXMLDOMProcessingInstruction Properties"},"1767":{i:0.00019247705850965,u:"../Content/Object Classes/File Format/IDLffXMLDOMProcessingIns2.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMProcessingInstruction:: Cleanup procedure method destroys both the object (that is, the accessing object in the IDL tree) and any objects created by that object. It does not modify the actual DOM tree. This class should not be subclassed ...",t:"IDLffXMLDOMProcessingInstruction::Cleanup"},"1768":{i:0.00019247705850965,u:"../Content/Object Classes/File Format/IDLffXMLDOMProcessingIns3.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMProcessingInstruction:: GetData returns the content of the processing instruction. Syntax Result = Obj -\u003e[ IDLffXMLDOMProcessingInstruction ::]GetData() Return Value Returns a scalar string containing the content of the ...",t:"IDLffXMLDOMProcessingInstruction::GetData"},"1769":{i:0.00019247705850965,u:"../Content/Object Classes/File Format/IDLffXMLDOMProcessingIns4.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMProcessingInstruction:: GetTarget returns the target of the processing instruction. Syntax Result = Obj -\u003e[ IDLffXMLDOMProcessingInstruction ::]GetTarget() Return Value Returns a scalar string containing the target of the ...",t:"IDLffXMLDOMProcessingInstruction::GetTarget"},"1770":{i:0.000110674251588463,u:"../Content/Object Classes/File Format/IDLffXMLDOMProcessingIns5.htm",a:"The IDLffXMLDOMProcessingInstruction:: Init function method initializes the object, but this class should not be instantiated directly. Instead, methods such as IDLffXMLDOMNode::GetFirstChild are used to create objects of all classes except IDLffXMLDOMDocument . This class should not be subclassed ...",t:"IDLffXMLDOMProcessingInstruction::Init"},"1771":{i:0.00019247705850965,u:"../Content/Object Classes/File Format/IDLffXMLDOMProcessingIns6.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMProcessingInstruction:: SetData procedure method sets the content of the processing instruction. Syntax Obj -\u003e[ IDLffXMLDOMProcessingInstruction ::]SetData, Content Arguments Content A scalar string containing the data to set in the ...",t:"IDLffXMLDOMProcessingInstruction::SetData"},"1772":{i:0.000710746184727964,u:"../Content/Object Classes/File Format/IDLffXMLDOMText.htm",a:"Superclasses | Creation | Properties | Methods | Version History The IDLffXMLDOMText class references a text node in an XML document. Superclasses IDLffXMLDOMNode IDLffXMLDOMCharacterData Creation See IDLffXMLDOMText::Init . Properties Objects of this class have no properties of their own, but do ...",t:"IDLffXMLDOMText"},"1773":{i:5.50327019655568E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMText_Properti.htm",a:"IDLffXMLDOMText Properties Objects of this class have no properties of their own, but do have properties inherited from any superclasses. Objects of this class inherit: IDLffXMLDOMNode IDLffXMLDOMCharacterData ",t:"IDLffXMLDOMText Properties"},"1774":{i:0.000245804494838029,u:"../Content/Object Classes/File Format/IDLffXMLDOMText__Cleanup.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMText:: Cleanup procedure method destroys both the object (that is, the accessing object in the IDL tree) and any objects created by that object. It does not modify the actual DOM tree. This class should not be subclassed by a user class ...",t:"IDLffXMLDOMText::Cleanup"},"1775":{i:0.000141337585501802,u:"../Content/Object Classes/File Format/IDLffXMLDOMText__Init.htm",a:"The IDLffXMLDOMText:: Init function method initializes the object, but this class should not be instantiated directly. Instead, methods such as IDLffXMLDOMNode::GetFirstChild are used to create objects of all classes except IDLffXMLDOMDocument . This class should not be subclassed by a user class ...",t:"IDLffXMLDOMText::Init"},"1776":{i:0.000245804494838029,u:"../Content/Object Classes/File Format/IDLffXMLDOMText__IsIgnor.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMText:: IsIgnorableWhitespace function method indicates whether the text node contains ignorable whitespace. In order for the parser to distinguish between ignorable and non-ignorable white space, validation must be ...",t:"IDLffXMLDOMText::IsIgnorableWhitespace"},"1777":{i:0.000245804494838029,u:"../Content/Object Classes/File Format/IDLffXMLDOMText__SplitTe.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMText:: SplitText function method breaks a text node into two nodes, splitting the text at the specified offset. Both nodes are kept in the same tree as siblings. The method both modifies its caller and creates an instance ...",t:"IDLffXMLDOMText::SplitText"},"1778":{i:0.000333285399824334,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker.htm",a:"The IDLffXMLDOMTreeWalker class is used to navigate a DOM tree by creating a node object for accessing a DOM node and then destroying that node object as the tree walker is moved to another DOM node. The walker creates an object and returns an object reference to that object each time the walker ...",t:"IDLffXMLDOMTreeWalker"},"1779":{i:5.50327019655568E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker_Pr.htm",a:"IDLffXMLDOMTreeWalker Properties Objects of this class have no properties of their own, but do have properties inherited from any superclasses. ",t:"IDLffXMLDOMTreeWalker Properties"},"1780":{i:7.6824483124654E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker__C.htm",a:"The IDLffXMLDOMTreeWalker:: Cleanup procedure method performs cleanup on the tree-walker object. As part of this cleanup, the method destroys any other objects that were created by the walker object. The destruction of the walker object does not affect any corresponding nodes in the DOM tree. This ...",t:"IDLffXMLDOMTreeWalker::Cleanup"},"1781":{i:0.00025659095900481,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker__F.htm",a:"The IDLffXMLDOMTreeWalker:: FirstChild function method creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object. The object refers to the node in the DOM tree that is the first child of the node to which the walker is currently pointing. If the current ...",t:"IDLffXMLDOMTreeWalker::FirstChild"},"1782":{i:0.00025659095900481,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker__G.htm",a:"The IDLffXMLDOMTreeWalker:: GetCurrentNode function method creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object. The object refers to the node in the DOM tree to which the walker is currently pointing. This method destroys the object returned by the ...",t:"IDLffXMLDOMTreeWalker::GetCurrentNode"},"1783":{i:7.6824483124654E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker__I.htm",a:"The IDLffXMLDOMTreeWalker:: Init function method initializes the object, but this class should not be instantiated directly. Instead, use the IDLffXMLDOMDocument::CreateTreeWalker method to create instances of this class. This class should not be subclassed by a user class because the classes that ...",t:"IDLffXMLDOMTreeWalker::Init"},"1784":{i:0.00025659095900481,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker__L.htm",a:"The IDLffXMLDOMTreeWalker:: LastChild function method creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object. The object refers to the node in the DOM tree that is the last child of the node to which the walker is currently pointing. If the current ...",t:"IDLffXMLDOMTreeWalker::LastChild"},"1785":{i:0.000318757734159459,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker__N.htm",a:"The IDLffXMLDOMTreeWalker:: NextNode function method creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object. The object refers to the node in the DOM tree that is visited next after the walker\u0027s current node in document-order traversal. If the current ...",t:"IDLffXMLDOMTreeWalker::NextNode"},"1786":{i:0.00025659095900481,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker__N1.htm",a:"The IDLffXMLDOMTreeWalker:: NextSibling function method creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object. The object refers to the node in the DOM tree that is the next sibling of the node to which the walker is currently pointing. If the ...",t:"IDLffXMLDOMTreeWalker::NextSibling"},"1787":{i:0.00025659095900481,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker__P.htm",a:"The IDLffXMLDOMTreeWalker:: ParentNode function method creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object. The object refers to the node in the DOM tree that is the parent of the node to which the walker is currently pointing. If the search for a ...",t:"IDLffXMLDOMTreeWalker::ParentNode"},"1788":{i:0.00025659095900481,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker__P1.htm",a:"The IDLffXMLDOMTreeWalker:: PreviousNode function method creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object. The object refers to the node in the DOM tree that is visited before the walker\u0027s current node in document-order traversal. If the current ...",t:"IDLffXMLDOMTreeWalker::PreviousNode"},"1789":{i:0.00025659095900481,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker__P2.htm",a:"The IDLffXMLDOMTreeWalker:: PreviousSibling function method creates an object that is a subclass of IDLffXMLDOMNode and returns the object reference to that object. The object refers to the node in the DOM tree that is the previous sibling of the node to which the walker is currently pointing. If ...",t:"IDLffXMLDOMTreeWalker::PreviousSibling"},"1790":{i:7.6824483124654E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMTreeWalker__S.htm",a:"The IDLffXMLDOMTreeWalker:: SetCurrentNode procedure method sets the tree walker\u0027s current node to the specified node. You can use this method to position the walker at a particular node in the DOM tree. Syntax Obj -\u003e[ IDLffXMLDOMTreeWalker ::]SetCurrentNode, CurrentNode Arguments CurrentNode An ...",t:"IDLffXMLDOMTreeWalker::SetCurrentNode"},"1791":{i:0.00354865087955951,u:"../Content/Object Classes/File Format/IDLffXMLSAX.htm",a:"Superclasses | Subclasses | Creation | Properties | Methods | Version History An IDLffXMLSAX object uses an XML SAX level 2 parser. The XML parser allows you to read an XML file and store arbitrary data from the file in IDL variables. The parser object’s methods are callbacks . These methods are ...",t:"IDLffXMLSAX"},"1792":{i:0.000500096790241666,u:"../Content/Object Classes/File Format/IDLffXMLSAX_Properties.htm",a:"IDLffXMLSAX objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLffXMLSAX::GetProperty . Properties with the word “Yes” in the “Init” column of the property ...",t:"IDLffXMLSAX Properties"},"1793":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__AttributeDe.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: AttributeDecl procedure method is called when the parser detects an \u003c!ATTLIST ...\u003e declaration in a DTD. This method is called once for each attribute declared by the tag. Syntax Obj -\u003e[ IDLffXMLSAX ::]AttributeDecl, eName , aName , ...",t:"IDLffXMLSAX::AttributeDecl"},"1794":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__Characters.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: Characters procedure method is called when the parser detects text in the parsed document. Syntax Obj-\u003e [ IDLffXMLSAX ::]Characters, Chars Arguments Chars A string containing the text detected by the parser. Keywords None Version ...",t:"IDLffXMLSAX::Characters"},"1795":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__Cleanup.htm",a:"IDLffXMLSAX::Cleanup Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj-\u003e [ IDLffXMLSAX ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.6 Introduced ",t:"IDLffXMLSAX::Cleanup"},"1796":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__Comment.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: Comment procedure method is called when the parser detects a comment section of the form \u003c!-- ... --\u003e . Syntax Obj-\u003e [ IDLffXMLSAX ::]Comment, Comment Arguments Comment A string containing the text within the detected comment section, ...",t:"IDLffXMLSAX::Comment"},"1797":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__ElementDecl.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: ElementDecl procedure method is called when the parser detects an \u003c!ELEMENT ...\u003e declaration in the DTD. Syntax Obj-\u003e [ IDLffXMLSAX ::]ElementDecl, Name , Model Arguments Name A string containing the name of the element. Model A ...",t:"IDLffXMLSAX::ElementDecl"},"1798":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__EndCDATA.htm",a:"IDLffXMLSAX::EndCDATA Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: EndCDATA procedure method is called when the parser detects the end of a \u003c![CDATA[...]]\u003e text section. Syntax Obj-\u003e [ IDLffXMLSAX ::]EndCDATA Arguments None Keywords None Version History 5.6 Introduced ",t:"IDLffXMLSAX::EndCDATA"},"1799":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__EndDocument.htm",a:"IDLffXMLSAX::EndDocument Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: EndDocument procedure method is called when the parser detects the end of the XML document. Syntax Obj-\u003e [ IDLffXMLSAX ::]EndDocument Arguments None Keywords None Version History 5.6 Introduced ",t:"IDLffXMLSAX::EndDocument"},"1800":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__EndDTD.htm",a:"IDLffXMLSAX::EndDTD Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: EndDTD procedure method is called when the parser detects the end of a Document Type Definition (DTD). Syntax Obj-\u003e [ IDLffXMLSAX ::]EndDTD Arguments None Keywords None Version History 5.6 Introduced ",t:"IDLffXMLSAX::EndDTD"},"1801":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__EndElement.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: EndElement procedure method is called when the parser detects the end of an element. Syntax Obj-\u003e [ IDLffXMLSAX ::]EndElement, URI , Local , qName Arguments URI A string containing the namespace URI with which the element is ...",t:"IDLffXMLSAX::EndElement"},"1802":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__EndEntity.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: EndEntity procedure method is called when the parser detects the end of an internal or external entity expansion. Syntax Obj-\u003e [ IDLffXMLSAX ::]EndEntity, Name Arguments Name A string containing the name of the entity. Keywords None ...",t:"IDLffXMLSAX::EndEntity"},"1803":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__EndPrefixMa.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: EndPrefixMapping procedure method is called when a previously declared prefix mapping goes out of scope. Syntax Obj-\u003e [ IDLffXMLSAX ::]EndPrefixMapping, Prefix Arguments Prefix A string containing the namespace prefix that is going ...",t:"IDLffXMLSAX::EndPrefixMapping"},"1804":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__Error.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: Error procedure method is called when the parser detects an error that is not expected to be fatal. This method prints an IDL error string to the IDL output log and allows the parser to continue processing. For example, a violation of ...",t:"IDLffXMLSAX::Error"},"1805":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__ExternalEnt.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: ExternalEntityDecl procedure method is called when the parser detects an \u003c!ENTITY ...\u003e declarations in the DTD for a parsed external entity. Syntax Obj-\u003e [ IDLffXMLSAX ::]ExternalEntityDecl, Name , PublicID , SystemID Arguments Name A ...",t:"IDLffXMLSAX::ExternalEntityDecl"},"1806":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__FatalError.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: FatalError procedure method is called when the parser detects a fatal error. When called, parsing will normally stop, but may sometimes continue long enough to report further errors. This method prints an IDL error string to the IDL ...",t:"IDLffXMLSAX::FatalError"},"1807":{i:0.00031920998979579,u:"../Content/Object Classes/File Format/IDLffXMLSAX__GetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: GetProperty procedure method is used to get the values of various properties of the parser. Syntax Obj-\u003e [ IDLffXMLSAX ::]GetProperty [, PROPERTY=variable ] Arguments None Keywords Any property listed under IDLffXMLSAX Properties that ...",t:"IDLffXMLSAX::GetProperty"},"1808":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__IgnorableWh.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: IgnorableWhitespace procedure method is called when the parser detects whitespace that separates elements in an element content model. Syntax Obj-\u003e [ IDLffXMLSAX ::]IgnorableWhitespace, Chars Arguments Chars A string containing the ...",t:"IDLffXMLSAX::IgnorableWhitespace"},"1809":{i:0.00031920998979579,u:"../Content/Object Classes/File Format/IDLffXMLSAX__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLSAX:: Init function method initializes an XML parser object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. In most cases, you cannot call the Init method ...",t:"IDLffXMLSAX::Init"},"1810":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__InternalEnt.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: InternalEntityDecl procedure method is called when the parser detects an \u003c!ENTITY ...\u003e declaration in a DTD for (parsed) internal entities. The entity can be either a general entity or a parameter entity. Syntax Obj-\u003e [ IDLffXMLSAX ...",t:"IDLffXMLSAX::InternalEntityDecl"},"1811":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__NotationDec.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: NotationDecl procedure method is called when the parser detects a \u003c!NOTATION ...\u003e declaration in a DTD. Syntax Obj-\u003e [ IDLffXMLSAX ::]NotationDecl, Name , PublicID , SystemID Arguments Name A string containing the notation name. ...",t:"IDLffXMLSAX::NotationDecl"},"1812":{i:0.00035592383797807,u:"../Content/Object Classes/File Format/IDLffXMLSAX__ParseFile.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: ParseFile procedure method parses the specified XML file. During the parsing operation, different object methods are called as different items within the XML file are detected. When this method returns, the parse operation is ...",t:"IDLffXMLSAX::ParseFile"},"1813":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__ProcessingI.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: ProcessingInstruction procedure method is called when the parser detects a processing instruction. Syntax Obj-\u003e [ IDLffXMLSAX ::]ProcessingInstruction, Target , Data Arguments Target A string specifying the target, which is the ...",t:"IDLffXMLSAX::ProcessingInstruction"},"1814":{i:0.00031920998979579,u:"../Content/Object Classes/File Format/IDLffXMLSAX__SetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: SetProperty procedure method is used to set the values of various properties of the parser. Syntax Obj-\u003e [ IDLffXMLSAX ::]SetProperty [, PROPERTY=value ] Arguments None Keywords Any property listed under IDLffXMLSAX Properties that ...",t:"IDLffXMLSAX::SetProperty"},});