define({"1954":{i:0.000110306286670619,u:"../Content/Object Classes/Graphics/IDLgrPlot__SetVertexAttr.htm",a:"The IDLgrPlot::SetVertexAttributeData procedure method passes a set of per-vertex attribute data to a vertex shader program. When an IDLgrShader object is associated with the plot via the SHADER property, this attribute data is made available, a vertex\u0027s worth at a time, to the vertex shader program ...",t:"IDLgrPlot::SetVertexAttributeData"},"1955":{i:0.000617912267350201,u:"../Content/Object Classes/Graphics/IDLgrPolygon.htm",a:"A polygon object represents one or more polygons that share a given set of vertices and rendering attributes. All polygons must be convex—that is, a line connecting any pair of vertices on the polygon cannot fall outside the polygon. Concave polygons can be converted to a set of convex polygons ...",t:"IDLgrPolygon"},"1956":{i:0.000399454980407255,u:"../Content/Object Classes/Graphics/IDLgrPolygon_Properties.htm",a:"IDLgrPolygon objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrPolygon::GetProperty . Properties with the word “Yes” in the “Init” column of the property ...",t:"IDLgrPolygon Properties"},"1957":{i:0.000160954979978493,u:"../Content/Object Classes/Graphics/IDLgrPolygon__Cleanup.htm",a:"IDLgrPolygon::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrPolygon:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrPolygon ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.0 Introduced ",t:"IDLgrPolygon::Cleanup"},"1958":{i:0.000117522530117663,u:"../Content/Object Classes/Graphics/IDLgrPolygon__GetCTM.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPolygon:: GetCTM The IDLgrPolygon::GetCTM function method returns the 4-by-4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree. Syntax Result = Obj -\u003e[ IDLgrPolygon ::]GetCTM( [, ...",t:"IDLgrPolygon::GetCTM"},"1959":{i:0.000112340613274383,u:"../Content/Object Classes/Graphics/IDLgrPolygon__GetMultiTe.htm",a:"The IDLgrPolygon::GetMultiTextureCoord returns the texture coordinates associated with a given Unit . This method is useful when a shader program defined by an IDLgrShader object applies more than a single texture to an object. Syntax Obj -\u003e[ IDLgrPolygon ::]GetMultiTextureCoord, Unit , TexCoord ...",t:"IDLgrPolygon::GetMultiTextureCoord"},"1960":{i:0.000176515676753438,u:"../Content/Object Classes/Graphics/IDLgrPolygon__GetPropert.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPolygon:: GetProperty procedure method retrieves the value of the property or group of properties for the polygons. Syntax Obj -\u003e[ IDLgrPolygon ::]GetProperty[, PROPERTY=variable ] Arguments There are no arguments for this methods. Keywords ...",t:"IDLgrPolygon::GetProperty"},"1961":{i:0.000113761844853219,u:"../Content/Object Classes/Graphics/IDLgrPolygon__GetVertexA.htm",a:"The IDLgrPolygon::GetVertexAttributeData procedure method retrieves the data associated with a named attribute variable containing per-vertex attribute data. This method is useful when a shader program defined by an IDLgrShader object modifies the vertices of an object. Syntax Obj -\u003e[ IDLgrPolygon ...",t:"IDLgrPolygon::GetVertexAttributeData"},"1962":{i:0.000233971717096529,u:"../Content/Object Classes/Graphics/IDLgrPolygon__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | | Version History The IDLgrPolygon:: Init function method initializes the polygons object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call ...",t:"IDLgrPolygon::Init"},"1963":{i:0.000116421369601585,u:"../Content/Object Classes/Graphics/IDLgrPolygon__SetMultiTe.htm",a:"The IDLgrPolygon::SetMultiTextureCoord procedure method passes texture coordinates to a shader program when the shader program applies more than one texture to an object. The shader program accesses these texture coordinates by using the GLSL predefined uniform variable gl_MultiTexCoord n , where n ...",t:"IDLgrPolygon::SetMultiTextureCoord"},"1964":{i:0.000176515676753438,u:"../Content/Object Classes/Graphics/IDLgrPolygon__SetPropert.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPolygon:: SetProperty procedure method sets the value of the property or group of properties for the polygons. Syntax Obj -\u003e[ IDLgrPolygon ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrPolygon ...",t:"IDLgrPolygon::SetProperty"},"1965":{i:0.000124781531289326,u:"../Content/Object Classes/Graphics/IDLgrPolygon__SetVertexA.htm",a:"The IDLgrPolygon::SetVertexAttributeData procedure method passes a set of per-vertex attribute data to a vertex shader program. When an IDLgrShader object is associated with the polygon via the SHADER property, this attribute data is made available, a vertex\u0027s worth at a time, to the vertex shader ...",t:"IDLgrPolygon::SetVertexAttributeData"},"1966":{i:0.000591680348555091,u:"../Content/Object Classes/Graphics/IDLgrPolyline.htm",a:"A polyline object represents one or more polylines that share a set of vertices and rendering attributes. An IDLgrPolyline object is an atomic graphic object ; it is one of the basic drawable elements of the IDL Object Graphics system, and it is not a container for other objects. Superclasses ...",t:"IDLgrPolyline"},"1967":{i:0.000538139359790045,u:"../Content/Object Classes/Graphics/IDLgrPolyline_Properties.htm",a:"IDLgrPolyline objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrPolyline::GetProperty . Properties with the word “Yes” in the “Init” column of the ...",t:"IDLgrPolyline Properties"},"1968":{i:0.000192899186424535,u:"../Content/Object Classes/Graphics/IDLgrPolyline__Cleanup.htm",a:"IDLgrPolyline::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrPolyline:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrPolyline ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.0 Introduced ",t:"IDLgrPolyline::Cleanup"},"1969":{i:0.000140845591468794,u:"../Content/Object Classes/Graphics/IDLgrPolyline__GetCTM.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPolyline:: GetCTM function method returns the 4-by-4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree. Syntax Result = Obj -\u003e[ IDLgrPolyline ::]GetCTM( [, DESTINATION = objref ] ...",t:"IDLgrPolyline::GetCTM"},"1970":{i:0.000225688032757333,u:"../Content/Object Classes/Graphics/IDLgrPolyline__GetProper.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPolyline:: GetProperty procedure method retrieves the value of a property or group of properties for the polylines. Syntax Obj -\u003e[ IDLgrPolyline ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under ...",t:"IDLgrPolyline::GetProperty"},"1971":{i:0.000136338524851301,u:"../Content/Object Classes/Graphics/IDLgrPolyline__GetVertex.htm",a:"The IDLgrPolyline::GetVertexAttributeData procedure method retrieves the data associated with a named attribute variable containing per-vertex attribute data. This method is useful when a shader program defined by an IDLgrShader object modifies the vertices of an object. Syntax Obj -\u003e[ IDLgrPolyline ...",t:"IDLgrPolyline::GetVertexAttributeData"},"1972":{i:0.000263258836047095,u:"../Content/Object Classes/Graphics/IDLgrPolyline__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrPolyline:: Init function method initializes the polylines object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call ...",t:"IDLgrPolyline::Init"},"1973":{i:0.000225688032757333,u:"../Content/Object Classes/Graphics/IDLgrPolyline__SetProper.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPolylines:: SetProperty procedure method sets the value of a property or group of properties for the polylines. Syntax Obj -\u003e[ IDLgrPolyline ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrPolyline ...",t:"IDLgrPolyline::SetProperty"},"1974":{i:0.000149545315786634,u:"../Content/Object Classes/Graphics/IDLgrPolyline__SetVertex.htm",a:"The IDLgrPolyline::SetVertexAttributeData procedure method passes a set of per-vertex attribute data to a vertex shader program. When an IDLgrShader object is associated with the polyline via the SHADER property, this attribute data is made available, a vertex\u0027s worth at a time, to the vertex shader ...",t:"IDLgrPolyline::SetVertexAttributeData"},"1975":{i:0.000562730750533059,u:"../Content/Object Classes/Graphics/IDLgrPrinter.htm",a:"Superclasses | Creation | Properties | Methods | Examples | Version History A printer object represents a hardcopy graphics destination. When a printer object is created, the printer device to which it refers is the default system printer. To change the printer, utilize the printer dialogs (see ...",t:"IDLgrPrinter"},"1976":{i:0.000252748656948581,u:"../Content/Object Classes/Graphics/IDLgrPrinter_Properties.htm",a:"IDLgrPrinter objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrPrinter::GetProperty . Properties with the word “Yes” in the “Init” column of the property ...",t:"IDLgrPrinter Properties"},"1977":{i:0.00014770087497917,u:"../Content/Object Classes/Graphics/IDLgrPrinter__Cleanup.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPrinter:: Cleanup procedure method performs all cleanup on the object. If a document is open (that is, if graphics have been draw to the printer), the document is closed and the pending graphics are sent to the current printer. Syntax Obj -\u003e ...",t:"IDLgrPrinter::Cleanup"},"1978":{i:0.000102322771118864,u:"../Content/Object Classes/Graphics/IDLgrPrinter__Draw.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPrinter:: Draw procedure method draws the given picture to this graphics destination. Printing in Bitmap or Vector Graphic Mode The IDLgrPrinter::Draw method VECTOR keyword generates output in bitmap or vector format. The following table shows ...",t:"IDLgrPrinter::Draw "},"1979":{i:0.000107844966362188,u:"../Content/Object Classes/Graphics/IDLgrPrinter__GetContigu.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPrinter:: GetContiguousPixels function method returns an array of long integers whose length is equal to the number of colors available in the index color mode (that is, the value of the N_COLORS property). The returned array marks contiguous ...",t:"IDLgrPrinter::GetContiguousPixels"},"1980":{i:0.000118504092987097,u:"../Content/Object Classes/Graphics/IDLgrPrinter__GetFontnam.htm",a:"The I DLgrPrinter::GetFontnames function method returns the list of available fonts that can be used in IDLgrFont objects. This method will only return the names of the available TrueType fonts. Hershey fonts will not be returned. Syntax Result = Obj -\u003e[ IDLgrPrinter ::]GetFontnames( FamilyName [, ...",t:"IDLgrPrinter::GetFontnames"},"1981":{i:0.00016132878989503,u:"../Content/Object Classes/Graphics/IDLgrPrinter__GetPropert.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPrinter:: GetProperty procedure method retrieves the value of a property or group of properties for the printer. Syntax Obj -\u003e[ IDLgrPrinter ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under IDLgrPrinter ...",t:"IDLgrPrinter::GetProperty"},"1982":{i:0.000107844966362188,u:"../Content/Object Classes/Graphics/IDLgrPrinter__GetTextDim.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPrinter:: GetTextDimensions function method retrieves the dimensions of a text or axis object that will be rendered in a window. In order to compute the effective text dimensions, the object must be inserted into an object graphics hierarchy ...",t:"IDLgrPrinter::GetTextDimensions"},"1983":{i:0.00016132878989503,u:"../Content/Object Classes/Graphics/IDLgrPrinter__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrPrinter:: Init function method initializes the printer object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the ...",t:"IDLgrPrinter::Init"},"1984":{i:0.00014770087497917,u:"../Content/Object Classes/Graphics/IDLgrPrinter__NewDocumen.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPrinter:: NewDocument procedure method closes the current document (a page or group of pages), which causes any pending output to be sent to the printer, finishing the printer job. Syntax Obj -\u003e[ IDLgrPrinter ::]NewDocument Arguments None ...",t:"IDLgrPrinter::NewDocument"},"1985":{i:0.00014770087497917,u:"../Content/Object Classes/Graphics/IDLgrPrinter__NewPage.htm",a:"IDLgrPrinter::NewPage Syntax | Arguments | Keywords | Version History The IDLgrPrinter:: NewPage procedure method issues a new page command to the printer. Syntax Obj -\u003e[ IDLgrPrinter ::]NewPage Arguments None Keywords None Version History 5.0 Introduced ",t:"IDLgrPrinter::NewPage"},"1986":{i:0.000102322771118864,u:"../Content/Object Classes/Graphics/IDLgrPrinter__QueryRequi.htm",a:"The IDLgrPrinter::QueryRequiredTiles function method is used in conjunction with an IDLgrImage object that supports tiling. Initially, this type of IDLgrImage object contains no data. Call this method to determine what data to load into this destination object based on which tiles are visible in a ...",t:"IDLgrPrinter::QueryRequiredTiles "},"1987":{i:0.00016132878989503,u:"../Content/Object Classes/Graphics/IDLgrPrinter__SetPropert.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrPrinter:: SetProperty procedure method sets the value of a property or group of properties for the printer. Syntax Obj -\u003e[ IDLgrPrinter ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrPrinter Properties ...",t:"IDLgrPrinter::SetProperty"},"1988":{i:0.000385423449674764,u:"../Content/Object Classes/Graphics/IDLgrROI.htm",a:"Superclasses | Creation | Properties | Methods | Version History The IDLgrROI object class is an object graphics representation of a region of interest. Superclasses IDLanROI IDLitComponent Creation See IDLgrROI::Init . Properties Objects of this class have the following properties. See IDLgrROI ...",t:"IDLgrROI"},"1989":{i:0.000227086060324442,u:"../Content/Object Classes/Graphics/IDLgrROI_Properties.htm",a:"IDLgrROI objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrROI::GetProperty . Properties with the word “Yes” in the “Init” column of the property table ...",t:"IDLgrROI Properties"},"1990":{i:0.000152685843488175,u:"../Content/Object Classes/Graphics/IDLgrROI__Cleanup.htm",a:"IDLgrROI::Cleanup Syntax | Arguments | Keywords | Version History The IDL grROI::Cleanup procedure method performs all cleanup for a region of interest object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrROI ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.3 Introduced ",t:"IDLgrROI::Cleanup"},"1991":{i:0.000144948260016377,u:"../Content/Object Classes/Graphics/IDLgrROI__GetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDL grROI::GetProperty procedure method retrieves the value of a property or group of properties for the Object Graphics region. Syntax Obj -\u003e[ IDLgrROI ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under IDLgrROI ...",t:"IDLgrROI::GetProperty"},"1992":{i:0.000144948260016377,u:"../Content/Object Classes/Graphics/IDLgrROI__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDL grROI::Init function method initializes an Object Graphics region of interest. Init methods are special life cycle methods, and as such cannot be called outside the context of object creation. This means that in most cases, you ...",t:"IDLgrROI::Init"},"1993":{i:0.00010577601035028,u:"../Content/Object Classes/Graphics/IDLgrROI__PickVertex.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDL grROI::PickVertex function method picks a vertex of the region which, when projected onto the given destination device, is nearest to the given 2-D device coordinate. Syntax Result = Obj -\u003e[ IDLgrROI ::]PickVertex( Dest , View , ...",t:"IDLgrROI::PickVertex"},"1994":{i:0.000144948260016377,u:"../Content/Object Classes/Graphics/IDLgrROI__SetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDL grROI::SetProperty procedure method sets the value of a property or group of properties for the Object Graphics region. Syntax Obj -\u003e[ IDLgrROI ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrROI ...",t:"IDLgrROI::SetProperty"},"1995":{i:0.000410954816417543,u:"../Content/Object Classes/Graphics/IDLgrROIGroup.htm",a:"Superclasses | Creation | Methods | Version History The IDL grROIGroup object class is an Object Graphics representation of a group of regions of interest. Superclasses IDLanROIGroup . IDLitComponent Creation See IDLgrROIGroup::Init . Properties Objects of this class have the following properties. ...",t:"IDLgrROIGroup"},"1996":{i:0.000247122211661027,u:"../Content/Object Classes/Graphics/IDLgrROIGroup_Properties.htm",a:"IDLgrROIGroup objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrROIGroup::GetProperty . Properties with the word “Yes” in the “Init” column of the ...",t:"IDLgrROIGroup Properties"},"1997":{i:0.000121100090975224,u:"../Content/Object Classes/Graphics/IDLgrROIGroup__Add.htm",a:"Syntax | Arguments | Keywords | Version History The IDL grROIGroup::Add procedure method adds a region to the region group. Only objects of the IDLgrROI class may be added to the group. The regions in the group must all be of the same type: all points, all paths, or all polygons. Syntax Obj -\u003e[ ...",t:"IDLgrROIGroup::Add"},"1998":{i:0.000150936428449377,u:"../Content/Object Classes/Graphics/IDLgrROIGroup__Cleanup.htm",a:"Syntax | Arguments | Keywords | Version History The IDL grROIGroup::Cleanup procedure method performs all cleanup for an Object Graphics region of interest group object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrROIGroup ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.3 ...",t:"IDLgrROIGroup::Cleanup"},"1999":{i:0.000157737493393819,u:"../Content/Object Classes/Graphics/IDLgrROIGroup__GetProper.htm",a:"Syntax | Arguments | Keywords | Version History The IDL grROIGroup::Get Property procedure method retrieves the value of a property or group of properties for the region group. Syntax Obj -\u003e[ IDLgrROIGroup ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under ...",t:"IDLgrROIGroup::GetProperty"},"2000":{i:0.000157737493393819,u:"../Content/Object Classes/Graphics/IDLgrROIGroup__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDL grROIGroup::Init function method initializes an Object Graphics region of interest group object. Init methods are special life cycle methods, and as such cannot be called outside the context of object creation. This means that in ...",t:"IDLgrROIGroup::Init"},"2001":{i:0.000104564308566192,u:"../Content/Object Classes/Graphics/IDLgrROIGroup__PickRegio.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDL grROIGroup::PickRegion function method picks a region within the group which, when projected onto the given destination device, is nearest to the given 2-D device coordinate. Syntax Result = Obj -\u003e[ IDLgrROIGroup ::]PickRegion( ...",t:"IDLgrROIGroup::PickRegion"},"2002":{i:0.000150936428449377,u:"../Content/Object Classes/Graphics/IDLgrROIGroup__Remove.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrROIGroup:: Remove procedure method removes an object from the ROI group. Syntax Obj-\u003e [ IDLgrROIGroup ::]Remove [, Child_object ] [, POSITION = index ] [, / ALL ] Arguments Child_object An object reference or array of object references for the ...",t:"IDLgrROIGroup::Remove"},"2003":{i:0.000157737493393819,u:"../Content/Object Classes/Graphics/IDLgrROIGroup__SetProper.htm",a:"Syntax | Arguments | Keywords | Version History The IDL grROIGroup::Set Property procedure method sets the value of a property or group of properties for the region group. Syntax Obj -\u003e[ IDLgrROIGroup ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrROIGroup ...",t:"IDLgrROIGroup::SetProperty"},"2004":{i:0.000601826474731197,u:"../Content/Object Classes/Graphics/IDLgrScene.htm",a:"Superclasses | Creation | Properties | Methods | Version History A scene object represents the entire scene to be drawn and serves as a container of IDLgrView or IDLgrViewgroup objects. Superclasses IDL_Container IDLitComponent Creation See IDLgrScene::Init . Properties Objects of this class have ...",t:"IDLgrScene"},"2005":{i:0.000290648282262284,u:"../Content/Object Classes/Graphics/IDLgrScene_Properties.htm",a:"IDLgrScene objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrScene::GetProperty . Properties with the word “Yes” in the “Init” column of the property ...",t:"IDLgrScene Properties"},"2006":{i:0.000124015850231194,u:"../Content/Object Classes/Graphics/IDLgrScene__Add.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrScene::Add function method verifies that the added item is an instance of an IDLgrView or IDLgrViewgroup object. If it is, IDLgrScene:Add adds the view or viewgroup to the specified scene. Syntax Obj -\u003e[ IDLgrScene ::]Add, View [, POSITION = ...",t:"IDLgrScene::Add"},"2007":{i:0.000169848212902232,u:"../Content/Object Classes/Graphics/IDLgrScene__Cleanup.htm",a:"IDLgrScene::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrScene:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrScene ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.0 Introduced ",t:"IDLgrScene::Cleanup"},"2008":{i:0.000169848212902232,u:"../Content/Object Classes/Graphics/IDLgrScene__GetByName.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrScene:: GetByName function method finds contained objects by name and returns the object reference to the named object. If the named object is not found, the GetByName function returns a null object reference. The GetByName function does not ...",t:"IDLgrScene::GetByName"},"2009":{i:0.00018551981590197,u:"../Content/Object Classes/Graphics/IDLgrScene__GetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrScene:: GetProperty procedure method retrieves the value of a property or group of properties for the contour. Syntax Obj -\u003e[ IDLgrScene ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under IDLgrScene ...",t:"IDLgrScene::GetProperty"},"2010":{i:0.00018551981590197,u:"../Content/Object Classes/Graphics/IDLgrScene__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrScene:: Init function method initializes the scene object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the Init ...",t:"IDLgrScene::Init"},"2011":{i:0.00018551981590197,u:"../Content/Object Classes/Graphics/IDLgrScene__SetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrScene:: SetProperty procedure method sets the value of a property or group of properties for the buffer. Syntax Obj -\u003e[ IDLgrScene ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrScene Properties that ...",t:"IDLgrScene::SetProperty"},"2012":{i:0.00237680665282661,u:"../Content/Object Classes/Graphics/IDLgrShader.htm",a:"Superclasses | Creation | Properties | Methods | Examples | Version History | See Also A shader object provides access to the hardware-based processing power available on some modern graphics cards. This allows computationally intensive image processing operations to be delegated to the Graphics ...",t:"IDLgrShader"},"2013":{i:0.000975832861616704,u:"../Content/Object Classes/Graphics/IDLgrShader_Properties.htm",a:"IDLgrShader objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrShader::GetProperty . Properties with the word “Yes” in the “Init” column of the property ...",t:"IDLgrShader Properties"},"2014":{i:0.000365990118822926,u:"../Content/Object Classes/Graphics/IDLgrShader__Cleanup.htm",a:"IDLgrShader::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrShader:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrShader ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 6.4 Introduced ",t:"IDLgrShader::Cleanup"},"2015":{i:0.000365296557181953,u:"../Content/Object Classes/Graphics/IDLgrShader__Filter.htm",a:"The IDLgrShader::Filter function method, implemented only in an IDLgrShader subclass, provides a way to implement a software-based fallback for an image filtering shader program when the graphics card hardware does not support shading language. This function is only available for shader objects ...",t:"IDLgrShader::Filter"},"2016":{i:0.000438318914307962,u:"../Content/Object Classes/Graphics/IDLgrShader__GetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrShader:: GetProperty procedure method returns the value of a property or group of properties for the shader. Syntax Obj -\u003e[ IDLgrShader ::]GetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrShader Properties ...",t:"IDLgrShader::GetProperty"},"2017":{i:0.000340494250859016,u:"../Content/Object Classes/Graphics/IDLgrShader__GetUniformV.htm",a:"The IDLgrShader::GetUniformVariable procedure method returns the value of a named uniform variable. A uniform variable provides a way to pass small amounts of data to a shader program. It can enable interactivity by linking user interface control changes to program updates. The GetUniformVariable ...",t:"IDLgrShader::GetUniformVariable"},"2018":{i:0.000438318914307962,u:"../Content/Object Classes/Graphics/IDLgrShader__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrShader:: Init function method initializes the shader object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the ...",t:"IDLgrShader::Init"},"2019":{i:0.000438318914307962,u:"../Content/Object Classes/Graphics/IDLgrShader__SetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrShader:: SetProperty procedure method sets the value of a property or group of properties for the shader. Syntax Obj -\u003e[ IDLgrShader ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrShader Properties ...",t:"IDLgrShader::SetProperty"},"2020":{i:0.000459001137500166,u:"../Content/Object Classes/Graphics/IDLgrShader__SetUniformV.htm",a:"The IDLgrShader::SetUniformVariable procedure method assigns a value to a named uniform variable. A uniform variable provides a way to pass small amounts of data to a shader program. It can enable interactivity by linking user interface control changes to shader program updates. IDL stores the Name ...",t:"IDLgrShader::SetUniformVariable"},"2021":{i:0.000808726416805789,u:"../Content/Object Classes/Graphics/IDLgrShaderBytscl.htm",a:"Superclasses | Creation | Properties | Methods | Examples | Version History | See Also A shader byte-scale object is a subclass of IDLgrShader that can be associated with an IDLgrImage object via the SHADER property. This object lets you quickly perform a BYTSCL operation on the image data as it is ...",t:"IDLgrShaderBytscl"},"2022":{i:0.00054944951026711,u:"../Content/Object Classes/Graphics/IDLgrShaderBytscl_Proper.htm",a:"IDLgrShaderBytscl objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrShaderBytscl::GetProperty . Properties with the word “Yes” in the “Init” column of the ...",t:"IDLgrShaderBytscl Properties"},});