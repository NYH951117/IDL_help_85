define({"2023":{i:0.000290179142624801,u:"../Content/Object Classes/Graphics/IDLgrShaderBytscl__Clean.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrShaderBytscl:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrShaderBytscl ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 6.4 Introduced ",t:"IDLgrShaderBytscl::Cleanup"},"2024":{i:0.000310001634039186,u:"../Content/Object Classes/Graphics/IDLgrShaderBytscl__GetPr.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrShaderBytscl:: GetProperty procedure method returns the value of a property or group of properties for the shader. Syntax Obj -\u003e[ IDLgrShaderBytscl ::]GetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under ...",t:"IDLgrShaderBytscl::GetProperty"},"2025":{i:0.000310001634039186,u:"../Content/Object Classes/Graphics/IDLgrShaderBytscl__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrShaderBytscl:: Init function method initializes the surface object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call ...",t:"IDLgrShaderBytscl::Init"},"2026":{i:0.000310001634039186,u:"../Content/Object Classes/Graphics/IDLgrShaderBytscl__SetPr.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrShaderBytscl:: SetProperty procedure method sets the value of a property or group of properties for the shader. Syntax Obj -\u003e[ IDLgrShaderBytscl ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under ...",t:"IDLgrShaderBytscl::SetProperty"},"2027":{i:0.00054494845970035,u:"../Content/Object Classes/Graphics/IDLgrShaderConvol3.htm",a:"A convolution shader object is a subclass of IDLgrShader that can be associated with an IDLgrImage object via the SHADER property to perform general 3x3 convolution operations such as smoothing and edge detection on the image data as it is drawn to the screen. If hardware shader support is ...",t:"IDLgrShaderConvol3"},"2028":{i:0.000281364880432012,u:"../Content/Object Classes/Graphics/IDLgrShaderConvol3_Prope.htm",a:"IDLgrShaderConvol3 objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrShaderConvol3::GetProperty . Properties with the word “Yes” in the “Init” column of ...",t:"IDLgrShaderConvol3 Properties"},"2029":{i:0.000101353949634749,u:"../Content/Object Classes/Graphics/IDLgrShaderConvol3__Clea.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrShaderConvol3:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrShaderConvol3 ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 6.4 Introduced ",t:"IDLgrShaderConvol3::Cleanup"},"2030":{i:0.00014121434400537,u:"../Content/Object Classes/Graphics/IDLgrShaderConvol3__GetP.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrShaderConvol3:: GetProperty procedure method returns the value of a property or group of properties for the shader. Syntax Obj -\u003e[ IDLgrShaderConvol3 ::]GetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under ...",t:"IDLgrShaderConvol3::GetProperty"},"2031":{i:0.00014121434400537,u:"../Content/Object Classes/Graphics/IDLgrShaderConvol3__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrShaderConvol3:: Init function method initializes the surface object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot ...",t:"IDLgrShaderConvol3::Init"},"2032":{i:0.00014121434400537,u:"../Content/Object Classes/Graphics/IDLgrShaderConvol3__SetP.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrShaderConvol3:: SetProperty procedure method sets the value of a property or group of properties for the shader. Syntax Obj -\u003e[ IDLgrShaderConvol3 ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under ...",t:"IDLgrShaderConvol3::SetProperty"},"2033":{i:0.000563732568424725,u:"../Content/Object Classes/Graphics/IDLgrSurface.htm",a:"Superclasses | Creation | Properties | Methods | Examples | Version History A surface object represents a shaded or vector representation of a mesh grid. An IDLgrSurface object is an atomic graphic object ; it is one of the basic drawable elements of the IDL Object Graphics system, and it is not a ...",t:"IDLgrSurface"},"2034":{i:0.000347261320736979,u:"../Content/Object Classes/Graphics/IDLgrSurface_Properties.htm",a:"IDLgrSurface objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrSurface::GetProperty . Properties with the word “Yes” in the “Init” column of the property ...",t:"IDLgrSurface Properties"},"2035":{i:0.000165154870541574,u:"../Content/Object Classes/Graphics/IDLgrSurface__Cleanup.htm",a:"IDLgrSurface::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrSurface:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrSurface ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.0 Introduced ",t:"IDLgrSurface::Cleanup"},"2036":{i:0.000120589124008594,u:"../Content/Object Classes/Graphics/IDLgrSurface__GetCTM.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrSurface:: GetCTM function method returns the 4-by-4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree. Syntax Result = Obj -\u003e[ IDLgrSurface ::]GetCTM( [, DESTINATION = objref ] ...",t:"IDLgrSurface::GetCTM"},"2037":{i:0.000115271992968305,u:"../Content/Object Classes/Graphics/IDLgrSurface__GetMultiTe.htm",a:"The IDLgrSurface::GetMultiTextureCoord returns the texture coordinates associated with a given Unit . This method is useful when a shader program defined by an IDLgrShader object applies more than a single texture to an object. Syntax Obj -\u003e[ IDLgrSurface ::]GetMultiTextureCoord, Unit , TexCoord ...",t:"IDLgrSurface::GetMultiTextureCoord"},"2038":{i:0.000178271170493751,u:"../Content/Object Classes/Graphics/IDLgrSurface__GetPropert.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrSurface:: GetProperty procedure method retrieves the value of a property or group of properties for the surface. Syntax Obj -\u003e[ IDLgrSurface ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under IDLgrSurface ...",t:"IDLgrSurface::GetProperty"},"2039":{i:0.000116730309117388,u:"../Content/Object Classes/Graphics/IDLgrSurface__GetVertexA.htm",a:"The IDLgrSurface::GetVertexAttributeData procedure method retrieves the data associated with a named attribute variable containing per-vertex attribute data. This method is useful when a shader program defined by an IDLgrShader object modifies the vertices of an object. Syntax Obj -\u003e[ IDLgrSurface ...",t:"IDLgrSurface::GetVertexAttributeData"},"2040":{i:0.000178271170493751,u:"../Content/Object Classes/Graphics/IDLgrSurface__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrSurface:: Init function method initializes the surface object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the ...",t:"IDLgrSurface::Init"},"2041":{i:0.000178271170493751,u:"../Content/Object Classes/Graphics/IDLgrSurface__SetPropert.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrSurface:: SetProperty procedure method sets the value of a property or group of properties for the surface. Syntax Obj -\u003e[ IDLgrSurface ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrSurface Properties ...",t:"IDLgrSurface::SetProperty"},"2042":{i:0.000119459230626857,u:"../Content/Object Classes/Graphics/IDLgrSurface__SetMultiTe.htm",a:"The IDLgrSurface::SetMultiTextureCoord procedure method passes texture coordinates to a shader program when the shader program applies more than one texture to an object. The shader program accesses these texture coordinates by using the GLSL predefined uniform variable gl_MultiTexCoord n , where n ...",t:"IDLgrSurface::SetMultiTextureCoord"},"2043":{i:0.000128037537990496,u:"../Content/Object Classes/Graphics/IDLgrSurface__SetVertexA.htm",a:"The IDLgrSurface::SetVertexAttributeData procedure method passes a set of per-vertex attribute data to a vertex shader program. When an IDLgrShader object is associated with the surface via the SHADER property, this attribute data is made available, a vertex\u0027s worth at a time, to the vertex shader ...",t:"IDLgrSurface::SetVertexAttributeData"},"2044":{i:0.000554144772882342,u:"../Content/Object Classes/Graphics/IDLgrSymbol.htm",a:"A symbol object represents a graphical element that is plotted relative to a particular position. IDL provides many predefined symbols. See Formatting IDL Colors, Graphics Symbols, and Lines for more information on the symbols available. Superclasses None Creation See IDLgrSymbol::Init . Properties ...",t:"IDLgrSymbol"},"2045":{i:0.000507953239648422,u:"../Content/Object Classes/Graphics/IDLgrSymbol_Properties.htm",a:"IDLgrSymbol objects have the following properties. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrSymbol::GetProperty . Properties with the word “Yes” in the “Init” column of the property table can be set via IDLgrSymbol::Init . Properties with the ...",t:"IDLgrSymbol Properties"},"2046":{i:0.000232244672681815,u:"../Content/Object Classes/Graphics/IDLgrSymbol__Cleanup.htm",a:"IDLgrSymbol::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrSymbol:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrSymbol ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.0 Introduced ",t:"IDLgrSymbol::Cleanup"},"2047":{i:0.000286748432114036,u:"../Content/Object Classes/Graphics/IDLgrSymbol__GetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrSymbol:: GetProperty procedure method retrieves the value of a property or group of properties for the symbol. Syntax Obj -\u003e[ IDLgrSymbol ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under IDLgrSymbol ...",t:"IDLgrSymbol::GetProperty"},"2048":{i:0.000493948045379422,u:"../Content/Object Classes/Graphics/IDLgrSymbol__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrSymbol:: Init function method initializes the plot symbol. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the Init ...",t:"IDLgrSymbol::Init"},"2049":{i:0.000286748432114036,u:"../Content/Object Classes/Graphics/IDLgrSymbol__SetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrSymbol:: SetProperty procedure method sets the value of a property or group of properties for the symbol. Syntax Obj -\u003e[ IDLgrSymbol ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrSymbol Properties ...",t:"IDLgrSymbol::SetProperty"},"2050":{i:0.00115334535441305,u:"../Content/Object Classes/Graphics/IDLgrTessellator.htm",a:"Superclasses | Creation | Properties | Methods | Version History A tessellator object decomposes a polygon description into a set of triangles. Use the tessellator object to convert complex and/or concave polygons into a form suitable for drawing with the IDLgrPolygon object. IDLgrPolygon can draw ...",t:"IDLgrTessellator"},"2051":{i:5.50327019655568E-05,u:"../Content/Object Classes/Graphics/IDLgrTessellator_Propert.htm",a:"IDLgrTessellator Properties Objects of this class have no properties of their own. ",t:"IDLgrTessellator Properties"},"2052":{i:0.000379861577780673,u:"../Content/Object Classes/Graphics/IDLgrTessellator__AddPol.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrTessellator:: AddPolygon procedure method adds a polygon to the tessellator object. Syntax Obj -\u003e[ IDLgrTessellator ::]AddPolygon, X [, Y [, Z ]] [, AUXDATA = array of auxiliary data ] [, / INTERIOR ] [, POLYGON = array of polygon descriptions ...",t:"IDLgrTessellator::AddPolygon"},"2053":{i:0.000379861577780673,u:"../Content/Object Classes/Graphics/IDLgrTessellator__Cleanu.htm",a:"IDLgrTessellator::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrTessellator:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrTessellator ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.0 Introduced ",t:"IDLgrTessellator::Cleanup"},"2054":{i:0.000379861577780673,u:"../Content/Object Classes/Graphics/objects_gr1.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrTessellator:: Init function method initializes the tessellator object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot ...",t:"IDLgrTessellator::Init"},"2055":{i:0.000379861577780673,u:"../Content/Object Classes/Graphics/IDLgrTessellator__Reset.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrTessellator:: Reset procedure method resets the object’s internal state. All previously added polygons are removed from memory and the object is prepared for a new tessellation task. Syntax Obj -\u003e[ IDLgrTessellator ::]Reset Arguments None ...",t:"IDLgrTessellator::Reset"},"2056":{i:0.000379861577780673,u:"../Content/Object Classes/Graphics/IDLgrTessellator__Tessel.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrTessellator:: Tessellate function method performs the actual tessellation. Syntax Result = Obj -\u003e[ IDLgrTessellator ::]Tessellate( Vertices , Poly [, AUXDATA = variable ] [, / QUIET ] ) Return Value Returns 1, and the contents of Vertices and ...",t:"IDLgrTessellator::Tessellate"},"2057":{i:0.000727529275656403,u:"../Content/Object Classes/Graphics/IDLgrText.htm",a:"Superclasses | Creation | Properties | Methods | Version History A text o bject represents one or more text strings that share common rendering attributes. An IDLgrText object is an atomic graphic object; it is one of the basic drawable elements of the IDL Object Graphics system, and it is not a ...",t:"IDLgrText"},"2058":{i:0.000749654154468685,u:"../Content/Object Classes/Graphics/IDLgrText_Properties.htm",a:"IDLgrText objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrText::GetProperty . Properties with the word “Yes” in the “Init” column of the property table ...",t:"IDLgrText Properties"},"2059":{i:0.000185333226160642,u:"../Content/Object Classes/Graphics/IDLgrText__Cleanup.htm",a:"IDLgrText::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrText:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrText ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.0 Introduced  ",t:"IDLgrText::Cleanup"},"2060":{i:0.000135322383830035,u:"../Content/Object Classes/Graphics/IDLgrText__GetCTM.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrText:: GetCTM function method returns the 4-by-4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree. Syntax Result = Obj -\u003e[ IDLgrText ::]GetCTM( [, DESTINATION = objref ] [, PATH ...",t:"IDLgrText::GetCTM"},"2061":{i:0.000185333226160642,u:"../Content/Object Classes/Graphics/IDLgrText__GetIndexAtCoo.htm",a:"Syntax | Return Value | Arguments | Keywords | Example | Version History The IDLgrText:: GetIndexAtCoord function method returns the index of the character in the string closest to a specified screen coordinate. In the context of this method, screen coordinates are normalized coordinates defined by ...",t:"IDLgrText::GetIndexAtCoord"},"2062":{i:0.000185333226160642,u:"../Content/Object Classes/Graphics/IDLgrText__GetIndexRelat.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrText:: GetIndexRelativeTo function method returns the index of the character in the string closest to a given coordinate. See Character Indices in Text Strings for more information. Syntax Result = Obj -\u003e[ IDLgrText ...",t:"IDLgrText::GetIndexRelativeTo"},"2063":{i:0.000259838747238479,u:"../Content/Object Classes/Graphics/IDLgrText__GetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrText:: GetProperty procedure method retrieves the value of a property or group of properties for the text. Syntax Obj -\u003e[ IDLgrText ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under IDLgrText Properties ...",t:"IDLgrText::GetProperty"},"2064":{i:0.000259838747238479,u:"../Content/Object Classes/Graphics/IDLgrText__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrText:: Init function method initializes the text object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the Init ...",t:"IDLgrText::Init"},"2065":{i:0.000259838747238479,u:"../Content/Object Classes/Graphics/IDLgrText__SetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrText:: SetProperty procedure method sets the value of a property or group of properties for the text. Syntax Obj -\u003e[ IDLgrText ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrText Properties that ...",t:"IDLgrText::SetProperty"},"2066":{i:0.000432435859974437,u:"../Content/Object Classes/Graphics/IDLgrTextEdit.htm",a:"Superclasses | Creation | Properties | Methods | Version History A text editing o bject is an extension of the IDLgrText object class that provides several methods that allow modification of the existing text strings. The IDLgrTextEdit object class exposes all of the properties and methods of the ...",t:"IDLgrTextEdit"},"2067":{i:5.50327019655568E-05,u:"../Content/Object Classes/Graphics/IDLgrTextEdit_Properties.htm",a:"IDLgrTextEdit Properties IDLgrTextEdit objects classes have no properties of their own, but do have properties inherited from the IDLgrText class. See IDLgrText Properties .  ",t:"IDLgrTextEdit Properties"},"2068":{i:0.000153823407090859,u:"../Content/Object Classes/Graphics/IDLgrTextEdit__Cleanup.htm",a:"IDLgrTextEdit::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrTextEdit:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrTextEdit ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 7.0.6 Introduced ",t:"IDLgrTextEdit::Cleanup"},"2069":{i:0.000216835595494342,u:"../Content/Object Classes/Graphics/IDLgrTextEdit__Delete.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrTextEdit:: Delete procedure removes text from a string at the current cursor position. If text is selected, the selection is deleted and the selection length is reset to zero. If no text is selected, a single character is deleted to the left ...",t:"IDLgrTextEdit::Delete"},"2070":{i:0.000123416341744008,u:"../Content/Object Classes/Graphics/IDLgrTextEdit__GetProper.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrTextEdit:: GetProperty procedure method retrieves the value of a property or group of properties for the text. Syntax Obj -\u003e[ IDLgrTextEdit ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords The IDLgrTextEdit object class does not ...",t:"IDLgrTextEdit::GetProperty"},"2071":{i:0.000123416341744008,u:"../Content/Object Classes/Graphics/IDLgrTextEdit__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrTextEdit:: Init function method initializes the text editing object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot ...",t:"IDLgrTextEdit::Init"},"2072":{i:0.00013531978107205,u:"../Content/Object Classes/Graphics/IDLgrTextEdit__Insert.htm",a:"Syntax | Arguments | Keywords | Examples | Version History The IDLgrTextEdit:: Insert procedure method inserts text at the current cursor position. If text is selected, it overwrites the selected text and sets the selection length to zero. (See the SELECTION_LENGTH property of the IDLgrText object ...",t:"IDLgrTextEdit::Insert"},"2073":{i:0.000106564265788246,u:"../Content/Object Classes/Graphics/IDLgrTextEdit__MoveCurso.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrTextEdit:: MoveCursor procedure method moves the cursor one space in the direction indicated by the direction argument. See Character Indices in Text Strings for more information. Syntax Obj -\u003e[ IDLgrTextEdit ::]MoveCursor, Window [, DIRECTION ...",t:"IDLgrTextEdit::MoveCursor"},"2074":{i:0.000106564265788246,u:"../Content/Object Classes/Graphics/IDLgrTextEdit__SetProper.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrTextEdit:: SetProperty procedure method sets the value of a property or group of properties for the text. Syntax Obj -\u003e[ IDLgrTextEdit ::]SetProperty[, PROPERTY=value ] Arguments None Keywords The IDLgrTextEdit object class does not have ...",t:"IDLgrTextEdit::SetProperty"},"2075":{i:0.000760408801221623,u:"../Content/Object Classes/Graphics/IDLgrView.htm",a:"A view object represents a rectangular area in which graphics objects are drawn. It is a container for objects of the IDLgrModel class. Superclasses IDL_Container IDLitComponent Creation See IDLgrView::Init . Properties Objects of this class have the following properties. See IDLgrView Properties ...",t:"IDLgrView"},"2076":{i:0.000322439006667816,u:"../Content/Object Classes/Graphics/IDLgrView_Properties.htm",a:"IDLgrView objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrView::GetProperty . Properties with the word “Yes” in the “Init” column of the property table ...",t:"IDLgrView Properties"},"2077":{i:0.000166978851048096,u:"../Content/Object Classes/Graphics/IDLgrView__Add.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrView:: Add procedure method adds a child to this view. Syntax Obj -\u003e[ IDLgrView ::]Add, Model [, POSITION = index ] Arguments Model An instance of the IDLgrModel object class. Keywords POSITION Set this keyword equal to the zero-based index of ...",t:"IDLgrView::Add"},"2078":{i:0.000208119057921452,u:"../Content/Object Classes/Graphics/IDLgrView__Cleanup.htm",a:"IDLgrView::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrView:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrView ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.0 Introduced ",t:"IDLgrView::Cleanup"},"2079":{i:0.000208119057921452,u:"../Content/Object Classes/Graphics/IDLgrView__GetByName.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrView:: GetByName function method finds contained objects by name. If the named object is not found, the GetByName function returns a null object reference. The GetByName function does not perform a recursive search through the object ...",t:"IDLgrView::GetByName"},"2080":{i:0.000221611969226772,u:"../Content/Object Classes/Graphics/IDLgrView__GetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrView:: GetProperty procedure method retrieves the value of the property or group of properties for the view. Syntax Obj -\u003e[ IDLgrView ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under IDLgrView Properties ...",t:"IDLgrView::GetProperty"},"2081":{i:0.000279068009569863,u:"../Content/Object Classes/Graphics/IDLgrView__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrView:: Init function method initializes the view object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the Init ...",t:"IDLgrView::Init"},"2082":{i:7.6789836178486E-05,u:"../Content/Object Classes/Graphics/IDLgrView__SetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrView:: SetProperty procedure method sets the value of the property or group of properties for the view. Syntax Obj -\u003e[ IDLgrView ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrView Properties that ...",t:"IDLgrView::SetProperty"},"2083":{i:0.000784756099805213,u:"../Content/Object Classes/Graphics/IDLgrViewgroup.htm",a:"Superclasses | Creation | Properties | Methods | Version History The IDLgrViewgroup object is a simple container object, very similar to the IDLgrScene object. It contains one or more IDLgrView objects and an IDLgrScene can contain one or more of these objects. This object is special in that it can ...",t:"IDLgrViewgroup"},"2084":{i:0.000362300192892356,u:"../Content/Object Classes/Graphics/IDLgrViewgroup_Propertie.htm",a:"IDLgrViewgroup objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrViewgroup::GetProperty . Properties with the word “Yes” in the “Init” column of the ...",t:"IDLgrViewgroup Properties"},"2085":{i:0.000211719166915141,u:"../Content/Object Classes/Graphics/IDLgrViewgroup__Add.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrViewgroup:: Add function method verifies that the added item is not an instance of the IDLgrScene or IDLgrViewgroup object. If it is not, IDLgrViewgroup:Add adds the object to the specified viewgroup. Syntax Obj -\u003e[ IDLgrViewgroup ::]Add, ...",t:"IDLgrViewgroup::Add"},"2086":{i:0.000211719166915141,u:"../Content/Object Classes/Graphics/IDLgrViewgroup__Cleanup.htm",a:"IDLgrViewgroup::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrViewgroup:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrViewgroup ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.1 Introduced ",t:"IDLgrViewgroup::Cleanup"},"2087":{i:0.000211719166915141,u:"../Content/Object Classes/Graphics/IDLgrViewgroup__GetByNam.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrViewgroup:: GetByName function method finds contained objects by name. If the named object is not found, the GetByName function returns a null object reference. The GetByName function does not perform a recursive search through the object ...",t:"IDLgrViewgroup::GetByName"},"2088":{i:0.000231254580721249,u:"../Content/Object Classes/Graphics/IDLgrViewgroup__GetPrope.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrViewgroup:: GetProperty procedure method retrieves the value of a property or group of properties for the viewgroup object. Syntax Obj -\u003e[ IDLgrViewgroup ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under ...",t:"IDLgrViewgroup::GetProperty"},"2089":{i:0.000231254580721249,u:"../Content/Object Classes/Graphics/IDLgrViewgroup__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrViewgroup:: Init function method initializes the viewgroup object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call ...",t:"IDLgrViewgroup::Init"},"2090":{i:0.000231254580721249,u:"../Content/Object Classes/Graphics/IDLgrViewgroup__SetPrope.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrViewgroup:: SetProperty procedure method sets the value of a property or group of properties for the viewgroup. Syntax Obj -\u003e[ IDLgrViewgroup ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrViewgroup ...",t:"IDLgrViewgroup::SetProperty"},"2091":{i:0.000507396367137906,u:"../Content/Object Classes/Graphics/IDLgrVolume.htm",a:"Superclasses | Creation | Properties | Methods | Version History A volume object represents a mapping from a three-dimensional array of data to a three-dimensional array of voxel colors, which, when drawn, are projected to two dimensions. An IDLgrVolume object is an atomic graphic object ; it is one ...",t:"IDLgrVolume"},"2092":{i:0.000259038763156862,u:"../Content/Object Classes/Graphics/IDLgrVolume_Properties.htm",a:"IDLgrVolume objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrVolume::GetProperty . Properties with the word “Yes” in the “Init” column of the property ...",t:"IDLgrVolume Properties"},});