define({"1609":{i:0.000153035049364269,u:"../Content/Object Classes/File Format/IDLffMJPEG2000__StopSequ.htm",a:"Syntax | Return Value | Arguments | Keywords | Examples | Version History The IDLffMJPEG2000:: StopSequentialReading function method releases the frame buffer memory and shuts down the background processing thread, if it is still running. Call this method when a sequential playback has been ...",t:"IDLffMJPEG2000::StopSequentialReading"},"1610":{i:0.000698631217893284,u:"../Content/Object Classes/File Format/IDLffMrSID.htm",a:"Superclasses | Creation | Properties | Methods | Version History An IDLffMrSID object class is used to query information about and load image data from a MrSID ( . sid ) image file. See IDL Feature Support for a list of supported platforms. Superclasses None Creation See IDLffMrSID::Init . ...",t:"IDLffMrSID"},"1611":{i:0.000298305862228314,u:"../Content/Object Classes/File Format/IDLffMrSID_Properties.htm",a:"IDLffMrSID objects have the following properties. Properties with the word “Yes” in the “Init” column of the property table can be set via IDLffMrSID::Init . For a discussion of the property description tables shown below, see About Object Property Descriptions . Objects of this class have the ...",t:"IDLffMrSID Properties"},"1612":{i:0.000224807972934087,u:"../Content/Object Classes/File Format/IDLffMrSID__Cleanup.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffMrSID::Cleanup procedure method deletes all MrSID objects, closing the MrSID file in the process. It also deletes the IDL objects used to communicate with the MrSID library. Syntax Obj -\u003e Cleanup  or Obj -\u003e[ IDLffMrSID ::]Cleanup or ...",t:"IDLffMrSID::Cleanup"},"1613":{i:0.000224807972934087,u:"../Content/Object Classes/File Format/IDLffMrSID__GetDimsAtLev.htm",a:"Syntax | Return Value | Arguments | Keywords | Examples | Version History The IDLffMrSID::GetDimsAtLevel function method is used to retrieve the dimensions of the image at a given level. This can be used, for example, to determine what level is required to fit the image into a certain area. Syntax ...",t:"IDLffMrSID::GetDimsAtLevel"},"1614":{i:0.000224807972934087,u:"../Content/Object Classes/File Format/IDLffMrSID__GetImageData.htm",a:"Syntax | Return Value | Arguments | Keywords | Examples | Version History The IDLffMrSID::GetImageData function method extracts and returns the image data from the MrSID file at the specified level and location. Syntax Result = Obj -\u003e[ IDLffMrSID ::]GetImageData ([, LEVEL = lvl ] [, SUB_RECT = rect ...",t:"IDLffMrSID::GetImageData"},"1615":{i:0.000252466935747179,u:"../Content/Object Classes/File Format/IDLffMrSID__GetProperty.htm",a:"Syntax | Arguments | Keywords | Examples | Version History The IDLffMrSID::GetProperty function method is used to query properties associated with the MrSID image. Syntax Obj-\u003e [ IDLffMrSID ::]GetProperty [, CHANNELS = nChannels ] [, DIMENSIONS = Dims ] [, LEVELS = Levels ] [, PIXEL_TYPE = pixelType ...",t:"IDLffMrSID::GetProperty"},"1616":{i:0.000298305862228314,u:"../Content/Object Classes/File Format/IDLffMrSID__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Examples | Version History The IDLffMrSID::Init function method initializes an IDLffMrSID object containing the image data from a MrSID image file. Init methods are special lifecycle methods , and as such cannot be called outside the context of object ...",t:"IDLffMrSID::Init"},"1617":{i:0.00125186718573592,u:"../Content/Object Classes/File Format/IDLffShape.htm",a:"Superclasses | Creation | Properties | Methods | Version History | Overview of ESRI Shapefiles | Examples An IDLffShape object contains geometry, connectivity and attributes for graphics primitives accessed from ESRI Shapefiles. See Overview of ESRI Shapefiles . Superclasses None Creation See ...",t:"IDLffShape"},"1618":{i:0.000393673313527728,u:"../Content/Object Classes/File Format/IDLffShape_Properties.htm",a:"IDLffShape objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLffShape::GetProperty . Properties with the word “Yes” in the “Init” column of the property ...",t:"IDLffShape Properties"},"1619":{i:0.00023806721874224,u:"../Content/Object Classes/File Format/IDLffShape__AddAttribute.htm",a:"The IDLffShape:: AddAttribute method adds an attribute definition to a Shapefile. Adding the attribute definition is required before adding the actual attribute data to a file. For more information on attributes, see Attributes . You can only define new attributes to Shapefiles that do not have any ...",t:"IDLffShape::AddAttribute"},"1620":{i:0.00013688704413608,u:"../Content/Object Classes/File Format/IDLffShape__Cleanup.htm",a:"The IDLffShape::Cleanup procedure method performs all cleanup on a Shapefile object. If the Shapefile being accessed by the object is open and the file has been modified, the new information is written to the file if one of the following conditions is met: The file was opened with write permissions ...",t:"IDLffShape::Cleanup"},"1621":{i:0.00013688704413608,u:"../Content/Object Classes/File Format/IDLffShape__Close.htm",a:"The IDLffShape::Close procedure method closes a Shapefile. If the file has been modified, it is also written to the disk if neither of the following conditions is met: The file was opened with write permissions using the UPDATE keyword to the IDLffShape::Open method It is a newly created file that ...",t:"IDLffShape::Close"},"1622":{i:0.00013688704413608,u:"../Content/Object Classes/File Format/IDLffShape__DestroyEntit.htm",a:"The IDLffShape::DestroyEntity procedure method frees memory associated with the entity structure. For more information on the entity structure, see Entities . If Automatic Garbage Collection is enabled, using this method to free memory is not necessary. You may choose to destroy your entity ...",t:"IDLffShape::DestroyEntity"},"1623":{i:0.000191006281875048,u:"../Content/Object Classes/File Format/IDLffShape__GetAttribute.htm",a:"The IDLffShape::GetAttributes function method retrieves the attributes for the entities you specify from a Shapefile. Syntax Result = Obj-\u003e [ IDLffShape ::]GetAttributes([ Index ] [, / ALL ] [, / ATTRIBUTE_STRUCTURE ] ) Return Value Returns an anonymous structure array. For more information on the ...",t:"IDLffShape::GetAttributes"},"1624":{i:0.00023806721874224,u:"../Content/Object Classes/File Format/IDLffShape__GetEntity.htm",a:"The IDLffShape::GetEntity function method returns the entities you specify from a Shapefile. Syntax Result = Obj-\u003e [ IDLffShape ::]GetEntity([ Index ] [, / ALL ] [, / ATTRIBUTES ]) Return Value Returns a type {IDL_SHAPE_ENTITY} structure array. For more information on the structure, see Entities . ...",t:"IDLffShape::GetEntity"},"1625":{i:0.000284991565784552,u:"../Content/Object Classes/File Format/IDLffShape__GetProperty.htm",a:"The IDLffShape:: GetProperty procedure method returns the values of properties associated with a Shapefile object. These properties are: Number of entities The type of the entities The number of attributes associated with each entity The names of the attributes The name, type, width, and precision ...",t:"IDLffShape::GetProperty"},"1626":{i:0.000242597891300911,u:"../Content/Object Classes/File Format/IDLffShape__Init.htm",a:"The IDLffShape::Init function method initializes or constructs a Shapefile object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the Init method directly. There is one exception to this ...",t:"IDLffShape::Init"},"1627":{i:0.000425065639027044,u:"../Content/Object Classes/File Format/IDLffShape__Open.htm",a:"The IDLffShape::Open function method opens a specified Shapefile. Syntax Result = Obj-\u003e [ IDLffShape ::]Open( ‘Filename’ [, / DBF_ONLY ] [, ENTITY_TYPE = ’value’ ] [, / UPDATE ] ) Return Value Returns 1 if the file can be read successfully. If not able to open the file, it returns 0. Arguments ...",t:"IDLffShape::Open"},"1628":{i:0.00013688704413608,u:"../Content/Object Classes/File Format/IDLffShape__PutEntity.htm",a:"The IDLffShape::PutEntity procedure method inserts an entity into the Shapefile object. The entity must be in the proper structure. For more information on the structure, see Entities . The shape type of the new entity must be the same as the shape type defined for the Shapefile. If the shape type ...",t:"IDLffShape::PutEntity"},"1629":{i:0.000191006281875048,u:"../Content/Object Classes/File Format/IDLffShape__SetAttribute.htm",a:"The IDLffShape::SetAttributes procedure method sets the attributes for a specified entity in a Shapefile object. Syntax Obj -\u003e[ IDLffShape ::]SetAttributes, Index , Attribute_Num , Value or Obj -\u003e[ IDLffShape ::]SetAttributes, Index , Value Arguments Attribute_Num The field number in the attribute ...",t:"IDLffShape::SetAttribute"},"1630":{i:0.000573498443982522,u:"../Content/Object Classes/File Format/IDLffVideoRead.htm",a:"The IDLffVideoRead class can be used to open video files in a variety of formats and read out frames of video, samples of audio, and packets of data. The process for reading a video file is: Create the object and open associated video with IDLffVideoRead::Init. Use IDLffVideoRead::GetNext in a loop ...",t:"IDLffVideoRead"},"1631":{i:0.000693652056254154,u:"../Content/Object Classes/File Format/IDLffVideoWrite.htm",a:"The IDLffVideoWrite object creates a video file with an optional soundtrack. The process for creating a video file is: Create the object and associated video file with IDLffVideoWrite::Init . Open a video stream with IDLffVideoWrite::AddVideoStream . Open an (optional) audio stream with ...",t:"IDLffVideoWrite"},"1632":{i:6.15518474307913E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOM_Classes.htm",a:"IDL’s XML Document Object Model (DOM) support comprises the following IDL object classes. IDLffXMLDOMAttr IDLffXMLDOMCDATASection IDLffXMLDOMCharacterData IDLffXMLDOMComment IDLffXMLDOMDocument IDLffXMLDOMDocumentFragment IDLffXMLDOMDocumentType IDLffXMLDOMElement IDLffXMLDOMEntity ...",t:"IDLffXMLDOM Classes"},"1633":{i:0.000877710876954564,u:"../Content/Object Classes/File Format/IDLffXMLDOMAttr.htm",a:"Superclasses | Creation | Properties | Methods | Version History The IDLffXMLDOMAttr object represents an attribute that is part of an element object. Typically, the allowable values for the attribute are defined in a DTD. Attribute objects are subclasses of the IDLffXMLDOMNode abstract superclass, ...",t:"IDLffXMLDOMAttr"},"1634":{i:5.50327019655568E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMAttr_Properti.htm",a:"IDLffXMLDOMAttr Properties Objects of this class have no properties of their own, but do have properties inherited from any superclasses. Objects of this class inherit: IDLffXMLDOMNode ",t:"IDLffXMLDOMAttr Properties"},"1635":{i:0.000257894488490671,u:"../Content/Object Classes/File Format/IDLffXMLDOMAttr__Cleanup.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMAttr:: Cleanup procedure method destroys both the object (that is, the accessing object in the IDL tree) and any objects created by that object. It does not modify the actual DOM tree. This class should not be subclassed by a user class ...",t:"IDLffXMLDOMAttr::Cleanup"},"1636":{i:0.000257894488490671,u:"../Content/Object Classes/File Format/IDLffXMLDOMAttr__GetName.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMAttr:: GetName function method returns the name of the attribute node. Syntax Result = Obj -\u003e[ IDLffXMLDOMAttr ::]GetName() Return Value Returns a scalar string containing the name of the attribute node. Arguments None ...",t:"IDLffXMLDOMAttr::GetName"},"1637":{i:0.000206915402636292,u:"../Content/Object Classes/File Format/IDLffXMLDOMAttr__GetSpec.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMAttr:: GetSpecified function method returns a scalar integer indicating how the value of the attribute node was set. Syntax Result = Obj -\u003e[ IDLffXMLDOMAttr ::]GetSpecified() Return Value Returns 1 if the value of the ...",t:"IDLffXMLDOMAttr::GetSpecified"},"1638":{i:0.000257894488490671,u:"../Content/Object Classes/File Format/IDLffXMLDOMAttr__GetValu.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMAttr:: GetValue function method returns the value of the attribute node. Syntax Result = Obj -\u003e[ IDLffXMLDOMAttr ::]GetValue() Return Value Returns a scalar string containing the value of the attribute node. Arguments None ...",t:"IDLffXMLDOMAttr::GetValue"},"1639":{i:0.000148289406313751,u:"../Content/Object Classes/File Format/IDLffXMLDOMAttr__Init.htm",a:"The IDLffXMLDOMAttr:: Init function method initializes the object, but this class should not be instantiated directly. Instead, methods such as IDLffXMLDOMNode::GetAttributes are used to create objects of this class. This class should not be subclassed by a user class because the classes that create ...",t:"IDLffXMLDOMAttr::Init"},"1640":{i:0.000359852660199428,u:"../Content/Object Classes/File Format/IDLffXMLDOMAttr__SetValu.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMAttr:: SetValue procedure method sets the value of the attribute node, using the Value argument. Syntax Obj -\u003e[ IDLffXMLDOMAttr ::]SetValue, Value Arguments Value A scalar string used to set the value of the attribute node. Keywords None ...",t:"IDLffXMLDOMAttr::SetValue"},"1641":{i:0.000183115704310269,u:"../Content/Object Classes/File Format/IDLffXMLDOMCDATASection.htm",a:"Superclasses | Creation | Properties | Methods | Version History The IDLffXMLDOMCDATASection object is used to escape blocks of text containing characters that would otherwise be regarded as markup. The only delimiter that is recognized in a CDATA section is the “]]\u003e” string that ends the CDATA ...",t:"IDLffXMLDOMCDATASection"},"1642":{i:5.50327019655568E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMCDATASection1.htm",a:"IDLffXMLDOMCDATASection Properties Objects of this class have no properties of their own, but do have properties inherited from any superclasses. Objects of this class inherit: IDLffXMLDOMNode IDLffXMLDOMCharacterData IDLffXMLDOMText ",t:"IDLffXMLDOMCDATASection Properties"},"1643":{i:0.000140824552924484,u:"../Content/Object Classes/File Format/IDLffXMLDOMCDATASection_.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMCDATASection:: Cleanup procedure method destroys both the object (that is, the accessing object in the IDL tree) and any objects created by that object. It does not modify the actual DOM tree. This class should not be subclassed by a ...",t:"IDLffXMLDOMCDATASection::Cleanup"},"1644":{i:8.09740936828764E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMCDATASection_1.htm",a:"The IDLffXMLDOMCDATASection:: Init function method initializes the object, but this class should not be instantiated directly. Instead, methods such as IDLffXMLDOMNode::GetFirstChild are used to create objects of all classes except IDLffXMLDOMDocument . This class should not be subclassed by a user ...",t:"IDLffXMLDOMCDATASection::Init"},"1645":{i:0.00115794311302832,u:"../Content/Object Classes/File Format/IDLffXMLDOMCharacterData.htm",a:"Superclasses | Creation | Properties | Methods | Version History The IDLffXMLDOMCharacterData class extends the IDLffXMLDOMNode class with a set of methods for accessing character data in the DOM tree. This is an abstract class in the sense that there will never be an instance of this class, but its ...",t:"IDLffXMLDOMCharacterData"},"1646":{i:5.50327019655568E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMCharacterData1.htm",a:"IDLffXMLDOMCharacterData Properties Objects of this class have no properties of their own, but do have properties inherited from any superclasses. Objects of this class inherit: IDLffXMLDOMNode ",t:"IDLffXMLDOMCharacterData Properties"},"1647":{i:0.000238355351265873,u:"../Content/Object Classes/File Format/IDLffXMLDOMCharacterData2.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMCharacterData:: AppendData procedure method appends a string to the character data in the node. Syntax Obj -\u003e[ IDLffXMLDOMCharacterData ::]AppendData, String Arguments String A scalar string to be added at the end of the character data. ...",t:"IDLffXMLDOMCharacterData::AppendData"},"1648":{i:0.000238355351265873,u:"../Content/Object Classes/File Format/IDLffXMLDOMCharacterData3.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMCharacterData:: Cleanup procedure method destroys both the object (that is, the accessing object in the IDL tree) and any objects created by that object. It does not modify the actual DOM tree. This class should not be subclassed by a ...",t:"IDLffXMLDOMCharacterData::Cleanup"},"1649":{i:0.000238355351265873,u:"../Content/Object Classes/File Format/IDLffXMLDOMCharacterData4.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMCharacterData:: DeleteData procedure method deletes a number of characters from the character data in the node, starting at an offset. Syntax Obj -\u003e[ IDLffXMLDOMCharacterData ::]DeleteData, Offset , Count Arguments Offset A scalar value ...",t:"IDLffXMLDOMCharacterData::DeleteData"},"1650":{i:0.000238355351265873,u:"../Content/Object Classes/File Format/IDLffXMLDOMCharacterData5.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMCharacterData:: GetData function method returns the character data in the node. Syntax Result = Obj -\u003e[ IDLffXMLDOMCharacterData ::]GetData() Return Value Returns a scalar string containing the character data in the node. ...",t:"IDLffXMLDOMCharacterData::GetData"},"1651":{i:0.000238355351265873,u:"../Content/Object Classes/File Format/IDLffXMLDOMCharacterData6.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMCharacterData:: GetLength function method returns the number of characters in the node. Syntax Result = Obj -\u003e[ IDLffXMLDOMCharacterData ::]GetLength() Return Value Returns a scalar string containing the number of ...",t:"IDLffXMLDOMCharacterData::GetLength"},"1652":{i:0.000137053962596322,u:"../Content/Object Classes/File Format/IDLffXMLDOMCharacterData7.htm",a:"The IDLffXMLDOMCharacterData:: Init function method initializes the object, but this class should not be instantiated directly. Instead, methods such as IDLffXMLDOMNode::GetFirstChild are used to create objects of all classes except IDLffXMLDOMDocument . This class should not be subclassed by a user ...",t:"IDLffXMLDOMCharacterData::Init"},"1653":{i:0.000238355351265873,u:"../Content/Object Classes/File Format/IDLffXMLDOMCharacterData8.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMCharacterData:: InsertData procedure method inserts a string in the node’s character data at a specified offset. Syntax Obj -\u003e[ IDLffXMLDOMCharacterData ::]InsertData, Offset , String Arguments Offset A scalar value that indicates where ...",t:"IDLffXMLDOMCharacterData::InsertData"},"1654":{i:0.000238355351265873,u:"../Content/Object Classes/File Format/IDLffXMLDOMCharacterData9.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMCharacterData:: ReplaceData procedure method replaces a number of characters, starting at an offset in the node’s character data, with a string. Syntax Obj -\u003e[ IDLffXMLDOMCharacterData ::]ReplaceData, Offset , Count , String Arguments ...",t:"IDLffXMLDOMCharacterData::ReplaceData"},"1655":{i:0.000238355351265873,u:"../Content/Object Classes/File Format/IDLffXMLDOMCharacterData10.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMCharacterData:: SetData procedure method sets the node’s character data to a string. Syntax Obj -\u003e[ IDLffXMLDOMCharacterData ::]SetData, String Arguments String A scalar string to be set in the node. Keywords None Version History 6.1 ...",t:"IDLffXMLDOMCharacterData::SetData"},"1656":{i:0.000238355351265873,u:"../Content/Object Classes/File Format/IDLffXMLDOMCharacterData11.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMCharacterData:: SubstringData function method returns a string composed of a substring of the node’s character data. Syntax Result = Obj -\u003e[ IDLffXMLDOMCharacterData ::]SubstringData( Offset, Count ) Return Value Returns a ...",t:"IDLffXMLDOMCharacterData::SubstringData"},"1657":{i:0.000189366641921576,u:"../Content/Object Classes/File Format/IDLffXMLDOMComment.htm",a:"Superclasses | Creation | Properties | Methods | Version History The IDLffXMLDOMComment class represents the content of a comment, the characters between the starting “\u003c!--“ and the ending “--\u003e”. There are no methods specific to this class except Cleanup and Init. Superclasses IDLffXMLDOMNode ...",t:"IDLffXMLDOMComment"},"1658":{i:5.50327019655568E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMComment_Prope.htm",a:"IDLffXMLDOMComment Properties Objects of this class have no properties of their own, but do have properties inherited from any superclasses. Objects of this class inherit: IDLffXMLDOMNode IDLffXMLDOMCharacterData ",t:"IDLffXMLDOMComment Properties"},"1659":{i:0.000151695746621106,u:"../Content/Object Classes/File Format/IDLffXMLDOMComment__Clea.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLDOMComment:: Cleanup procedure method destroys both the object (that is, the accessing object in the IDL tree) and any objects created by that object. It does not modify the actual DOM tree. This class should not be subclassed by a user ...",t:"IDLffXMLDOMComment::Cleanup"},"1660":{i:8.72250312941833E-05,u:"../Content/Object Classes/File Format/IDLffXMLDOMComment__Init.htm",a:"The IDLffXMLDOMComment:: Init function method initializes the object, but this class should not be instantiated directly. Instead, methods such as IDLffXMLDOMNode::GetFirstChild are used to create objects of all classes except IDLffXMLDOMDocument . This class should not be subclassed by a user class ...",t:"IDLffXMLDOMComment::Init"},"1661":{i:0.00525063314350364,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument.htm",a:"Superclasses | Creation | Properties | Methods | Version History The IDLffXMLDOMDocument class represents the entire XML document as the root of the document tree and by providing the primary access to the document’s data. This class is also the class factory for DOM tree nodes such as ...",t:"IDLffXMLDOMDocument"},"1662":{i:0.000780548996854025,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument_Prop.htm",a:"IDLffXMLDOMDocument objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLffXMLDOMDocument::GetProperty . Properties with the word “Yes” in the “Init” column of ...",t:"IDLffXMLDOMDocument Properties"},"1663":{i:0.000249077818431136,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Cle.htm",a:"The IDLffXMLDOMDocument:: Cleanup procedure method destroys both the object (that is, the accessing object in the IDL tree) and any objects created by that object. It does not modify the actual DOM tree. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLffXMLDOMDocument ::]Cleanup or OBJ_DESTROY, Obj Arguments ...",t:"IDLffXMLDOMDocument::Cleanup"},"1664":{i:0.000316289282870239,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Cre.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMDocument:: CreateAttribute function method creates and names an attribute node that is owned by the document. The new attribute can be set in an Element node with the IDLffXMLDOMElement::SetAttributeNode method. Syntax ...",t:"IDLffXMLDOMDocument::CreateAttribute"},"1665":{i:0.000347550424520818,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Cre1.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMDocument:: CreateCDATASection function method creates a CDATASection node that is owned by the document and stores a string in the CDATASection node. Syntax Result = Obj -\u003e[ IDLffXMLDOMDocument ::]CreateCDATASection( ...",t:"IDLffXMLDOMDocument::CreateCDATASection"},"1666":{i:0.000347550424520818,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Cre2.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMDocument:: CreateComment function method creates a comment node that is owned by the document and stores a string in the comment node. Syntax Result = Obj -\u003e[ IDLffXMLDOMDocument ::]CreateComment( String ) Return Value ...",t:"IDLffXMLDOMDocument::CreateComment"},"1667":{i:0.000347550424520818,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Cre3.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMDocument:: CreateDocumentFragment function method creates a document-fragment node that is owned by the document. Syntax Result = Obj -\u003e[ IDLffXMLDOMDocument ::]CreateDocumentFragment() Return Value Returns an object ...",t:"IDLffXMLDOMDocument::CreateDocumentFragment"},"1668":{i:0.000347550424520818,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Cre4.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMDocument:: CreateElement function method creates an element node that is owned by the document and sets the element’s name to a tag name. Syntax Result = Obj -\u003e[ IDLffXMLDOMDocument ::]CreateElement( TagName ) Return Value ...",t:"IDLffXMLDOMDocument::CreateElement"},"1669":{i:0.000347550424520818,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Cre5.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMDocument:: CreateEntityReference function method creates and names an entity reference node that is owned by the document. Syntax Result = Obj -\u003e[ IDLffXMLDOMDocument ::]CreateEntityReference( Name ) Return Value Returns ...",t:"IDLffXMLDOMDocument::CreateEntityReference"},"1670":{i:0.000367317917268266,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Cre6.htm",a:"The IDLffXMLDOMDocument:: CreateNodeIterator function method is used to create an instance of an IDLffXMLDOMNodeIterator object. This function returns an object reference to that instance. Please note the following exceptions in node iteration: Attributes are never children of DOM nodes, so they are ...",t:"IDLffXMLDOMDocument::CreateNodeIterator"},"1671":{i:0.000347550424520818,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Cre7.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMDocument:: CreateProcessingInstruction function method creates a processing-instruction node that is owned by the document and stores two strings in the processing-instruction node. Syntax Result = Obj -\u003e[ ...",t:"IDLffXMLDOMDocument::CreateProcessingInstruction\n        "},"1672":{i:0.000347550424520818,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Cre8.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMDocument:: CreateTextNode function method creates a text node that is owned by the document and stores a string in the text node. Syntax Result = Obj -\u003e[ IDLffXMLDOMDocument ::]CreateTextNode( String ) Return Value Returns ...",t:"IDLffXMLDOMDocument::CreateTextNode"},"1673":{i:0.000365686817031143,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Cre9.htm",a:"The IDLffXMLDOMDocument:: CreateTreeWalker function method is used to create an instance of an IDLffXMLDOMTreeWalker object. This function returns an object reference to that instance. Please note the following exceptions in tree-walking: Attributes are never children of DOM nodes, so they are not ...",t:"IDLffXMLDOMDocument::CreateTreeWalker"},"1674":{i:0.000347550424520818,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Get.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMDocument:: GetDoctype function method creates an instance of IDLffXMLDOMDocumentType and returns its object reference. Syntax Result = Obj -\u003e[ IDLffXMLDOMDocument ::]GetDoctype() Return Value Returns an object reference to ...",t:"IDLffXMLDOMDocument::GetDoctype"},"1675":{i:0.000347550424520818,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Get1.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMDocument:: GetDocumentElement function method creates an instance of an IDLffXMLDOMElement and returns its object reference. The IDLffXMLDOMElement object refers to the node that is the root element of the document. Syntax ...",t:"IDLffXMLDOMDocument::GetDocumentElement"},"1676":{i:0.000347550424520818,u:"../Content/Object Classes/File Format/IDLffXMLDOMDocument__Get2.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLffXMLDOMDocument:: GetElementsByTagName function method creates an IDLffXMLDOMNodeList object containing all element nodes in the document tree with the specified tag name and returns an object reference to the IDLffXMLDOMNodeList ...",t:"IDLffXMLDOMDocument::GetElementsByTagName"},});