define({"1815":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__SkippedEnti.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: SkippedEntity procedure method is called when the parser skips an entity and validation is not being performed. This method is rarely called by SAX parsers. Syntax Obj-\u003e [ IDLffXMLSAX ::]SkippedEntity, Name Arguments Name A string ...",t:"IDLffXMLSAX::SkippedEntity"},"1816":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__StartCDATA.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: StartCDATA procedure method is called when the parser detects the beginning of a \u003c![CDATA[...]]\u003e text section. Syntax Obj-\u003e [ IDLffXMLSAX ::]StartCDATA Arguments None Keywords None Version History 5.6 Introduced ",t:"IDLffXMLSAX::StartCDATA"},"1817":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__StartDocume.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: StartDocument procedure method is called when the parser begins processing a document, and before any data is processed. Syntax Obj-\u003e [ IDLffXMLSAX ::]StartDocument Arguments None Keywords None Version History 5.6 Introduced ",t:"IDLffXMLSAX::StartDocument"},"1818":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__StartDTD.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: StartDTD procedure method is called when the parser detects the beginning of a Document Type Definition (DTD). Syntax Obj-\u003e [ IDLffXMLSAX ::]StartDTD, Name , PublicID , SystemID Arguments Name A string containing the declared name of ...",t:"IDLffXMLSAX::StartDTD"},"1819":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__StartElemen.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: StartElement procedure method is called when the parser detects the beginning of an element. Syntax Obj-\u003e [ IDLffXMLSAX ::]StartElement, URI , Local , qName [, attName , attValue ] Arguments URI A string containing the namespace URI ...",t:"IDLffXMLSAX::StartElement"},"1820":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__StartEntity.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: StartEntity procedure method is called when the parser detects the start of an internal or external entity expansion. Syntax Obj-\u003e [ IDLffXMLSAX ::]StartEntity, Name Arguments Name A string containing the name of the entity. Keywords ...",t:"IDLffXMLSAX::StartEntity"},"1821":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__StartPrefix.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: StartPrefixMapping procedure method is called when the parser detects the beginning of a namespace declaration. Syntax Obj-\u003e [ IDLffXMLSAX ::]StartPrefixmapping, Prefix , URI Arguments Prefix A string containing the prefix, which is ...",t:"IDLffXMLSAX::StartPrefixmapping"},"1822":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__StopParsing.htm",a:"Syntax | Arguments | Keywords | Version History Call the IDLffXMLSAX::StopParsing procedure method during a parse operation to halt the operation and cause the ParseFile method to return. This may be useful when parsing large XML files and the desired information is known to have been returned. ...",t:"IDLffXMLSAX::StopParsing"},"1823":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__UnparsedEnt.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: UnparsedEntityDecl procedure method is called when the parser detects an \u003c!ENTITY ...\u003e declaration that includes the NDATA keyword, indicating that the entity is not meant to be parsed. The value of the NDATA keyword generally ...",t:"IDLffXMLSAX::UnparsedEntityDecl"},"1824":{i:0.000250000292035199,u:"../Content/Object Classes/File Format/IDLffXMLSAX__Warning.htm",a:"Syntax | Arguments | Keywords | Version History The IDLffXMLSAX:: Warning procedure method is called when the parser detects a problem during processing. This method prints an IDL error string to the IDL output log and allows the parser to continue processing. This method will cause error messages ...",t:"IDLffXMLSAX::Warning"},"1825":{i:6.43882667589095E-05,u:"../Content/Object Classes/Graphics/objects_gr.htm",a:"Graphics Object Classes This section describes IDL’s built-in graphics class library. ",t:"Graphics Object Classes"},"1826":{i:0.000361857608174249,u:"../Content/Object Classes/Graphics/IDLgrAxis.htm",a:"Superclasses | Creation | Properties | Methods | Version History An axis object represents a single vector that may include a set of tick marks, tick labels, and a title. An IDLgrAxis object is an atomic graphic object ; it is one of the basic drawable elements of the IDL Object Graphics system, and ...",t:"IDLgrAxis"},"1827":{i:0.000254828489114749,u:"../Content/Object Classes/Graphics/IDLgrAxis_Properties.htm",a:"IDLgrAxis objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrAxis::GetProperty . Properties with the word “Yes” in the “Init” column of the property table ...",t:"IDLgrAxis Properties"},"1828":{i:0.000162574347555493,u:"../Content/Object Classes/Graphics/IDLgrAxis__Cleanup.htm",a:"IDLgrAxis::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrAxis:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrAxis ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.0 Introduced ",t:"IDLgrAxis::Cleanup"},"1829":{i:0.000118704983804142,u:"../Content/Object Classes/Graphics/IDLgrAxis__GetCTM.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrAxis:: GetCTM function method returns the graphics transform matrix from the current object upward through the graphics tree. Syntax Result = Obj -\u003e[ IDLgrAxis ::]GetCTM([, DESTINATION = objref ] [, PATH = objref(s) ] [, TOP = ...",t:"IDLgrAxis::GetCTM"},"1830":{i:0.000160661406653383,u:"../Content/Object Classes/Graphics/IDLgrAxis__GetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrAxis:: GetProperty procedure method retrieves the value of a property or group of properties for the axis. Syntax Obj -\u003e[ IDLgrAxis ::]GetProperty [, PROPERTY = variable ] Arguments None Keywords Any property listed under IDLgrAxis Properties ...",t:"IDLgrAxis::GetProperty"},"1831":{i:0.000160661406653383,u:"../Content/Object Classes/Graphics/IDLgrAxis__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrAxis:: Init function method initializes an axis object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the Init ...",t:"IDLgrAxis::Init"},"1832":{i:0.000160661406653383,u:"../Content/Object Classes/Graphics/IDLgrAxis__SetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrAxis:: SetProperty procedure method sets the value of a property or group of properties for the axis. Syntax Obj -\u003e[ IDLgrAxis ::]SetProperty[, PROPERTY = value ] Arguments None Keywords Any property listed under IDLgrAxis Properties that ...",t:"IDLgrAxis::SetProperty"},"1833":{i:0.000739967644064374,u:"../Content/Object Classes/Graphics/IDLgrBuffer.htm",a:"Superclasses | Creation | Properties | Methods | Version History An IDLgrBuffer object is an in-memory, off-screen destination object. Object trees can be drawn to instances of the IDLgrBuffer object and the resulting image can be retrieved from the buffer using the Read() method. The off-screen ...",t:"IDLgrBuffer"},"1834":{i:0.000273888725201302,u:"../Content/Object Classes/Graphics/IDLgrBuffer_Properties.htm",a:"IDLgrBuffer objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrBuffer::GetProperty . Properties with the word “Yes” in the “Init” column of the property ...",t:"IDLgrBuffer Properties"},"1835":{i:0.000160054604606478,u:"../Content/Object Classes/Graphics/IDLgrBuffer__Cleanup.htm",a:"IDLgrBuffer::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrBuffer:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup  or Obj -\u003e[ IDLgrBuffer ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.0 Introduced ",t:"IDLgrBuffer::Cleanup"},"1836":{i:0.000110881036131537,u:"../Content/Object Classes/Graphics/IDLgrBuffer__Draw.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrBuffer:: Draw procedure method draws the given picture to this graphics destination. Objects are drawn to the destination device in the order that they are added to the model, view, viewgroup, or scene object that contains them. Syntax Obj -\u003e[ ...",t:"IDLgrBuffer::Draw"},"1837":{i:0.000160054604606478,u:"../Content/Object Classes/Graphics/IDLgrBuffer__Erase.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrBuffer:: Erase procedure method erases this graphics destination. Syntax Obj -\u003e[ IDLgrBuffer ::]Erase [, COLOR = index or RGB vector ] Arguments None Keywords COLOR Set this keyword to the color to be used for the erase. The color may be ...",t:"IDLgrBuffer::Erase"},"1838":{i:0.000116865110580622,u:"../Content/Object Classes/Graphics/IDLgrBuffer__GetContiguo.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrBuffer:: GetContiguousPixels function method returns an array of long integers whose length is equal to the number of colors available in the index color mode (that is, the value of the N_COLORS property). The returned array marks contiguous ...",t:"IDLgrBuffer::GetContiguousPixels"},"1839":{i:0.000160054604606478,u:"../Content/Object Classes/Graphics/IDLgrBuffer__GetDeviceIn.htm",a:"Syntax | Arguments | Keywords | Version History The IDL grBuffer::GetDeviceInfo procedure method returns information which allows IDL applications to intelligently make decisions for optimal performance. For example, it allows an application to determine if RENDERER=1 is actually implemented in ...",t:"IDLgrBuffer::GetDeviceInfo"},"1840":{i:0.000128415773389544,u:"../Content/Object Classes/Graphics/IDLgrBuffer__GetFontname.htm",a:"The IDLgrBuffer:: GetFontnames function method returns the list of available fonts that can be used in IDLgrFont objects. This method will only return the names of the available TrueType fonts. Hershey fonts will not be returned. Syntax Result = Obj -\u003e[ IDLgrBuffer ::]GetFontnames( FamilyName [, ...",t:"IDLgrBuffer::GetFontnames"},"1841":{i:0.000174822402847782,u:"../Content/Object Classes/Graphics/IDLgrBuffer__GetProperty.htm",a:"Syntax | Keywords | Version History The IDLgrBuffer:: GetProperty procedure method retrieves the value of a property or group of properties for the buffer. Syntax Obj -\u003e[ IDLgrBuffer ::]GetProperty[, PROPERTY = variable ] Keywords Any property listed under IDLgrBuffer Properties that contains the ...",t:"IDLgrBuffer::GetProperty"},"1842":{i:0.000116865110580622,u:"../Content/Object Classes/Graphics/IDLgrBuffer__GetTextDime.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrBuffer:: GetTextDimensions function method retrieves the dimensions of a text or axis object that will be rendered in a window. In order to compute the effective text dimensions, the object must be inserted into an object graphics hierarchy ...",t:"IDLgrBuffer::GetTextDimensions"},"1843":{i:0.000174822402847782,u:"../Content/Object Classes/Graphics/IDLgrBuffer__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrBuffer:: Init function method initializes the buffer object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the ...",t:"IDLgrBuffer::Init"},"1844":{i:0.000128415773389544,u:"../Content/Object Classes/Graphics/IDLgrBuffer__PickData.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrBuffer:: PickData function method maps a point in the two-dimensional device space of the buffer to a point in the three-dimensional data space of an object tree. The resulting 3-D data space coordinates are returned in a user-specified ...",t:"IDLgrBuffer::PickData"},"1845":{i:0.000110881036131537,u:"../Content/Object Classes/Graphics/IDLgrBuffer__QueryRequir.htm",a:"The IDLgrBuffer:: QueryRequiredTiles function method is used in conjunction with an IDLgrImage object that supports tiling. Initially, this type of IDLgrImage object contains no data. Call this method to determine what data to load into this destination object based on which tiles are visible in a ...",t:"IDLgrBuffer::QueryRequiredTiles "},"1846":{i:0.000128415773389544,u:"../Content/Object Classes/Graphics/IDLgrBuffer__Read.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrBuffer:: Read function method reads an image from a buffer. The returned value is an instance of the IDLgrImage object class. Syntax Result = Obj -\u003e[ IDLgrBuffer ::]Read() Return Value Returns an instance of the IDLgrImage object class. ...",t:"IDLgrBuffer::Read"},"1847":{i:0.000116865110580622,u:"../Content/Object Classes/Graphics/IDLgrBuffer__Select.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrBuffer:: Select function method returns a list of objects selected at a specified location. If no objects are selected, the Select function returns -1. IDL returns a maximum of 512 objects. This maximum may be smaller if any of the objects are ...",t:"IDLgrBuffer::Select"},"1848":{i:0.000174822402847782,u:"../Content/Object Classes/Graphics/IDLgrBuffer__SetProperty.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrBuffer:: SetProperty procedure method sets the value of a property or group of properties for the buffer. Syntax Obj -\u003e[ IDLgrBuffer ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrBuffer Properties ...",t:"IDLgrBuffer::SetProperty"},"1849":{i:0.000527128945007532,u:"../Content/Object Classes/Graphics/IDLgrClipboard.htm",a:"Superclasses | Creation | Properties | Methods | Examples | Version History An IDLgrClipboard object sends Object Graphics output to the operating system native clipboard or to a file in bitmap or vector format. The FILENAME, VECTOR, and POSTSCRIPT keyword values in the IDLgrClipboard::Draw method, ...",t:"IDLgrClipboard"},"1850":{i:0.000279465669169742,u:"../Content/Object Classes/Graphics/IDLgrClipboard_Propertie.htm",a:"IDLgrClipboard objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrClipboard::GetProperty . Properties with the word “Yes” in the “Init” column of the ...",t:"IDLgrClipboard Properties"},"1851":{i:0.00015565065518468,u:"../Content/Object Classes/Graphics/IDLgrClipboard__Cleanup.htm",a:"IDLgrClipboard::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrClipboard:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrClipboard ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.1 Introduced ",t:"IDLgrClipboard::Cleanup"},"1852":{i:0.000107830113717543,u:"../Content/Object Classes/Graphics/IDLgrClipboard__Draw.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrClipboard:: Draw procedure method draws the given picture to this graphics destination. Writing to a File The file type produced when the IDLgrClipboard::Draw method is passed an IDLgrView, IDLgrViewgroup, or IDLgrScene object depends upon ...",t:"IDLgrClipboard::Draw"},"1853":{i:0.000113649534538159,u:"../Content/Object Classes/Graphics/IDLgrClipboard__GetConti.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrClipboard:: GetContiguousPixels function method returns an array of long integers whose length is equal to the number of colors available in the index color mode (that is, the value of the N_COLORS property). The returned array marks ...",t:"IDLgrClipboard::GetContiguousPixels"},"1854":{i:0.00015565065518468,u:"../Content/Object Classes/Graphics/IDLgrClipboard__GetDevic.htm",a:"Syntax | Arguments | Keywords | Version History The IDL grClipboard::GetDeviceInfo procedure method returns information which allows IDL applications to intelligently make decisions for optimal performance. For example, it allows an application to determine if RENDERER=1 is actually implemented in ...",t:"IDLgrClipboard::GetDeviceInfo"},"1855":{i:0.000124882377249484,u:"../Content/Object Classes/Graphics/IDLgrClipboard__GetFontn.htm",a:"The IDLgrClipboard::GetFontnames function method returns the list of available fonts that can be used in IDLgrFont objects. This method will only return the names of the available TrueType fonts. Hershey fonts will not be returned. Syntax Result = Obj -\u003e[ IDLgrClipboard ::]GetFontnames( FamilyName ...",t:"IDLgrClipboard::GetFontnames"},"1856":{i:0.000172233930318212,u:"../Content/Object Classes/Graphics/IDLgrClipboard__GetPrope.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrClipboard:: GetProperty procedure method retrieves the value of a property or group of properties for the clipboard buffer. Syntax Obj -\u003e[ IDLgrClipboard ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under ...",t:"IDLgrClipboard::GetProperty"},"1857":{i:0.000132407276970804,u:"../Content/Object Classes/Graphics/IDLgrClipboard__GetTextD.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrClipboard:: GetTextDimensions function method retrieves the dimensions of a text or axis object that will be rendered in the clipboard buffer. In order to compute the effective text dimensions, the object must be inserted into an object ...",t:"IDLgrClipboard::GetTextDimensions"},"1858":{i:0.000172233930318212,u:"../Content/Object Classes/Graphics/IDLgrClipboard__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrClipboard:: Init function method initializes the clipboard object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call ...",t:"IDLgrClipboard::Init"},"1859":{i:0.000104270663321836,u:"../Content/Object Classes/Graphics/IDLgrClipboard__QueryReq.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrCliboard:: QueryRequiredTiles function method is used in conjunction with an IDLgrImage object that supports tiling. Initially, this type of IDLgrImage object contains no data. Call this method to determine what data to load into this ...",t:"IDLgrClipboard::QueryRequiredTiles "},"1860":{i:0.000172233930318212,u:"../Content/Object Classes/Graphics/IDLgrClipboard__SetPrope.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrClipboard::SetProperty procedure method sets the value of a property or group of properties for the clipboard buffer. Syntax Obj -\u003e[ IDLgrClipboard ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under ...",t:"IDLgrClipboard::SetProperty"},"1861":{i:0.000332361751815314,u:"../Content/Object Classes/Graphics/IDLgrColorbar.htm",a:"Superclasses | Creation | Methods | Version History The IDLgrColorbar object consists of a color-ramp with an optional framing box and annotation axis. The object can be horizontal or vertical. An IDLgrColorbar object is a composite object ; it is one of the basic drawable elements of the IDL Object ...",t:"IDLgrColorbar"},"1862":{i:0.000309705668537595,u:"../Content/Object Classes/Graphics/IDLgrColorbar_Properties.htm",a:"IDLgrColorbar objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrColorbar::GetProperty . Properties with the word “Yes” in the “Init” column of the ...",t:"IDLgrColorbar Properties"},"1863":{i:0.000150300218141602,u:"../Content/Object Classes/Graphics/IDLgrColorbar__Cleanup.htm",a:"IDLgrColorbar::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrColorbar:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrColorbar ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.1 Introduced ",t:"IDLgrColorbar::Cleanup"},"1864":{i:0.000120589622303462,u:"../Content/Object Classes/Graphics/IDLgrColorbar__ComputeDi.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrColorbar:: ComputeDimensions function method retrieves the dimensions of a colorbar object for the given destination object. In order to compute the effective dimensions, the object must be inserted into an object graphics hierarchy prior to ...",t:"IDLgrColorbar::ComputeDimensions"},"1865":{i:0.000166505582375097,u:"../Content/Object Classes/Graphics/IDLgrColorbar__GetProper.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrColorbar:: GetProperty procedure method retrieves the value of a property or group of properties for the colorbar. Syntax Obj -\u003e[ IDLgrColorbar ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under ...",t:"IDLgrColorbar::GetProperty"},"1866":{i:0.000166505582375097,u:"../Content/Object Classes/Graphics/IDLgrColorbar__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrColorbar:: Init function method initializes the colorbar object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call ...",t:"IDLgrColorbar::Init"},"1867":{i:0.000166505582375097,u:"../Content/Object Classes/Graphics/IDLgrColorbar__SetProper.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrColorbar:: SetProperty procedure method sets the value of a property or group of properties for the colorbar. Syntax Obj -\u003e[ IDLgrColorbar ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrColorbar ...",t:"IDLgrColorbar::SetProperty"},"1868":{i:0.000471955223866871,u:"../Content/Object Classes/Graphics/IDLgrContour.htm",a:"Superclasses | Properties | Creation | Methods | Version History The IDLgrContour object draws a contour plot from data stored in a rectangular array or from a set of unstructured points. Both line contours and filled contour plots can be created. An IDLgrContour object is an atomic graphic object ; ...",t:"IDLgrContour"},"1869":{i:0.000280538781029301,u:"../Content/Object Classes/Graphics/IDLgrContour_Properties.htm",a:"IDLgrContour objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrContour::GetProperty . Properties with the word “Yes” in the “Init” column of the property ...",t:"IDLgrContour Properties"},"1870":{i:0.000159134260997273,u:"../Content/Object Classes/Graphics/IDLgrContour__AdjustLabe.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrContour::AdjustLabelOffsets procedure method adjusts the offsets at which contour labels are positioned. Syntax Obj -\u003e[ IDLgrContour ::]AdjustLabelOffsets, LevelIndex, LabelOffsets Arguments LevelIndex The index of the contour level for which ...",t:"IDLgrContour::AdjustLabelOffsets"},"1871":{i:0.000159134260997273,u:"../Content/Object Classes/Graphics/IDLgrContour__Cleanup.htm",a:"IDLgrContour::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrContour:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrContour ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 5.1 Introduced ",t:"IDLgrContour::Cleanup"},"1872":{i:0.000116193148646598,u:"../Content/Object Classes/Graphics/IDLgrContour__GetCTM.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrContour:: GetCTM method returns the 4 x 4 double-precision floating-point graphics transform matrix from the current object upward through the graphics tree. Syntax Result = Obj -\u003e[ IDLgrContour ::]GetCTM( [, DESTINATION = objref ] [, PATH = ...",t:"IDLgrContour::GetCTM"},"1873":{i:0.000127677386943317,u:"../Content/Object Classes/Graphics/IDLgrContour__GetLabelIn.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrContour::GetLabelInfo procedure method retrieves information about the labels for a contour. The returned information is only valid until the next time the C_LABEL_INTERVAL or C_LABEL_OBJECTS property is modified using the ...",t:"IDLgrContour::GetLabelInfo"},"1874":{i:0.000169269060445171,u:"../Content/Object Classes/Graphics/IDLgrContour__GetPropert.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrContour:: GetProperty procedure method retrieves the value of a property or group of properties for the contour. Syntax Obj -\u003e[ IDLgrContour ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under IDLgrContour ...",t:"IDLgrContour::GetProperty"},"1875":{i:0.000219746311941448,u:"../Content/Object Classes/Graphics/IDLgrContour__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrContour:: Init function method initializes the contour object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the ...",t:"IDLgrContour::Init"},"1876":{i:0.000169269060445171,u:"../Content/Object Classes/Graphics/IDLgrContour__SetPropert.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrContour:: SetProperty procedure method sets the value of a property or group of properties for the contour. Syntax Obj -\u003e[ IDLgrContour ::]SetProperty[, PROPERTY=value ] Arguments None Keywords Any property listed under IDLgrContour Properties ...",t:"IDLgrContour::SetProperty"},"1877":{i:0.000860736048122044,u:"../Content/Object Classes/Graphics/IDLgrFilterChain.htm",a:"An IDLgrFilterChain object is a specialization of the IDL_Container object that is designed to execute a sequence of image filtering shader objects according to their container order. The chain of shader objects must be “image filtering” shaders (those designed to modify an IDLgrImage object). To ...",t:"IDLgrFilterChain"},"1878":{i:0.000352509409523522,u:"../Content/Object Classes/Graphics/IDLgrFilterChain_Propert.htm",a:"IDLgrFilterChain objects have the following properties. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLgrFilterChain::GetProperty . Properties with the word “Yes” in the “Init” column of the property table can be set via IDLgrFilterChain::Init . ...",t:"IDLgrFilterChain Properties"},"1879":{i:0.000193589145200364,u:"../Content/Object Classes/Graphics/IDLgrFilterChain__Cleanu.htm",a:"IDLgrFilterChain::Cleanup Syntax | Arguments | Keywords | Version History The IDLgrFilterChain:: Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLgrFilterChain ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 6.4 Introduced ",t:"IDLgrFilterChain::Cleanup"},"1880":{i:0.000288757047291045,u:"../Content/Object Classes/Graphics/IDLgrFilterChain__GetPro.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrFilterChain:: GetProperty procedure method retrieves the value of a property or group of properties for this object. Syntax Obj -\u003e[ IDLgrFilterChain ::]GetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under ...",t:"IDLgrFilterChain::GetProperty"},"1881":{i:0.000225004685058568,u:"../Content/Object Classes/Graphics/IDLgrFilterChain__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLgrFilterChain:: Init function method initializes the filter chain object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot ...",t:"IDLgrFilterChain::Init"},"1882":{i:0.000161252322826091,u:"../Content/Object Classes/Graphics/IDLgrFilterChain__SetPro.htm",a:"Syntax | Arguments | Keywords | Version History The IDLgrFilterChain:: SetProperty procedure method retrieves the value of a property or group of properties for this object. Syntax Obj -\u003e[ IDLgrFilterChain ::]SetProperty[, PROPERTY=variable ] Arguments None Keywords Any property listed under ...",t:"IDLgrFilterChain::SetProperty"},"1883":{i:0.000842228769371303,u:"../Content/Object Classes/Graphics/IDLgrFont.htm",a:"Superclasses | Properties | Creation | Methods | Examples | Version History A font object represents a typeface, style, weight, and point size that may be associated with text objects. Creating Font Objects Fonts used by font objects are specified in a string constant constructed from a font name ...",t:"IDLgrFont"},});