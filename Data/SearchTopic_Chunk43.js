define({"3061":{i:0.000155650772323739,u:"../Content/DICOM_Medical/Using IDL DICOM Network Services/ManagingStorageSCPService.htm",a:"You can start and stop the Storage SCP service from within the DICOM Network Services utility. You will typically use the Storage SCP Service Manager after making changes to the Storage SCP Service configuration, or before performing a retrieve operation if you did not select to have the service ...",t:"Managing the Storage SCP Service"},"3062":{i:5.50327019655568E-05,u:"../Content/DICOM_Medical/Using IDL DICOM Network Services/StartingStoppingServiceOutsideUtility.htm",a:"On Windows, use the Windows Services Administrative tool to start or stop the IDL DicomEx Storage SCP service. To access the Service dialog, select Start \u003e Control Panel \u003e Administrative Tools , and double-click Services in the Administrative Tools list. On UNIX and Mac OS X, start the service from ...",t:"Starting and Stopping the Service Outside the Utility"},"3063":{i:0.00120623462770827,u:"../Content/DICOM_Medical/Using IDL DICOM Network Services/DICOMUserInterface.htm",a:"The user interface of the DICOM Network Services utility varies depending on whether it is started in system or local mode. See System Mode Interface and Local Mode Interface below for user interface details. System Mode Interface When you start the DICOM Network Services utility in system mode, you ...",t:"DICOM Network Services User Interface"},"3064":{i:0.000326877493592105,u:"../Content/DICOM_Medical/IDL DICOM Reference/DICOMEX_GETCONFIGFILEPAT.htm",a:"The DICOMEX_GETCONFIGFILEPATH function returns the location of the local or system configuration file associated with Application Entities defined in the DICOM Network Services utility. See Local Versus System Configuration for information on this distinction. This function will fail if you have not ...",t:"DICOMEX_GETCONFIGFILEPATH"},"3065":{i:0.000110065111750945,u:"../Content/DICOM_Medical/IDL DICOM Reference/DICOMEX_GETSTORSCPDIR.htm",a:"Use the DICOMEX_GETSTORSCPDIR function to return the location of the directory associated with the Storage SCP Service. The location of this directory is configured using the DICOM Network Services utility as described in Configuring Your System to Receive Files . When performing a query/retrieve ...",t:"DICOMEX_GETSTORSCPDIR\n        "},"3066":{i:0.000246891068016098,u:"../Content/DICOM_Medical/IDL DICOM Reference/DICOMEX_NET.htm",a:"Use the DICOMEX_NET procedure to launch the DICOM Network Services utility, which supports the following DICOM network services: Echo SCU Query/Retrieve SCU Storage SCU Storage SCP See Overview of DICOM Network Services for an introduction. See Using IDL DICOM Network Services for complete details ...",t:"DICOMEX_NET\n        "},"3067":{i:0.00169312861587939,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx.htm",a:"The IDLffDicomEx object allows you to access, read from, and write to DICOM files. Depending on how you initialize the IDLffDicomEx object, you can create a new DICOM file, clone and modify an existing DICOM file, or access elements from a file in read-only mode. See IDLffDicomEx::Init for details. ...",t:"IDLffDicomEx"},"3068":{i:0.000134861392816104,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExOverview.htm",a:"The IDLffDicomEx object provides methods for reading and writing pixel data to a DICOM file, and for specifying the data compression. Other methods let you add, modify, or remove public and private DICOM attribute tags, public and private sequences, and sets of repeating tags within sequences. See ...",t:"IDLffDicomEx Overview"},"3069":{i:0.000264845436971136,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExProperties.htm",a:"The IDLffDicomEx object has the following properties. BITS_ALLOCATED BITS_STORED COLUMNS FILENAME HIGH_BIT IMAGE_TYPE INSTANCE_NUMBER MODALITY NO_PIXEL_DATA NUMBER_OF_FRAMES PHOTOMETRIC_INTERPRETATION PIXEL_ASPECT_RATIO PIXEL_MAX PIXEL_MIN PIXEL_REPRESENTATION PIXEL_SPACING PLANAR_CONFIGURATION ROWS ...",t:"IDLffDicomEx Properties\n        "},"3070":{i:0.000154985047369439,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__AddGroup.htm",a:"The IDLffDicomEx::AddGroup function method creates a series of repeating tags within a sequence. For example, the same set of 10 tags could be repeated 4 times in one sequence, which means the sequence would have 4 groups, each with the same 10 tags. When calling AddGroup the DicomTag argument ...",t:"IDLffDicomEx::AddGroup\n        "},"3071":{i:0.000119125281211733,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__AddPrivateGroup.htm",a:"The IDLffDicomEx::AddPrivateGroup function method creates a group within a private sequence. A group is a set of repeating tags in a sequence. For example a sequence can have the same set of 10 tags repeat itself 4 times in one sequence, which means the sequence would have 4 groups, each with the ...",t:"IDLffDicomEx::AddPrivateGroup\n        "},"3072":{i:0.00017615949483222,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__AddPrivateSequence.htm",a:"The IDLffDicomEx::AddPrivateSequence function method creates a new private sequence. When calling AddPrivateSequence the PrivateCode, Group, and Element arguments identify the characteristics and placement of the private sequence. The optional PARENTSEQID keyword can be used to create a nested ...",t:"IDLffDicomEx::AddPrivateSequence\n        "},"3073":{i:0.000154985047369439,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__AddSequence.htm",a:"The IDLffDicomEx::AddSequence function method creates a new sequence. The DicomTag argument specifies a sequence (SQ) attribute, which must be part of the standard IOD (Information Object Definition) for the DICOM file type (unless the NON_CONFORMING keyword was set when the IDLffDicomEx object was ...",t:"IDLffDicomEx::AddSequence\n        "},"3074":{i:0.00041868581381631,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__ChangeTransferSyntax.htm",a:"The IDLffDicomEx::ChangeTransferSyntax procedure method changes the transfer syntax of the IDLffDicomEx object and its associated pixel data. This allows you to change the compression setting of the pixel data and ensure that the transfer syntax value and pixel data are synchronized. Directly ...",t:"IDLffDicomEx::ChangeTransferSyntax\n        "},"3075":{i:0.000104659889717658,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__Cleanup.htm",a:"The IDLffDicomEx::Cleanup procedure method performs all cleanup on the object. Cleanup methods are special lifecycle methods , and as such cannot be called outside the context of object creation and destruction. In most cases, you cannot call the Cleanup method directly. However, one exception to ...",t:"IDLffDicomEx::Cleanup\n        "},"3076":{i:0.000539207689535857,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__Commit.htm",a:"The IDLffDicomEx::Commit procedure method writes changes to the underlying DICOM file. The in-memory copy of the DICOM file is freed when Commit is called. After a call to Commit any outstanding sequence identifiers for this object will be invalid. You must use IDLffDicomEx::GetPrivateValue (for ...",t:"IDLffDicomEx::Commit    "},"3077":{i:0.000121934102308598,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__CopyTags.htm",a:"The IDLffDicomEx::CopyTags procedure method copies all the tags from the source object to the destination object beginning with the DICOM attribute tag specified by the Start_Tag and copying up to the Stop_Tag . This method does a deep copy of a tag, which means it copies all sub-items, even ...",t:"IDLffDicomEx::CopyTags\n        "},"3078":{i:0.000199477518912623,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__EnumerateTags.htm",a:"The IDLffDicomEx::EnumerateTags function method returns an array of structures representing the contents of the DICOM file. Each structure contains fields relating to values within the DICOM attribute. This method allows you to access the contents of the DICOM file (specified by start and end tags) ...",t:"IDLffDicomEx::EnumerateTags"},"3079":{i:0.000104659889717658,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__GetDescription.htm",a:"The IDLffDicomEx::GetDescription function method returns the description associated with a public DICOM attribute specified by a standard DICOM attribute tag. Syntax Result = Obj -\u003e[ IDLffDicomEx ::]GetDescription( DicomTag ) Return Value Arguments DicomTag A string that identifies the group and ...",t:"IDLffDicomEx::GetDescription"},"3080":{i:0.000201960818114293,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__GetPixelData.htm",a:"The IDLffDicomEx::GetPixelData function method returns the uncompressed pixel data from the DICOM image file. (If pixel data is stored in a compressed format, it is uncompressed before it is returned.) A DICOM file may store a single-frame image or a multiple-frame image. In the case of a ...",t:"IDLffDicomEx::GetPixelData\n"},"3081":{i:0.000562565145813673,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__GetPrivateValue.htm",a:"The IDLffDicomEx::GetPrivateValue function method returns the value of a private DICOM attribute using a private code defined by the author of the private tag, a group number and part of the element tag instead of a standard DICOM attribute tag. GetPrivateValue will fail if you attempt to return a ...",t:"IDLffDicomEx::GetPrivateValue"},"3082":{i:0.000160123212353687,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__GetPrivateValueCount.htm",a:"The IDLffDicomEx::GetPrivateValueCount function method returns the number of values contained in the value field of a private DICOM attribute. This method uses a private code defined by the author of the private tag, a group number, and part of the element tag instead of a standard DICOM attribute ...",t:"IDLffDicomEx::GetPrivateValueCount\n"},"3083":{i:0.000515194295805692,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__GetPrivateValueLength.htm",a:"The IDLffDicomEx::GetPrivateValueLength function method returns the length of all values or of a specified value (in bytes) in a private DICOM attribute. This method uses a private code defined by the author of the private tag, a group number, and part of the element tag instead of a standard DICOM ...",t:"IDLffDicomEx::GetPrivateValueLength\n"},"3084":{i:0.000146908948306498,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__GetPrivateVR.htm",a:"The IDLffDicomEx::GetPrivateVR function method returns the Value Representation (VR) of a private DICOM attribute. This method uses a private code defined by the author of the private tag, a group number, and part of the element tag instead of a standard DICOM attribute tag to identify the private ...",t:"IDLffDicomEx::GetPrivateVR\n"},"3085":{i:0.000127172088235188,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__GetProperty.htm",a:"The IDLffDicomEx::GetProperty procedure method retrieves the value of an IDLffDicomEx property. GetProperty will fail if you attempt to return a value for an attribute that does not exist, an attribute that does not have a value, or an attribute that has been removed. If you are not sure an ...",t:"IDLffDicomEx::GetProperty"},"3086":{i:0.000584115834814126,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__GetValue.htm",a:"The IDLffDicomEx::GetValue function method returns the value of a DICOM attribute specified by a standard DICOM attribute tag. This method allows you to return values of public attributes. See IDLffDicomEx::GetPrivateValue for information on returning the values of private attributes. GetValue will ...",t:"IDLffDicomEx::GetValue\n"},"3087":{i:0.000126096576641581,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__GetValueCount.htm",a:"The IDLffDicomEx::GetValueCount function method returns the number of values in a DICOM attribute specified by a standard DICOM attribute tag. This method allows you to return the number of values contained in public attributes. See IDLffDicomEx::GetPrivateValueCount for information on returning the ...",t:"IDLffDicomEx::GetValueCount\n"},"3088":{i:0.000218343858429859,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__GetValueLength.htm",a:"The IDLffDicomEx::GetValueLength function method returns the length of all values or of a specified value (in bytes) in a standard DICOM attribute. This method allows you to return the length of values contained in public attributes. See IDLffDicomEx::GetPrivateValueLength for information on ...",t:"IDLffDicomEx::GetValueLength\n"},"3089":{i:0.000121934102308598,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__GetVR.htm",a:"The IDLffDicomEx::GetVR function method returns the Value Representation (VR) of a DICOM attribute. This method allows you to return the VR of a public attribute. See IDLffDicomEx::GetPrivateVR for information on returning the VR of a private attribute. GetVR will fail if you attempt to return a ...",t:"IDLffDicomEx::GetVR"},"3090":{i:0.00019430266009525,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__Init.htm",a:"The IDLffDicomEx::Init method initializes a IDLffDicomEx object. The IDLffDicomEx object allows you to read and write DICOM files, or create a new DICOM file based on keyword settings. This method can be used to create any type of DICOM file, including files without image data as defined by the SOP ...",t:"IDLffDicomEx::Init\n        "},"3091":{i:0.000543263177608741,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__QueryPrivateValue.htm",a:"The IDLffDicomEx::QueryPrivateValue function method checks a DICOM file for the presence of a specified private attribute. This method allows you to verify the presence of a tag prior to calling a method that requires a DICOM attribute to be present in order to succeed. Attempting to call ...",t:"IDLffDicomEx::QueryPrivateValue"},"3092":{i:0.000426674645137206,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__QueryValue.htm",a:"The IDLffDicomEx::QueryValue function method checks a DICOM file for the presence of a specified attribute. This method allows you to verify the presence of a tag prior to calling a method that requires a DICOM attribute to be present and have a value in order to succeed. Attempting to call ...",t:"IDLffDicomEx::QueryValue\n        "},"3093":{i:0.000320845509257263,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__SetPixelData.htm",a:"The IDLffDicomEx::SetPixelData function method writes pixel data to the DICOM image file. DICOM files can store pixel data for a single-frame image or a multi-frame image. This method accepts uncompressed pixel data. If the transfer syntax of the DICOM file indicates the image is to be stored in a ...",t:" IDLffDicomEx::SetPixelData\n        "},"3094":{i:0.000191197396026686,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__SetPrivateValue.htm",a:"The IDLffDicomEx::SetPrivateValue procedure method allows you to add and alter private attributes including items contained in sequences. When modifying the value of an existing private tag that is contained in a sequence, you must supply a SEQID keyword value. Use the ...",t:"IDLffDicomEx::SetPrivateValue\n        "},"3095":{i:0.000184483607018925,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__SetProperty.htm",a:"The IDLffDicomEx::SetProperty procedure method sets the value of a property or group of properties for the IDLffDicomEx object. Syntax Obj -\u003e[ IDLffDicomEx ::] SetProperty [, PROPERTY = value ] Return Value Arguments None Keywords Any property listed under IDLffDicomEx Properties that contains the ...",t:"IDLffDicomEx::SetProperty\n        "},"3096":{i:0.000212296566153176,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomEx__SetValue.htm",a:"The IDLffDicomEx::SetValue procedure method allows you to add and alter attributes including items contained in sequences. When modifying the value of an existing tag that is contained in a sequence, you must supply a SEQID keyword value. Use the IDLffDicomEx::AddSequence method or the ...",t:"IDLffDicomEx::SetValue\n        "},"3097":{i:0.0011961103961861,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg.htm",a:"The IDLffDicomExCfg object allows you to set and retrieve the values of IDL DICOM Network Service configuration parameters. See Using IDL DICOM Network Services for more information. The values accessible to this object can also be modified using the graphical user interface provided by the DICOM ...",t:"IDLffDicomExCfg"},"3098":{i:0.000108543190670369,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__Cleanup.htm",a:"The IDLffDicomExCfg::Cleanup procedure method performs all cleanup on the object, including closing the associated configuration file. Cleanup methods are special lifecycle methods , and as such cannot be called outside the context of object creation and destruction. In most cases, you cannot call ...",t:"IDLffDicomExCfg::Cleanup"},"3099":{i:0.000246344912245553,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__Commit.htm",a:"The IDLffDicomExCfg::Commit procedure method commits changes made to the object and saves them to the underlying configuration file. Changes are not applied to the current configuration or saved in the configuration file until this method is called. Syntax Obj -\u003e[ IDLffDicomExCfg ::]Commit Arguments ...",t:"IDLffDicomExCfg::Commit"},"3100":{i:0.000188771415052629,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__Echo.htm",a:"The IDLffDicomExCfg::Echo function method lets you test the network connection to a remote machine that supports Query SCP or Storage SCP service types. See Returning Connection Status with Echo for additional information. Syntax Result = Obj -\u003e[ IDLffDicomExCfg ::]Echo( ApplicationEntityName [, ...",t:"IDLffDicomExCfg::Echo"},"3101":{i:0.000151455862852472,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__GetApplicationEntities.htm",a:"The IDLffDicomExCfg::GetApplicationEntities function method returns an array of structures containing the definitions of all the application entities defined or all the application entities of a specified service type. Syntax Result = Obj -\u003e[ IDLffDicomExCfg ::]GetApplicationEntities( [, COUNT = ...",t:"IDLffDicomExCfg::GetApplicationEntities"},"3102":{i:0.000108543190670369,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__GetApplicationEntity.htm",a:"The IDLffDicomExCfg::GetApplicationEntity function method returns a structure containing the parameters for a specific Application Entity. Syntax Result = Obj -\u003e[ IDLffDicomExCfg ::]GetApplicationEntity( ApplicatonEntityName ) Return Value An IDLFFDICOMEXCFGAE structure representing the specified ...",t:"IDLffDicomExCfg::GetApplicationEntity"},"3103":{i:0.000228885527243759,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__GetServiceLists.htm",a:"The IDLffDicomExCfg::GetServiceLists function method returns an array of strings containing the names of the service lists that can be assigned to an Application Entity. Syntax Result = Obj -\u003e[ IDLffDicomExCfg ::]GetServcieLists( [, COUNT = variable ] ) Return Value An array of strings containing ...",t:"IDLffDicomExCfg::GetServiceLists"},"3104":{i:0.000303516631644073,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__GetServiceTypes.htm",a:"The IDLffDicomExCfg::GetServiceTypes function method returns an array of strings containing the list of service types that can be assigned to an Application Entity. Syntax Result = Obj -\u003e[ IDLffDicomExCfg ::]GetServiceTypes( [, COUNT = variable ] ) Return Value An array of strings containing the ...",t:"IDLffDicomExCfg::GetServiceTypes"},"3105":{i:0.000108543190670369,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__GetValue.htm",a:"The IDLffDicomExCfg::GetValue function method returns the value for the specified parameter. Syntax Result = Obj -\u003e[ IDLffDicomExCfg ::]GetValue( ConfigurationParameterName ) Return Value A string containing the value of the requested parameter. Arguments ConfigurationParameterName One of the ...",t:"IDLffDicomExCfg::GetValue"},"3106":{i:0.000137832771217394,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__Init.htm",a:"The IDLffDicomExCfg::Init function method initializes the IDLffDicomExCfg object. The IDLffDicomExCfg object allows you to set and retrieve the values of IDL DICOM Network Service configuration parameters. See Using IDL DICOM Network Services for more information. By default, the ...",t:"IDLffDicomExCfg::Init"},"3107":{i:0.000108543190670369,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__IsDirty.htm",a:"The IDLffDicomExCfg::IsDirty function method can be used to determine if configuration values have been changed since the configuration file was read into the configuration object. This information is useful if you are creating a user interface and want to warn the user to save the configuration ...",t:"IDLffDicomExCfg::IsDirty"},"3108":{i:0.000108543190670369,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__RemoveApplicationEntity.htm",a:"The IDLffDicomExCfg::RemoveApplicationEntity procedure method marks a specified Application Entity for removal from the collection of application entities. The Application Entity is not actually removed from the collection until the IDLffDicomExCfg::Commit method is called. Syntax Obj -\u003e[ ...",t:"IDLffDicomExCfg::RemoveApplicationEntity"},"3109":{i:0.000108543190670369,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__SetApplicationEntity.htm",a:"The IDLffDicomExCfg::SetApplicationEntity procedure method defines a new Application Entity or modifies the definition of an existing Application Entity. The Application Entity is not actually added or modified until the IDLffDicomExCfg::Commit method is called. Syntax Obj -\u003e[ IDLffDicomExCfg ...",t:"IDLffDicomExCfg::SetApplicationEntity"},"3110":{i:0.000161423115355659,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__SetValue.htm",a:"The IDLffDicomExCfg::SetValue procedure method sets the value for the specified parameter. The parameter value is not actually set until the IDLffDicomExCfg::Commit method is called. Syntax Obj -\u003e[ IDLffDicomExCfg ::]SetValue, ConfigurationParameterName , Value Arguments ConfigurationParameterName, ...",t:"IDLffDicomExCfg::SetValue"},"3111":{i:0.000108543190670369,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExCfg__StorageScpService.htm",a:"The IDLffDicomExCfg::StorageScpService function method is used to start, stop or check the status of the local IDL Storage SCP service. The local IDL Storage SCP service is a process that listens at a specified port for incoming DICOM files and writes the files to disk. On Microsoft Windows systems, ...",t:"IDLffDicomExCfg::StorageScpService"},"3112":{i:0.00064333808614414,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExQuery.htm",a:"The IDLffDicomExQuery object allows you to query the contents of a remote DICOM node that has been configured to work with IDL’s DICOM Network Service feature, and to retrieve DICOM files available on that node. See Defining a Machine to Be Queried for an overview of the process and information ...",t:"IDLffDicomExQuery"},"3113":{i:0.000100602795679419,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExQuery__Cleanup.htm",a:"The IDLffDicomExQuery::Cleanup procedure method performs all cleanup on the object. Cleanup methods are special lifecycle methods , and as such cannot be called outside the context of object creation and destruction. In most cases, you cannot call the Cleanup method directly. However, one exception ...",t:"IDLffDicomExQuery::Cleanup"},"3114":{i:0.000100602795679419,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExQuery__ClearProperties.htm",a:"The IDLffDicomExQuery::ClearProperties procedure method is used to reset the values of all properties of the IDLffDicomExQuery object to their default values. Syntax Obj -\u003e[ IDLffDicomExQuery ::]ClearProperties Arguments Keywords None Version History 6.3 Introduced ",t:"IDLffDicomExQuery::ClearProperties"},"3115":{i:0.000142454660577344,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExQuery__GetProperty.htm",a:"The IDLffDicomExQuery::GetProperty procedure method retrieves the value of an IDLffDicomExQuery property. Syntax Obj -\u003e[ IDLffDicomExQuery ::]GetProperty[, PROPERTY = variable ] Arguments Keywords Any property listed under IDLffDicomExQuery Properties that contains the word “Yes” in the “Get” column ...",t:"IDLffDicomExQuery::GetProperty"},"3116":{i:0.000142454660577344,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExQuery__Init.htm",a:"The IDLffDicomExQuery::Init function method initializes the IDLffDicomExQuery object. The IDLffDicomExQuery object allows you query or retrieve DICOM files from a remote node configured as a Query SCP available in IDL’s DICOM Network Service configuration. See Using IDL DICOM Network Services for ...",t:"IDLffDicomExQuery::Init"},"3117":{i:0.000248845073967446,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExQuery__Query.htm",a:"The IDLffDicomExQuery::Query function method is used to query a remote Query/Retrieve SCP Application Entity. A query message is constructed using the appropriate query field properties for the specified query model and query level; the query message is sent to the remote node, which sends a reply ...",t:"IDLffDicomExQuery::Query"},"3118":{i:0.00024774856551635,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExQuery__QueryModelsSupported.htm",a:"The IDLffDicomExQuery::QueryModelsSupported function method is used to determine what Query/Retrieve services are supported by Query/Retrieve SCP Application Entity defined by the QUERY_SCP property. The service types available determine the types of queries are supported. You may wish to check this ...",t:"IDLffDicomExQuery::QueryModelsSupported"},"3119":{i:0.000273440479833796,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExQuery__Retrieve.htm",a:"The IDLffDicomExQuery::Retrieve function method moves a DICOM file or files from a source node to a destination node. The source node is the remote Query/Retrieve SCP Application Entity that is queried. The destination node is a local or remote Storage SCP Application Entity. To accomplish the ...",t:"IDLffDicomExQuery::Retrieve"},"3120":{i:0.000142454660577344,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExQuery__SetProperty.htm",a:"The IDLffDicomExQuery::SetProperty procedure method sets the value of a property or group of properties for the IDLffDicomExQuery object. Syntax Obj -\u003e[ IDLffDicomExQuery ::]SetProperty[, PROPERTY=value ] Arguments Keywords Any property listed under IDLffDicomExQuery Properties that contains the ...",t:"IDLffDicomExQuery::SetProperty"},"3121":{i:0.000763944767096461,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExStorScu.htm",a:"Superclasses Creation Properties CALLBACK_DATA CALLBACK_FUNCTION STORAGE_SCP Methods This class has the following methods: IDLffDicomExStorScu::Cleanup IDLffDicomExStorScu::ClearProperties IDLffDicomExStorScu::GetProperty IDLffDicomExStorScu::Init IDLffDicomExStorScu::Send ...",t:"IDLffDicomExStorScu"},"3122":{i:0.000401365600886118,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExStorScuProperties.htm",a:"IDLffDicomExStorScu objects have the following properties. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLffDicomExStorScu::GetProperty . Properties with the word “Yes” in the “Init” column of the property table can be set via ...",t:"IDLffDicomExStorScu Properties "},"3123":{i:0.000147798977397438,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExStorScu__Cleanup.htm",a:"The IDLffDicomExStorScu::Cleanup procedure method performs all cleanup on the object. Cleanup methods are special lifecycle methods , and as such cannot be called outside the context of object creation and destruction. In most cases, you cannot call the Cleanup method directly. However, one ...",t:"IDLffDicomExStorScu::Cleanup"},"3124":{i:0.000147798977397438,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExStorScu__ClearProperties.htm",a:"IDLffDicomExStorScu::ClearProperties The IDLffDicomExStorScu::ClearProperties procedure method resets the values of all properties of the IDLffDicomExStorScu object to their default values. Syntax Obj -\u003e[ IDLffDicomExStorScu ::]ClearProperties Arguments Keywords None Version History 6.3 Introduced ",t:"IDLffDicomExStorScu::ClearProperties"},"3125":{i:0.000204660014179632,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExStorScu__GetProperty.htm",a:"The IDLffDicomExStorScu::GetProperty procedure method retrieves the value of an IDLffDicomExStorScu property. Syntax Obj -\u003e[ IDLffDicomExStorScu ::]GetProperty[, PROPERTY = variable ] Arguments Keywords Any property listed under IDLffDicomExStorScu Properties that contains the word “Yes” in the ...",t:"IDLffDicomExStorScu::GetProperty"},"3126":{i:0.000204660014179632,u:"../Content/DICOM_Medical/IDL DICOM Reference/IDLffDicomExStorScu__Init.htm",a:"The IDLffDicomExStorScu::Init function method initializes the IDLffDicomExStorScu object. The IDLffDicomExStorScu object implements a local DICOM Storage SCU that allows you to transmit files to a remote node that is configured as a DICOM Storage SCP available in IDL’s DICOM Network Service ...",t:"IDLffDicomExStorScu::Init"},});