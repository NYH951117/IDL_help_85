define({"2231":{i:0.000436259360693035,u:"../Content/Object Classes/Miscellaneous/IDLcomIDispatch.htm",a:"Superclasses | Subclasses | Creation | Methods | Version History The IDLcomIDispatch object class creates an IDL object that encapsulates a COM object. IDL provides data type and other translation services, allowing IDL programs to access the COM object’s methods and properties using standard IDL ...",t:"IDLcomIDispatch"},"2232":{i:0.000249252464976188,u:"../Content/Object Classes/Miscellaneous/IDLcomIDispatch_Properti.htm",a:"IDLcomIDispatch objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLcomIDispatch::GetProperty . Properties with the word “Yes” in the “Init” column of the ...",t:"IDLcomIDispatch Properties"},"2233":{i:0.000249252464976188,u:"../Content/Object Classes/Miscellaneous/IDLcomIDispatch__GetProp.htm",a:"Syntax | Arguments | Keywords | Version History The IDLcomIDispatch::GetProperty function method is used to get properties from the COM object that underlies an IDLcomIDispatch object. The COM object’s property names are represented as IDL keywords to the GetProperty method, and property values are ...",t:"IDLcomIDispatch::GetProperty"},"2234":{i:0.000310663992114589,u:"../Content/Object Classes/Miscellaneous/IDLcomIDispatch__Init.htm",a:"Syntax | Arguments | Keywords | Version History The IDLcomIDispatch::Init function method is used to initialize a given COM object and establish a link between the resulting IDL object and the IDispatch interface of the underlying COM object. Syntax Obj = OBJ_NEW(\u0027IDLcomIDispatch$ ID_type $ ID \u0027) or ...",t:"IDLcomIDispatch::Init"},"2235":{i:0.000249252464976188,u:"../Content/Object Classes/Miscellaneous/IDLcomIDispatch__SetProp.htm",a:"Syntax | Arguments | Keywords | Version History The IDLcomIDispatch::SetProperty function method is used to set properties for the COM object that underlies an IDLcomIDispatch object. The COM object’s property names are represented as IDL keywords to the SetProperty method, and property values are ...",t:"IDLcomIDispatch::SetProperty"},"2236":{i:0.00630141860278795,u:"../Content/Object Classes/Miscellaneous/IDLitComponent.htm",a:"Superclasses | Creation | Properties | Methods | Version History The IDLitComponent class is the base component from which all iTool components should subclass. The IDLitComponent class provides support for property descriptors and property registration, and defines properties that are common to all ...",t:"IDLitComponent"},"2237":{i:0.00122681069913517,u:"../Content/Object Classes/Miscellaneous/IDLitComponent_Propertie.htm",a:"IDLitComponent objects have the following properties. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLitComponent::GetProperty . Properties with the word “Yes” in the “Init” column of the property table can be set via IDLitComponent::Init . Properties ...",t:"IDLitComponent Properties"},"2238":{i:0.000613255069971135,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__Cleanup.htm",a:"Syntax | Arguments | Keywords | Version History The IDLitComponent::Cleanup procedure method performs all cleanup on the object, and should be called by the Cleanup method of a subclass. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLitComponent ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None ...",t:"IDLitComponent::Cleanup"},"2239":{i:0.00136104919543577,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__EditUser.htm",a:"Syntax | Return Value | Arguments | Keywords | Example | Version History The IDLitComponent::EditUserDefProperty function method defines the interface that is displayed when a user selects the “Edit” button on a user-defined property in the property sheet interface. Typically, this method will ...",t:"IDLitComponent::EditUserDefProperty"},"2240":{i:0.000613255069971135,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__GetFullI.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLitComponent::GetFullIdentifier function method navigates the iTool object container hierarchy of the object on which it is called and retrieves the fully-qualified object identifier. The full identifier is constructed by ...",t:"IDLitComponent::GetFullIdentifier"},"2241":{i:0.000783056540611619,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__GetPrope.htm",a:"Syntax\n                 | Arguments | Keywords | Version History The IDLitComponent::GetProperty procedure method retrieves the value of an IDLitComponent property or properties. Obj -\u003e[ IDLitComponent ::]GetProperty[, PROPERTY = variable ] [, / NO_COPY ] None Any property listed under ...",t:"IDLitComponent::GetProperty"},"2242":{i:0.000699222085514587,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__GetPrope1.htm",a:"Syntax | Arguments | Keywords | Version History The IDLitComponent::GetPropertyAttribute procedure method retrieves property attribute values for a registered property. Obj -\u003e[ IDLitComponent ::]GetPropertyAttribute, PropertyIdentifier [, TYPE = variable ] PropertyIdentifier A string containing the ...",t:"IDLitComponent::GetPropertyAttribute"},"2243":{i:0.000613255069971135,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__GetPrope2.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLitComponent::GetPropertyByIdentifier function method retrieves the value of an IDLitComponent property. The IDLitComponent::GetPropertyByIdentifier method is similar to the IDLitComponent::GetProperty method, but is useful for ...",t:"IDLitComponent::GetPropertyByIdentifier"},"2244":{i:0.000783056540611619,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__Init.htm",a:"Syntax\n                | Return Value | Arguments | Keywords | Version History The IDLitComponent::Init function method initializes the IDLitComponent object, and should be called by the Init method of a subclass. Init methods are special lifecycle methods , and as such cannot be called outside the ...",t:"IDLitComponent::Init"},"2245":{i:0.000352610574461435,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__NotifyBr.htm",a:"Syntax | Arguments | Keywords | Version History The IDLitComponent::NotifyBridge procedure method is used to broadcast a notification message to the Export Bridge object that is wrapping the IDLitComponent object. If this method is called on an object that is not connected to the Export Bridge, the ...",t:"IDLitComponent::NotifyBridge"},"2246":{i:0.000884631685642348,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__QueryPro.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLitComponent::QueryProperty function method checks whether a property identifier is registered, or retrieves a list of all registered properties. Result = Obj -\u003e[ IDLitComponent ::]QueryProperty([ PropertyIdentifier ]) Returns a 1 ...",t:"IDLitComponent::QueryProperty"},"2247":{i:0.00157217346813682,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__Register.htm",a:"Syntax | Arguments | Keywords | Version History The IDLitComponent::RegisterProperty procedure method registers a property as belonging to the component. Only registered properties are displayed in the graphical property sheet interface for the object. Obj -\u003e[ IDLitComponent ::]RegisterProperty, ...",t:"IDLitComponent::RegisterProperty"},"2248":{i:0.000541610352366991,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__Restore.htm",a:"Syntax | Arguments | Keywords | Version History | See Also The IDLitComponent::Restore procedure method performs any transitional work required after an object of this class has been restored from a SAVE file, to ensure that its state is appropriate for the current version. This method is designed ...",t:"IDLitComponent::Restore"},"2249":{i:0.000783056540611619,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__SetPrope.htm",a:"Syntax | Arguments | Keywords | Version History The IDLitComponent::SetProperty procedure method sets the value of an IDLitComponent property or properties. Obj -\u003e[ IDLitComponent ::]SetProperty[, PROPERTY = value ] [, / NO_COPY ] None Any property listed under IDLitComponent Properties that ...",t:"IDLitComponent::SetProperty"},"2250":{i:0.000695094234513559,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__SetPrope1.htm",a:"Syntax | Arguments | Keywords | Version History The IDLitComponent::SetPropertyAttribute procedure method sets one or more property attributes for a registered property. Obj -\u003e[ IDLitComponent ::]SetPropertyAttribute , PropertyIdentifier PropertyIdentifier A string containing the property identifier ...",t:"IDLitComponent::SetPropertyAttribute"},"2251":{i:0.000352610574461435,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__SetPrope2.htm",a:"Syntax | Arguments | Keywords | Version History The IDLitComponent::SetPropertyByIdentifier procedure method sets the value of an IDLitComponent property. The IDLitComponent::SetPropertyByIdentifier method is similar to the IDLitComponent::SetProperty method, but is useful for cases where the ...",t:"IDLitComponent::SetPropertyByIdentifier"},"2252":{i:0.000690103707359995,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__Unregister.htm",a:"The IDLitComponent::UnregisterProperty procedure method unregisters a previously-registered property. If you unregister a property, then it will no longer appear in the Property Sheet for this object. Nevertheless, you can still use GetProperty and SetProperty to access and modify the actual ...",t:"IDLitComponent::UnregisterProperty"},"2253":{i:0.000444688023321054,u:"../Content/Object Classes/Miscellaneous/IDLitComponent__UpdateCo.htm",a:"Syntax | Arguments | Keywords | Version History | See Also The IDLitComponent::UpdateComponentVersion procedure method updates the value of the COMPONENT_VERSION property for the specified object to match the version associated with the current release of IDL. This method is intended for use after ...",t:"IDLitComponent::UpdateComponentVersion"},"2254":{i:5.50327019655568E-05,u:"../Content/Object Classes/Miscellaneous/IDLitWindow.htm",a:"The IDLitWindow class serves as the base class for all windows within the iTools framework. Superclasses IDLgrWindow Creation See IDLitWindow::Init . Properties Objects of this class inherit properties from the IDLgrWindow superclass. See IDLgrWindow Properties for descriptions of these properties. ...",t:"IDLitWindow"},"2255":{i:9.85469703914152E-05,u:"../Content/Object Classes/Miscellaneous/IDLitWindowMethods.htm",a:"IDLitWindow::Add The IDLitWindow::Add procedure method adds the given object(s) to the window. Syntax Obj -\u003e[ IDLitWindow ::]Add, Objects [, POSITION = value ] Arguments Objects A reference (or array of references) to the object(s) to be added to the window. Any of the objects that inherit from ...",t:"IDLitWindow Methods"},"2256":{i:0.000432411706675474,u:"../Content/Object Classes/Miscellaneous/IDLjavaObject.htm",a:"The IDLjavaObject class creates an IDL object that encapsulates a Java object. IDL provides data type and other translation services, allowing IDL programs to access the Java object’s methods and properties using standard IDL syntax. Additional information on using Java objects in IDL can be found ...",t:"IDLjavaObject"},"2257":{i:0.000128543662280724,u:"../Content/Object Classes/Miscellaneous/IDLjavaObject_Properties.htm",a:"The property name of an instance of IDLjavaObject is passed to the IDL Java subsystem and is used in conjunction with the Java reflection API to access the related data member on the underlying object. The data member (property) is identified through the arguments to the IDLjavaObject::GetProperty ...",t:"IDLjavaObject Properties"},"2258":{i:0.000318568625830315,u:"../Content/Object Classes/Miscellaneous/IDLjavaObject__GetProper.htm",a:"Syntax | Arguments | Keywords | Version History The IDLjavaObject::GetProperty procedure method retrieves properties (known as data members in Java) from the Java object that underlies the IDLjavaObject. The Java object’s property names are represented as IDL keywords to the GetProperty method, and ...",t:"IDLjavaObject::GetProperty"},"2259":{i:0.00022355614405552,u:"../Content/Object Classes/Miscellaneous/IDLjavaObject__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLjavaObject::Init function method instantiates the given Java object and establishes a link between the resulting IDL object with the underlying Java object. Init methods are special lifecycle methods , and as such cannot be called ...",t:"IDLjavaObject::Init"},"2260":{i:0.000318568625830315,u:"../Content/Object Classes/Miscellaneous/IDLjavaObject__SetProper.htm",a:"Syntax | Arguments | Keywords | Version History The IDLjavaObject::SetProperty procedure method sets properties (known as data members in Java) for the Java object that underlies an instance of IDLjavaObject. The Java object’s property names are represented as IDL keywords to the SetProperty method, ...",t:"IDLjavaObject::SetProperty"},"2261":{i:0.00167779754476158,u:"../Content/Object Classes/Miscellaneous/IDLsysMonitorInfo.htm",a:"IDLsysMonito rInfo Superclasses | Creation | Properties | Methods | Examples | Version History The IDL sysMonitorInfo object contains information about the display monitor or monitors attached to your system. Use this object to obtain information about the monitor(s) when building applications that ...",t:"IDLsysMonitorInfo"},"2262":{i:0.000573133253403129,u:"../Content/Object Classes/Miscellaneous/IDLsysMonitorInfo_Proper.htm",a:"IDLsysMonitorInfo objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Get” column of the property table can be retrieved via IDLsysMonitorInfo::GetProperty . Properties with the word “Yes” in the “Init” column of the ...",t:"IDLsysMonitorInfo Properties"},"2263":{i:0.000286504587540702,u:"../Content/Object Classes/Miscellaneous/IDLsysMonitorInfo__Clean.htm",a:"Syntax | Arguments | Keywords | Version History The IDLsysMonitorInfo::Cleanup procedure method performs all cleanup on the object. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLsysMonitorInfo ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 6.3 Introduced ",t:"IDLsysMonitorInfo::Cleanup"},"2264":{i:0.000286504587540702,u:"../Content/Object Classes/Miscellaneous/IDLsysMonitorInfo__GetMo.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLsysMonitorInfo::GetMonitorNames function method retrieves, into an array, the X Window System Display name strings associated with each monitor on the system. There is one name string in the array for each monitor. The contents of ...",t:"IDLsysMonitorInfo::GetMonitorNames"},"2265":{i:0.000286504587540702,u:"../Content/Object Classes/Miscellaneous/IDLsysMonitorInfo__GetNu.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLsysMonitorInfo::GetNumberOfMonitors function method retrieves the number of monitors available on the system. The function returns zero if there are no monitors available on the system, or if the DISPLAY_NAME property does not ...",t:"IDLsysMonitorInfo::GetNumberOfMonitors"},"2266":{i:0.000286504587540702,u:"../Content/Object Classes/Miscellaneous/IDLsysMonitorInfo__GetPr.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLsysMonitorInfo::GetPrimaryMonitorIndex function method retrieves the index of the monitor that is considered the system’s primary monitor. This index can be used to index the arrays returned by other function methods in this class ...",t:"IDLsysMonitorInfo::GetPrimaryMonitorIndex"},"2267":{i:0.000365826292561425,u:"../Content/Object Classes/Miscellaneous/IDLsysMonitorInfo__GetPr1.htm",a:"Syntax | Arguments | Keywords | Version History The IDLsysMonitorInfo::GetProperty procedure method retrieves the value of a property or group of properties. Syntax Obj -\u003e[ IDLsysMonitorInfo ::]GetProperty [, PROPERTY= variable ] Arguments None Keywords Any property listed under IDLsysMonitorInfo ...",t:"IDLsysMonitorInfo::GetProperty"},"2268":{i:0.000286504587540702,u:"../Content/Object Classes/Miscellaneous/IDLsysMonitorInfo__GetRe.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLsysMonitorInfo::GetRectangles function method retrieves the monitor coordinate rectangles. Syntax Result = Obj -\u003e[ IDLsysMonitorInfo ::]GetRectangles( [, / EXCLUDE_TASKBAR ]) Return Value Returns the monitors’ coordinate ...",t:"IDLsysMonitorInfo::GetRectangles"},"2269":{i:0.000286504587540702,u:"../Content/Object Classes/Miscellaneous/IDLsysMonitorInfo__GetRe1.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLsysMonitorInfo::GetResolutions function method retrieves the monitor resolutions (pixel sizes) as a [2, n ] single-precision floating-point array in terms of centimeters per pixel. There is one row in the array for each monitor. ...",t:"IDLsysMonitorInfo::GetResolutions"},"2270":{i:0.000365826292561425,u:"../Content/Object Classes/Miscellaneous/IDLsysMonitorInfo__Init.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLsysMonitorInfo::Init function method initializes a monitor information object. Init methods are special lifecycle methods, and as such cannot be called outside the context of object creation. This means in most cases, you cannot ...",t:"IDLsysMonitorInfo::Init"},"2271":{i:0.000286504587540702,u:"../Content/Object Classes/Miscellaneous/IDLsysMonitorInfo__IsExt.htm",a:"Syntax | Return Value | Arguments | Keywords | Version History The IDLsysMonitorInfo::IsExtendedDesktop function method returns a Boolean value (0 or 1 as an IDL integer) that indicates if the display system is configured as an extended desktop across two or more monitors. An extended desktop uses a ...",t:"IDLsysMonitorInfo::IsExtendedDesktop"},"2272":{i:0.000365826292561425,u:"../Content/Object Classes/Miscellaneous/IDLsysMonitorInfo__SetPr.htm",a:"Syntax | Arguments | Keywords | Version History The IDLsysMonitorInfo::SetProperty procedure method sets the value of a property or group of properties for the object. Syntax Obj -\u003e[ IDLsysMonitorInfo ::]SetProperty[, PROPERTY= value ] Arguments None Keywords Any property listed under ...",t:"IDLsysMonitorInfo::SetProperty"},"2273":{i:0.000451853985035602,u:"../Content/Object Classes/Miscellaneous/TrackBall.htm",a:"Superclasses | Creation | Methods | Version History A TrackBall object translates widget events from a draw widget (created with the WIDGET_DRAW function) into transformations that emulate a virtual trackball (for transforming object graphics in three dimensions). This object class is implemented in ...",t:"TrackBall"},"2274":{i:0.000207185725982692,u:"../Content/Object Classes/Miscellaneous/TrackBall_Properties.htm",a:"TrackBall objects have the following properties in addition to properties inherited from any superclasses. Properties with the word “Yes” in the “Init” column of the property table can be set via TrackBall::Init . For a discussion of the property description tables shown below, see About Object ...",t:"TrackBall Properties"},"2275":{i:0.000265889243155742,u:"../Content/Object Classes/Miscellaneous/TrackBall__Init.htm",a:"Syntax | Arguments | Keywords | Version History The TrackBall:: Init function method initializes the TrackBall object. Syntax Obj = OBJ_NEW(\u0027TrackBall\u0027, Center , Radius [, PROPERTY = value ] ) or Result = Obj -\u003e[ TrackBall ::]Init( Center , Radius ) (In a lifecycle method only. ) Keywords can be ...",t:"TrackBall::Init"},"2276":{i:0.000331400363145246,u:"../Content/Object Classes/Miscellaneous/TrackBall__Reset.htm",a:"Syntax | Arguments | Keywords | Version History The TrackBall:: Reset procedure method resets the state of the TrackBall object. Syntax Obj -\u003e[ TrackBall ::]Reset, Center , Radius [, AXIS ={0 | 1 | 2}] [, / CONSTRAIN ] [, MOUSE ={1 | 2 | 4}] Arguments Center A two-element vector, [ X , Y ], ...",t:"TrackBall::Reset"},"2277":{i:0.000229305612288621,u:"../Content/Object Classes/Miscellaneous/TrackBall__Update.htm",a:"Syntax | Arguments | Keywords | Example | Version History The TrackBall:: Update function method updates the state of the TrackBall object based on the information contained in the input widget event structure. The return value is nonzero if a transformation matrix is calculated as a result of the ...",t:"TrackBall::Update"},"2278":{i:6.43882667589095E-05,u:"../Content/Object Classes/Network/objects_network.htm",a:"Network Object Classes This section describes IDL’s built-in network object class library. ",t:"Network Object Classes"},"2279":{i:5.50327019655568E-05,u:"../Content/Object Classes/Network/About_Network_Objects.htm",a:"IDL provides object classes that facilitate communication and file transfer between IDL and several different types of network-based resources. Generic Network Resources The IDLnetURL object class provides a mechanism whereby IDL programs can transfer information to and from network servers using ...",t:"About Network Objects"},"2280":{i:0.000109530478425682,u:"../Content/Object Classes/Network/IDLnetJPIP.htm",a:"Overview IDLnetJPIP provides the ability to stream JPEG2000 imagery from a remote JPIP server to an IDL client, over a network. A JPIP client sends requests to the JPIP server for JPEG2000 image data.  Typically the images served by a JPIP server are very large, which means that the client is not ...",t:"IDLnetJPIP"},"2281":{i:0.000317540543777148,u:"../Content/Object Classes/Network/IDLnetJPIP_Properties.htm",a:"IDLnetJPIP objects have the following properties. For a discussion of the property description tables shown below, see About Object Property Descriptions . BIT_DEPTH CACHE_DIRECTORY COLOR_SPACE DIMENSIONS FILENAME GML IS_ALIVE N_COMPONENTS N_LAYERS N_LEVELS N_TILES PROGRESSION ...",t:"IDLnetJPIP Properties"},"2282":{i:6.34964264225776E-05,u:"../Content/Object Classes/Network/IDLnetJPIP_Cleanup.htm",a:"The IDLnetJPIP::Cleanup method performs all cleanup on the object. You invoke Cleanup when you call OBJ_DESTROY . Cleanup methods are special lifecycle methods and as such cannot be called outside the context of object  destruction. This means that in most cases, you cannot call the Cleanup method ...",t:"IDLnetJPIP::Cleanup"},"2283":{i:6.34964264225776E-05,u:"../Content/Object Classes/Network/IDLnetJPIP_Example.htm",a:"The following example uses the IDLnetJPIP object class to access and display JPEG2000 data from a remote server. Please note that before you compile the code (below) in your IDL Workbench, you must edit two lines in the PRO code for jpip_kakadu_server_test to provide the correct information for the ...",t:"IDLnetJPIP Example"},"2284":{i:0.000292510084657255,u:"../Content/Object Classes/Network/IDLnetJPIP_GetData.htm",a:"Use this method to stream image data from a remote JPIP server, or to fetch any portion of the image.  Whether you use this method in the asynchronous or synchronous mode, it does not return until it retrieves and locally decompresses all of the requested image data  from the remote server. Prior to ...",t:"IDLnetJPIP::GetData"},"2285":{i:6.34964264225776E-05,u:"../Content/Object Classes/Network/IDLnetJPIP_GetProperty.htm",a:"The IDLnetJPIP::GetProperty method returns information describing the properties of an IDLnetJPIP object in the supplied variable-keyword pairs. This method will throw an error if there is a failure. Use a CATCH statement to trap errors. Syntax Obj -\u003e[IDLnetJPIP::] GetProperty( [, PROPERTYNAME = ...",t:"IDLnetJPIP::GetProperty"},"2286":{i:0.000110428628189737,u:"../Content/Object Classes/Network/IDLnetJPIP_GetStatistics.htm",a:"This method returns statistics about the last GetData call.  All of the returned statistics will report 0 until GetData has been called. This method will throw an error if there is a failure. Use a catch statement to trap errors. Syntax Obj -\u003e[IDLnetJPIP::]GetStatistics(  \t [, BIT_RATE = value ] [, ...",t:"IDLnetJPIP::GetStatistics"},"2287":{i:6.34964264225776E-05,u:"../Content/Object Classes/Network/IDLnetJPIP_GetUuid.htm",a:"GetUuid provides a way  to get the data field from the specified UUID (Universally Unique Identifier) box. A JPEG2000 file can contain 0 to n number of UUID boxes. Each UUID box in a JPEG2000 file is made up of a UUID field and a user data field. A UUID box allows the user to store ...",t:"IDLnetJPIP::GetUuid"},"2288":{i:6.34964264225776E-05,u:"../Content/Object Classes/Network/IDLnetJPIP_Init.htm",a:"The IDLnetJPIP::Init() method initializes an IDLnetJPIP object. This method is called when the object is constructed via OBJ_NEW . Init methods are special lifecycle methods and cannot be called outside the context of object creation. This means that in most cases, you cannot call the Init method ...",t:"IDLnetJPIP::Init"},"2289":{i:0.000191359340586863,u:"../Content/Object Classes/Network/IDLnetJPIP_Open.htm",a:"Opens an image from a remote JPIP server.  When the image is opened the JPEG2000 metadata is sent from the remote server to IDLnetJPIP.  The returned metadata is used to fill all the JPEG2000 properties on this object. Set the SERVER_NAME property  prior to calling this method. Call IDLnetJPIP::Open ...",t:"IDLnetJPIP::Open"},"2290":{i:6.34964264225776E-05,u:"../Content/Object Classes/Network/IDLnetJPIP_SetProperty.htm",a:"This procedure sets the properties on the IDLnetJPIP object. Syntax Obj -\u003e[IDLnetJPIP::] SetProperty( [, PROPERTYNAME = value]) Return Value None. Arguments None. Keywords PROPERTYNAME Any property listed under IDLnetJPIP Properties that contains the word \"Yes\" in the \"Set\" row of the properties ...",t:"IDLnetJPIP::SetProperty"},"2291":{i:0.00145350773270369,u:"../Content/Object Classes/Network/IDLnetOGCWCS.htm",a:"An IDLnetOGCWCS object lets you access a Web Coverage Service (WCS) server that supports the Open Geospatial Consortium (OGC) standards. The OGC is an international group working to develop standards for the exchange of geospatial content and services including specifications for web delivery of ...",t:"IDLnetOGCWCS"},"2292":{i:0.00101814398170297,u:"../Content/Object Classes/Network/IDLnetOGCWCS_Properties.htm",a:"IDLnetOGCWCS objects have the following properties. Properties with the word “Yes” in the “Init” column of the property table can be set via IDLnetOGCWCS::Init . For a discussion of the property description tables shown below, see About Object Property Descriptions . Objects of this class have the ...",t:"IDLnetOGCWCS Properties"},"2293":{i:0.000150071686090594,u:"../Content/Object Classes/Network/IDLnetOGCWCS__Cleanup.htm",a:"I DLnetOGCWCS::Cleanup The IDLnetOGCWCS::Cleanup method performs all cleanup on the object. All open network connections are closed when the IDLnetOGCWCS object is destroyed. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLnetOGCWCS ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 6.4 ...",t:"IDLnetOGCWCS::Cleanup"},"2294":{i:0.000387540994080433,u:"../Content/Object Classes/Network/IDLnetOGCWCS__DescribeCo.htm",a:"The IDLnetOGCWCS::DescribeCoverage function method retrieves an XML file containing one or more descriptive coverage offerings from a remote OGC WCS server, writes the file to disk, and parses the file contents before returning. The XML file is written to disk according to the ...",t:"IDLnetOGCWCS::DescribeCoverage"},"2295":{i:0.000598531307546656,u:"../Content/Object Classes/Network/IDLnetOGCWCS__GetCapabil.htm",a:"I DLnetOGCWCS::GetCapabilities The IDLnetOGCWCS::GetCapabilities function method retrieves an XML file containing coverage offering briefs from a remote OGC WCS server, writes the file to disk, and parses the file contents before returning. The XML file is written to disk according to the ...",t:"IDLnetOGCWCS::GetCapabilities"},"2296":{i:0.000332638262027702,u:"../Content/Object Classes/Network/IDLnetOGCWCS__GetCoverag.htm",a:"I DLnetOGCWCS::GetCoverage The IDLnetOGCWCS::GetCoverage function method retrieves a data file from a remote OGC WCS server, and writes the file to disk. The file location is specified by the COVERAGE_FILENAME property, and will be overwritten if this property value remains unchanged between ...",t:"IDLnetOGCWCS::GetCoverage"},"2297":{i:0.000350048087017853,u:"../Content/Object Classes/Network/IDLnetOGCWCS__GetCoverag1.htm",a:"I DLnetOGCWCS::GetCoverageOffering The IDLnetOGCWCS::GetCoverageOffering function method returns a complex structure that contains the details of a single coverage offering, one that was returned by the IDLnetOGCWCS::DescribeCoverage method request. You can return either the first coverage offering ...",t:"IDLnetOGCWCS::GetCoverageOffering"},"2298":{i:0.000489924429193793,u:"../Content/Object Classes/Network/IDLnetOGCWCS__GetCoverag2.htm",a:"I DLnetOGCWCS::GetCoverageOfferingBriefs The IDLnetOGCWCS::GetCoverageOfferingBriefs function method provides access to the coverage offering briefs that were returned and parsed by the IDLnetOGCWCS::GetCapabilities method. You can return all coverage offering briefs or a subset of the briefs, which ...",t:"IDLnetOGCWCS::GetCoverageOfferingBriefs"},"2299":{i:0.000150071686090594,u:"../Content/Object Classes/Network/IDLnetOGCWCS__GetPropert.htm",a:"IDL netOGCWCS::GetProperty The IDLnetOGCWCS::GetProperty procedure method retrieves the value of an IDLnetOGCWCS property. Syntax Obj -\u003e[ IDLnetOGCWCS ::]GetProperty [, PROPERTY= variable ] Arguments None Keywords Any property listed under IDLnetOGCWCS Properties that contains the word “Yes” in the ...",t:"IDLnetOGCWCS::GetProperty"},});