define({"2300":{i:0.000338976443813745,u:"../Content/Object Classes/Network/IDLnetOGCWCS__GetService.htm",a:"IDL netOGCWCS::GetServiceSection The IDLnetOGCWCS::GetServiceSection function method returns the values found in the Service section of the XML file returned by the IDLnetOGCWCS::GetCapabilities method. This method will throw an error if the GetServiceSection call fails. Syntax Result = Obj -\u003e[ ...",t:"IDLnetOGCWCS::GetServiceSection"},"2301":{i:0.000258251591368764,u:"../Content/Object Classes/Network/IDLnetOGCWCS__Init.htm",a:"IDL netOGCWCS::Init The IDLnetOGCWCS::Init method initializes an IDLnetOGCWCS object, which provides a way to connect to and return information from a remote Open Geospatial Consortium Web Coverage Service server. See Making OGC WCS Server Requests for instructions on how to use object methods and ...",t:"IDLnetOGCWCS::Init"},"2302":{i:0.00049996563745067,u:"../Content/Object Classes/Network/IDLnetOGCWCS__ParseUrl.htm",a:"IDL netOGCWCS::ParseUrl The IDLnetOGCWCS::ParseUrl procedure method breaks down a given, valid URL to a remote WCS server into component parts and sets the corresponding IDLnetOGCWCS properties. This method will set the following properties assuming a URL has each component: URL_HOSTNAME URL_SCHEME ...",t:"IDLnetOGCWCS::ParseUrl"},"2303":{i:0.000150071686090594,u:"../Content/Object Classes/Network/IDLnetOGCWCS__SetPropert.htm",a:"ID LnetOGCWCS::SetProperty The IDLnetOGCWCS::SetProperty procedure method sets the value of a property or group of properties for this object. Syntax Obj -\u003e[ IDLnetOGCWCS ::]SetPropery [, PROPERTY= variable ] Arguments None Keywords Any property listed under IDLnetOGCWCS Properties that contains the ...",t:"IDLnetOGCWCS::SetProperty"},"2304":{i:0.000678564340050923,u:"../Content/Object Classes/Network/IDLnetOGCWMS.htm",a:"An IDLnetOGCWMS object lets you access a Web Map Service (WMS) server that supports the Open Geospatial Consortium (OGC) standards. The OGC is an international group working to develop standards for the exchange of geospatial content and services including specifications for web delivery of data ...",t:"IDLnetOGCWMS"},"2305":{i:0.000442313018729538,u:"../Content/Object Classes/Network/IDLnetOGCWMS_Properties.htm",a:"IDLnetOGCWMS objects have the following properties. Properties with the word “Yes” in the “Init” column of the property table can be set via IDLnetOGCWMS::Init . For a discussion of the property description tables shown below, see About Object Property Descriptions . Objects of this class have the ...",t:"IDLnetOGCWMS Properties"},"2306":{i:9.94006361332235E-05,u:"../Content/Object Classes/Network/IDLnetOGCWMS__Cleanup.htm",a:"I DLnetOGCWMS::Cleanup The IDLnetOGCWMS::Cleanup method performs all cleanup on the object. All open network connections are closed when the IDLnetOGCWMS object is destroyed. Syntax Obj -\u003e Cleanup or Obj -\u003e[ IDLnetOGCWMS ::]Cleanup or OBJ_DESTROY, Obj Arguments None Keywords None Version History 6.4 ...",t:"IDLnetOGCWMS::Cleanup"},"2307":{i:0.000282339505492437,u:"../Content/Object Classes/Network/IDLnetOGCWMS__GetCapabil.htm",a:"I DLnetOGCWMS::GetCapabilities The IDLnetOGCWMS::GetCapabilities function method retrieves an XML file containing layers describing geographic information from a remote OGC WMS server, writes the file to disk, and parses the file contents before returning. The XML file is written to the location ...",t:"IDLnetOGCWMS::GetCapabilities"},"2308":{i:0.000160780794061499,u:"../Content/Object Classes/Network/IDLnetOGCWMS__GetFeature.htm",a:"I DLnetOGCWMS::GetFeatureInfo The IDLnetOGCWMS::GetFeatureInfo function method retrieves a feature information file from a remote OGC WMS server and writes the file to disk. This file contains information about a specific feature. The value of the QUERYABLE tag in the structure returned by ...",t:"IDLnetOGCWMS::GetFeatureInfo"},"2309":{i:0.000339721849319659,u:"../Content/Object Classes/Network/IDLnetOGCWMS__GetLayers.htm",a:"The IDLnetOGCWMS::GetLayers function method provides access to the layer details that were returned and parsed by the IDLnetOGCWMS::GetCapabilities method. You can return information for all layers or a subset of the layers, which can be useful when: A large number of layers would require ...",t:"IDLnetOGCWMS::GetLayers"},"2310":{i:0.000212112685087869,u:"../Content/Object Classes/Network/IDLnetOGCWMS__GetMap.htm",a:"I DLnetOGCWMS::GetMap The IDLnetOGCWMS::GetMap function method retrieves a map file from a remote OGC WMS server, and writes the file to disk. The file location is specified by the MAP_FILENAME property, and will be overwritten if this property value remains unchanged between GetMap requests. The ...",t:"IDLnetOGCWMS::GetMap"},"2311":{i:9.94006361332235E-05,u:"../Content/Object Classes/Network/IDLnetOGCWMS__GetPropert.htm",a:"IDL netOGCWMS::GetProperty The IDLnetOGCWMS::GetProperty procedure method retrieves the value of an IDLnetOGCWMS property. Syntax Obj -\u003e[ IDLnetOGCWMS ::]GetProperty [, PROPERTY= variable ] Arguments None Keywords Any property listed under IDLnetOGCWMS Properties that contains the word “Yes” in the ...",t:"IDLnetOGCWMS::GetProperty"},"2312":{i:0.000195591023064915,u:"../Content/Object Classes/Network/IDLnetOGCWMS__GetService.htm",a:"IDL netOGCWMS::GetServiceSection The IDLnetOGCWMS::GetServiceSection function method returns the values found in the Service section of the XML file returned by the IDLnetOGCWMS::GetCapabilities method. Syntax Result = Obj -\u003e[ IDLnetOGCWMS ::]GetServiceSection( ) Return Value Returns a single ...",t:"IDLnetOGCWMS::GetServiceSection"},"2313":{i:0.000130731325805647,u:"../Content/Object Classes/Network/IDLnetOGCWMS__Init.htm",a:"IDL netOGCWMS::Init The IDLnetOGCWMS::Init method initializes an IDLnetOGCWMS object, which provides a way to connect to and return information from a remote Open Geospatial Consortium Web Map Service server. See Making OGC WMS Server Requests for instructions on how to use object methods and ...",t:"IDLnetOGCWMS::Init"},"2314":{i:0.000212112685087869,u:"../Content/Object Classes/Network/IDLnetOGCWMS__ParseUrl.htm",a:"IDL netOGCWMS::ParseUrl The IDLnetOGCWMS::ParseUrl procedure method breaks down a given, valid URL to a remote WMS server into component parts and sets the corresponding IDLnetOGCWMS properties. This method will set the following properties assuming a URL has each component: URL_HOSTNAME URL_SCHEME ...",t:"IDLnetOGCWMS::ParseUrl"},"2315":{i:9.94006361332235E-05,u:"../Content/Object Classes/Network/IDLnetOGCWMS__SetPropert.htm",a:"ID LnetOGCWMS::SetProperty The IDLnetOGCWMS::SetProperty procedure method sets the value of a property or group of properties for this object. Syntax Obj -\u003e[ IDLnetOGCWMS ::]SetPropery [, PROPERTY= variable ] Arguments None Keywords Any property listed under IDLnetOGCWMS Properties that contains the ...",t:"IDLnetOGCWMS::SetProperty"},"2316":{i:0.00139676820779954,u:"../Content/Object Classes/Network/IDLnetURL.htm",a:"An IDLnetURL object allows IDL to act as a client to an HTTP or FTP server. The object handles: Opening a connection to a remote HTTP or FTP server. Creating and sending HTTP requests to the remote HTTP or FTP server. Receiving responses from the remote HTTP or FTP server. Receiving and writing ...",t:"IDLnetURL"},"2317":{i:0.000825993766168932,u:"../Content/Object Classes/Network/IDLnetURL_Properties.htm",a:"IDLnetURL objects have the following properties. Properties with the word “Yes” in the “Init” column of the property table can be set with IDLnetURL::Init . For a discussion of the property description tables shown below, see About Object Property Descriptions . Objects of this class have the ...",t:"IDLnetURL Properties"},"2318":{i:0.000139837838841433,u:"../Content/Object Classes/Network/IDLnetURL__Cleanup.htm",a:"I DLnetURL::Cleanup The IDLnetURL::Cleanup procedure method performs all cleanup operations on the object, and closes all open connections when the object is destroyed. Syntax  Obj -\u003e Cleanup or Obj -\u003e[ IDLnetURL ::]Cleanup or OBJ_DESTROY, Obj Return Value None. Arguments None. Keywords None. ...",t:"IDLnetURL::Cleanup"},"2319":{i:0.000139837838841433,u:"../Content/Object Classes/Network/IDLnetURL__CloseConnecti.htm",a:"I DLnetURL::CloseConnections The IDLnetURL::CloseConnections function method closes all the existing connections to remote HTTP and FTP servers. Closing a connection using this method is useful when it is necessary to change a login, enable or disable SSL, or start a new set of transactions on the ...",t:"IDLnetURL::CloseConnections"},"2320":{i:0.000213195514527503,u:"../Content/Object Classes/Network/IDLnetURL__Delete.htm",a:"The IDLnetURL::Delete method deletes a file on an HTTP server. If the URL keyword is not set, the URL_PATH property must be set to the destination (filename) on the remote HTTP server. Errors This method generates an error if the delete fails. The method sets the RESPONSE_CODE and RESPONSE_HEADER ...",t:"IDLnetURL::Delete"},"2321":{i:0.000243198881303556,u:"../Content/Object Classes/Network/IDLnetURL__FtpCommand.htm",a:"I DLnetURL::FtpCommand The IDLnetURL::FtpCommand function method can be used to execute FTP commands, delete files, make directories, delete directories, and change directories on the remote FTP server. This method throws an error if the call fails. Use a catch statement to trap errors and print the ...",t:"IDLnetURL::FtpCommand"},"2322":{i:0.000446609135924366,u:"../Content/Object Classes/Network/IDLnetURL__Get.htm",a:"I DLnetURL::Get The IDLnetURL::Get function method retrieves a resource from a remote HTTP or FTP server and writes it to disk, a memory buffer, or an array of strings. The returned data is written to disk in the location specified by the FILENAME keyword. If the file name is the same between method ...",t:"IDLnetURL::Get"},"2323":{i:0.000195123598617535,u:"../Content/Object Classes/Network/IDLnetURL__GetFtpDirList.htm",a:"I DLnetURL::GetFtpDirList The IDLnetURL::GetFtpDirList function method retrieves a list of files (returned as an array of strings) available from a remote FTP server on a particular path. The path must resolve to a directory and end with a slash. If the directory is empty, a single empty string is ...",t:"IDLnetURL::GetFtpDirList"},"2324":{i:0.000139837838841433,u:"../Content/Object Classes/Network/IDLnetURL__GetProperty.htm",a:"I DLnetURL::GetProperty The IDLnetURL::GetProperty procedure method retrieves the value of a property for the IDLnetURL object. Syntax Obj -\u003e[ IDLnetURL ::]GetProperty [, PROPERTY = value ] Return Value None. Arguments None. Keywords Any property listed under IDLnetURL Properties that contains the ...",t:"IDLnetURL::GetProperty"},"2325":{i:0.000323828354048598,u:"../Content/Object Classes/Network/IDLnetURL__Init.htm",a:"I DLnetURL::Init The IDLnetURL::Init function method initializes an IDLnetURL object. Init methods are special lifecycle methods , and as such cannot be called outside the context of object creation. This means that in most cases, you cannot call the Init method directly. There is one exception to ...",t:"IDLnetURL::Init"},"2326":{i:0.000212147074250166,u:"../Content/Object Classes/Network/IDLnetURL__Put.htm",a:"I DLnetURL::Put The IDLnetURL::Put method sends a file or a buffer of data to a remote HTTP or FTP server. This method returns when one of the following events occurs: The method completes successfully. The method encounters an HTTP or FTP error. The return status of the callback function indicates ...",t:"IDLnetURL::Put"},"2327":{i:0.000139837838841433,u:"../Content/Object Classes/Network/IDLnetURL__SetProperty.htm",a:"I DLnetURL::SetProperty The IDLnetURL::SetProperty procedure method sets the value of the property for the object. Syntax Obj -\u003e[ IDLnetURL ::]SetProperty [, PROPERTY = value ] Return Value None. Arguments None. Keywords Any property listed under IDLnetURL Properties that contains the word “Yes” in ...",t:"IDLnetURL::SetProperty"},"2328":{i:5.50327019655568E-05,u:"../Content/Reference Material/Obsolete Routines.htm",a:"The following items are now obsolete in IDL:  DDE Routines DELETE_SYMBOL DELLOG DEMO_MODE DO_APPLE_SCRIPT ERRORF FINDFILE GETHELP GET_SYMBOL HANDLE_CREATE HANDLE_FREE HANDLE_INFO HANDLE_MOVE HANDLE_VALUE HDF_DFSD_ADDDATA HDF_DFSD_DIMGET HDF_DFSD_DIMSET HDF_DFSD_ENDSLICE HDF_DFSD_GETDATA ...",t:"Obsolete Routines and Classes"},"2329":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/funclisting.htm",a:"List of IDL Routines by Topic The following is a list of all routines included in IDL, categorized by functionality: ",t:"List of IDL Routines by Topic"},"2330":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/3D_Visualization.htm",a:"3D Transformations & Scene Setup CONVERT_COORD - Transforms coordinates to and from the Direct Graphics coordinate system. COORD2TO3 - Returns 3D data coordinates given Direct Graphics normalized screen coordinates. CROSSP - Compute the cross product of two vectors. CV_COORD - Converts 2D and 3D ...",t:"3D Visualization"},"2331":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/animation_func_list.htm",a:"CW_ANIMATE - Creates a compound widget for animation. (Direct Graphics) CW_ANIMATE_GETP - Gets pixmap window IDs used by CW_ANIMATE. (Direct Graphics) CW_ANIMATE_LOAD - Loads images into CW_ANIMATE. (Direct Graphics) CW_ANIMATE_RUN - Displays images loaded into CW_ANIMATE. (Direct Graphics) ...",t:"Animation"},"2332":{i:6.08564720503734E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Array_Creation.htm",a:"BINDGEN - Returns a byte array with each element set to its subscript. BOOLARR - Creates a boolean vector or array. BYTARR - Creates a byte vector or array. CINDGEN - Returns a complex array with each element set to its subscript. COMPLEXARR - Creates a complex, single-precision, floating-point ...",t:"Array Creation"},"2333":{i:0.000128348285502455,u:"../Content/Reference Material/Functional List of IDL Routines/Array_Manipulation.htm",a:"ARRAY_EQUAL - Test for data equality for two arrays or an array and a scalar. ARRAY_INDICES - Converts one-dimensional array subscripts into multi-dimensional subscripts. BLAS_AXPY - Updates an existing array by adding a multiple of another array. INVERT - Computes the inverse of a square array. MAX ...",t:"Array Manipulation"},"2334":{i:7.54454325183108E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Color_Table_Manipulation.htm",a:"!COLOR - Contains standard RGB color triplets. CMYK_CONVERT - Converts color triples to and from RGB, HLS, and HSV. COLOR_QUAN - Converts true-color (24-bit) image to pseudo-color (8-bit) image. COLORMAP_APPLICABLE - Determines whether the current visual class supports the use of a colormap. (Direct ...",t:"Color Table Manipulation"},"2335":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Date_and_Time.htm",a:"BIN_DATE - Converts ASCII date/time string to binary string. CALDAT - Converts Julian date to month, day, year. CALL_EXTERNAL - Displays a calendar for a given month or year. JULDAY - Returns Julian Day Number for given month, day, and year. SYSTIME - Returns the current system time as either a  ...",t:"Date and Time"},"2336":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Debugging.htm",a:".CONTINUE - Continues execution of a stopped program. .SKIP - Skip over the next statement or statements. .STEP - Executes one or more statements. .STEPOVER - Executes one or more statements but do not step into routines. .TRACE - Continue execution, display each line of code as it is executed. ...",t:"Debugging"},"2337":{i:6.43882667589095E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Dialog_Routines.htm",a:"DIALOG_COLORPICKER - Creates a dialog from which to select colors. DIALOG_MESSAGE - Creates a modal message dialog. DIALOG_PICKFILE - Creates a native file-selection dialog. DIALOG_PRINTERSETUP - Opens a native printer property dialog. DIALOG_PRINTJOB - Opens a native printer dialog. ...",t:"Dialog Routines"},"2338":{i:6.43882667589095E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Direct_Graphics.htm",a:"ANNOTATE Procedure - Starts IDL widget used to interactively annotate images and plots with text and drawings. ARROW Procedure - Draws line with an arrow head. AXIS Procedure - Draws an axis of the specified type and scale at a given position. BAR_PLOT Procedure - Creates a bar graph. BOX_CURSOR ...",t:"Direct Graphics\n"},"2339":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Error_Handling.htm",a:"Error Handling Routines CATCH - Intercept and process error messages. MESSAGE - Issue error and informational messages. ON_ERROR - Designates the error recovery method. ON_IOERROR - Declares I/O error exception handler. STRMESSAGE - Returns the text of a given error number. ",t:"Error Handling Routines"},"2340":{i:0.000115143855453756,u:"../Content/Reference Material/Functional List of IDL Routines/ESE_Functions.htm",a:"ESE - Provides a set of static methods that are valuable for introspection, finding tasks, controlling jobs and other functionality. ESECatalog - Represents an ESE server\u0027s catalog and allows the user to examine its contents. ESEFolder - Represents an ESE folder. ESEJob - Represents the ESE job that ...",t:"ESE Classes"},"2341":{i:6.63044685156903E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Executive_Commands.htm",a:".COMPILE - Compile a program. .CONTINUE - Continues execution of a stopped program. .EDIT - Opens a file in the IDL Workbench editor. .FULL_RESET_SESSION - Reset the session and unload sharable libraries. .GO - Execute a previously-compiled $MAIN$ program. .OUT - Continues execution until the ...",t:"Executive Commands"},"2342":{i:0.00010181052593232,u:"../Content/Reference Material/Functional List of IDL Routines/External_Linking.htm",a:"CALL_EXTERNAL - Call a function in an external sharable object. DLM_LOAD - Load a dynamically-loadable module. IDLcomIDispatch - Create an IDL object that encapsulates a COM object. IDLEXBR_ASSISTANT - Launch the Export Bridge Assistant. IDLjavaObject - An IDL object encapsulating a Java object. ...",t:"External Linking"},"2343":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Font_Manipulation.htm",a:"EFONT - Interactive vector font editor and display tool. IDLgrFont - represents a typeface, style, weight, and point size that may be associated with text objects. PS_SHOW_FONTS - Displays all the available PostScript fonts. PSAFM - Converts Adobe Font Metrics file to IDL format. SHOWFONT - Displays ...",t:"Font Manipulation"},"2344":{i:0.000884095234229185,u:"../Content/Reference Material/Functional List of IDL Routines/Graphics.htm",a:"Below are the newer IDL Graphics functions introduced in IDL 8.0: ARROW - Draws an arrow as an annotation to an existing graphic. AXIS - Adds an axis to an existing graphic. BARPLOT - Plots data as a series of rectangular bars. BOXPLOT - Plots data as a series of box and whiskers plots. BUBBLEPLOT - ...",t:"Graphics"},"2345":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Help_Routines.htm",a:"? - Invoke the IDL Online Help. DOC_LIBRARY - Extract documentation headers from programs. HELP - Provide information about the current session or variables. MEMORY - Return information about current memory usage. MK_HTML_HELP - Convert text documentation headers to HTML files. ONLINE_HELP - Invoke ...",t:"Help Routines"},"2346":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/image_processing_list.htm",a:"Contrast Enhancement and Filtering ADAPT_HIST_EQUAL - Perform adaptive histogram equalization BANDPASS_FILTER - Apply a bandpass filter to a one-channel image. BANDREJECT_FILTER - Apply a band reject filter on a one-channel image. BUTTERWORTH - Return the absolute value of the low-pass Butterworth ...",t:"Image Processing Routines"},"2347":{i:0.000974036589641707,u:"../Content/Reference Material/Functional List of IDL Routines/Input_Output.htm",a:"General File Access APP_USER_DIR - Provide access to the application user directory. APP_USER_DIR_QUERY - Locate existing application user directories. DIALOG_PICKFILE - Create a native file-selection dialog. FILE_BASENAME - Return the final segment of a file path. FILE_CHMOD - Change file or ...",t:"Input/Output"},"2348":{i:7.84216139489386E-05,u:"../Content/Reference Material/Functional List of IDL Routines/iTools.htm",a:"iTool Creation Routines ICONTOUR - Create an iTool containing contour data. IIMAGE - Create an iTool containing image data. IMAP - Display georeferenced data in an iTool. IPLOT - Create an iTool containing plot data. ISURFACE - Create an iTool containing surface data. IVECTOR - Create an iTool ...",t:"iTools"},"2349":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Language_Catalogs.htm",a:"Language Catalogs IDLffLangCat - Find and load an XML language catalog. LOCALE_GET - Return the current locale of the operating platform. ",t:"Language Catalogs"},"2350":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/mapping_funct_list.htm",a:"IDLffShape - Contains geometry, connectivity and attributes for graphics primitives accessed from ESRI Shapefiles. LL_ARC_DISTANCE - Return the longitude and latitude of a point given arc distance and azimuth. MAP - Display map data in a graphics window. MAP_2POINTS - Return distance, azimuth, and ...",t:"Mapping"},"2351":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/mathematics_funt_list.htm",a:"Complex Numbers COMPLEX - Convert to complex type. CONJ - Compute the complex conjugate. DCOMPLEX - Convert to double-precision complex type. IMAGINARY - Compute the imaginary part of a complex value. REAL_PART - Compute the real part of a complex value. Correlation Analysis A_CORRELATE - Compute ...",t:"Mathematics"},"2352":{i:6.27848583861126E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Object_Class_Library.htm",a:"Analysis Objects IDLanROI - An object referencing a region of interest. IDLanROIGroup - Analytical representation of a group of regions of interest. File Format Objects IDLffDICOM - Contains the data for one or more images embedded in a DICOM Part 10 file. IDLffDicomEx - Allows you to read and write ...",t:"Object Class Library"},"2353":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Operating_System_Access.htm",a:"APP_USER_DIR - Provide access to the application user directory. APP_USER_DIR_QUERY - Locate existing application user directories. CALL_EXTERNAL - Call a function in an external sharable object and returns a scalar value. CD - Set and/or change the current working directory. FILE_BASENAME - Return ...",t:"Operating System Access"},"2354":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Programming_and_IDL_Cont.htm",a:"!NULL - A variable of type Undefined. APP_USER_DIR - Provides access to the application user directory. APP_USER_DIR_QUERY - Locates existing application user directories. ARG_PRESENT - Returns TRUE if the value of the specified variable can be passed back to the caller. BREAKPOINT - Sets and clears ...",t:"Programming and IDL Control"},"2355":{i:6.15518474307913E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Query_Routines.htm",a:"ISA - Determine whether a variable is of a certain type, class, or structure name. GET_LOGIN_INFO - Return the name of the computer  as well as the user’s login name. QUERY_ASCII - Obtain information about an ASCII file. QUERY_BMP - Obtain information about a BMP image file. QUERY_CSV - Obtain ...",t:"Query Routines"},"2356":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Saving_Restoring_a_Sessi.htm",a:"HEAP_NOSAVE - Clear the save attribute of pointer or object heap variables. HEAP_SAVE - Query whether a pointer or object heap variable is savable. IDL_Savefile - Object that provides complete query and restore capabilities for IDL SAVE files. IRESOLVE - Resolve all code required for the iTools ...",t:"Saving/Restoring a Session"},"2357":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Scope_Functions.htm",a:"Scope Functions SCOPE_LEVEL - Return the current routine’s scope level. SCOPE_TRACEBACK - Return the current interpreter call stack. SCOPE_VARFETCH - Return variables outside the local scope. SCOPE_VARNAME - Return variable names outside the local scope. ",t:"Scope Functions"},"2358":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/signalprocessing_func_li.htm",a:"A_CORRELATE - Compute the autocorrelation. BLK_CON - Convolve an input signal with impulse-response sequence. BUTTERWORTH - Return the absolute value of the low-pass Butterworth kernel. CANNY - Implement the Canny edge-detection algorithm. C_CORRELATE - Compute the cross correlation. CONVOL - ...",t:"Signal Processing"},"2359":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Statements.htm",a:"Compound Statements BEGIN...END - Defines a block of statements. Conditional Statements IF...THEN...ELSE - Conditionally executes a statement or block of statements. CASE - Selects one statement for execution, depending on the value of an expression. SWITCH - Selects one statement for execution, ...",t:"Statements"},"2360":{i:0.000365692560178584,u:"../Content/Reference Material/Functional List of IDL Routines/Static_Methods.htm",a:"This document contains the list of static methods and attributes. Also see: Using Static Methods and Attributes Creating Static Methods Variable Attributes DIM - An array giving the dimensions (0 for scalar variables). LENGTH - The number of elements in the variable. NDIM - An integer giving the ...",t:"List of Static Methods and Attributes"},"2361":{i:0.000579206767591849,u:"../Content/Reference Material/Functional List of IDL Routines/String_Processing.htm",a:"FILE_BASENAME - Return the basename of a file path. FILE_DIRNAME - Return the dirname of a file path. I18N_MULTIBYTETOUTF8 - Convert multibyte to UTF8. I18N_MULTIBYTETOWIDECHAR - Convert   multibyte to UTF-16, wide-character (Unicode). I18N_UTF8TOMULTIBYTE - Convert UTF-8  to multibyte . ...",t:"String Processing Routines"},"2362":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/structures_func_list.htm",a:"IDL_VALIDNAME - Determine whether a string may be used as a valid variable name or structure tag name. N_TAGS - Return the number of tags in a structure. REPLICATE - Create an array of given dimensions, filled with specified value. STRUCT_ASSIGN - Copy structures using relaxed structure assignment. ...",t:"Structures"},"2363":{i:7.54260316950568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Type_Conversion.htm",a:"BYTE - Convert to byte type. COMPLEX - Convert to complex type. DCOMPLEX - Convert to double-precision complex type. DOUBLE - Convert to double-precision type. FIX - Convert to integer type, or type specified by TYPE keyword. FLOAT - Convert to single-precision floating-point. LONG - Convert to ...",t:"Type Conversion"},"2364":{i:6.43882667589095E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Widget_Routines.htm",a:"WIDGET_BASE - Create a base widget container for other widgets. WIDGET_BUTTON - Create a button widget. WIDGET_COMBOBOX - Create an editable droplist widget. WIDGET_CONTROL - Realize, manage, and destroy widgets. WIDGET_DISPLAYCONTEXTMENU - Display a context-sensitive menu. WIDGET_DRAW - Create a ...",t:"Widget Routines"},"2365":{i:6.43882667589095E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Widget_Routines__Compoun.htm",a:"CW_TMPL - Template for compound widgets that use XMANAGER. CW_ANIMATE - Create a compound widget for animation. (Direct Graphics) CW_ANIMATE_GETP - Get pixmap window IDs used by CW_ANIMATE. (Direct Graphics) CW_ANIMATE_LOAD - Load images into CW_ANIMATE. (Direct Graphics) CW_ANIMATE_RUN - Display ...",t:"Widget Routines, Compound"},"2366":{i:5.50327019655568E-05,u:"../Content/Reference Material/Functional List of IDL Routines/Window_Routines.htm",a:"GETWINDOWS - Retrieve the current graphics window. IDLgrWindow - An on-screen area on a display device. WDELETE Procedure - Delete Direct Graphics windows. WIDGET_WINDOW - Create a graphics widget. WINDOW - Create an empty graphics window. WINDOW Procedure - Create a Direct Graphics window. WSET - ...",t:"Window Routines"},"2367":{i:6.81181210472753E-05,u:"../Content/ESE Routine/ESEAPIOverview.htm",a:"The ESE API enables IDL programs to perform remote processing using the ENVI Services Engine. To use the API, you need IDL and an ESE server that is running locally or remotely. The benefits of remote processing are: It allows processing to be performed where the data is located. Instead of bringing ...",t:"Programming with the ESE API"},"2368":{i:0.000765469088889716,u:"../Content/ESE Routine/ESE.htm",a:"The ESE class provides a set of static methods that are valuable for introspection, finding tasks, controlling jobs and other functionality. Methods ESE::FindTask ESE::GetDeserializer ESE::GetSerializer ESE::GetServer ESE::GetTask ESE::Join ESE::SetDeserializer ESE::SetSerializer Examples Example 1 ...",t:"ESE"},});