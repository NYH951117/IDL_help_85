<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../" data-mc-conditions="" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Language|Objects|Creating an Object Graphics Display">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Display Objects</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../IDL Programming.htm">Language</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../Object Classes/ref_part2.htm">Objects</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">Creating an Object Graphics Display</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Display Objects</span>
        </div>
        <h1><a name="obj_graphics_348174843_1015928"></a><a name="obj_graphics_348174843_70499"></a>Display Objects</h1>
        <p><a name="kanchor4898"></a>Minimally, you must have a view object in an Object Graphics display. However, it is likely that you will use a combination of the following display objects in any display. The <a href="Object_Graphics_Display.htm#obj_graphics_348174843_1015794">Object Graphics Display Hierarchy</a> shows the relationship between these objects as a tree structure.</p>
        <p>The advantage of organizing graphic objects into a tree structure is that by manipulating any of the branches of the tree, all of the sub-branches of that branch can be altered simultaneously. In this figure, changes to the spatial transformation associated with the model containing two graphics atoms will affect both of the visualization objects. Similarly, calling a window or printer object’s Draw method on the scene object will render all of the objects in the tree to that window or printer. </p>
        <table style="mc-table-style: url('../Resources/TableStyles/Description.css');" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Object</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Description</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p><a href="../Object Classes/Graphics/IDLgrScene.htm#objects_gr_2157407275_1092773">IDLgrScene</a>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>A <a name="kanchor4899"></a>scene, or instance of the <a href="../Object Classes/Graphics/IDLgrScene.htm#objects_gr_2157407275_1092773">IDLgrScene</a> class, is the root-level object of most graphics trees. Instances of the IDLgrScene class have Add and Remove methods, which allow you to include or remove IDLgrView or IDLgrViewgroup objects in a scene. A scene object is one of the possible arguments for a destination object’s Draw method.</p>
                        <p>It is not necessary to create a scene object if your graphics tree contains only one view object; in that case, the view can serve as the root of the tree.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p><a href="../Object Classes/Graphics/IDLgrViewgroup.htm#objects_gr_2157407275_1017081">IDLgrViewgroup</a>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>A <a name="kanchor4900"></a>viewgroup, or instance of the <a href="../Object Classes/Graphics/IDLgrViewgroup.htm#objects_gr_2157407275_1017081">IDLgrViewgroup</a> class, is a simple container object, similar to the Scene object. The Viewgroup differs from the Scene in two ways:</p>
                        <p class="CellNumbered">It will not cause an erase to occur on a destination when the destination object’s Draw method is called.</p>
                        <p class="CellNumbered">It can contain objects which do not have Draw methods.</p>
                        <p>Viewgroups are designed to be placed within a scene, and therefor do not typically serve as the root-level object of a graphics tree. However, a viewgroup object can be an argument for a destination object’s Draw method. Instances of the IDLgrViewgroup class have Add and Remove methods, which allow you to include or remove objects in a viewgroup.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p><a href="../Object Classes/Graphics/IDLgrView.htm#objects_gr_2157407275_1016728">IDLgrView</a>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>A <a name="kanchor4901"></a>view, or instance of the <a href="../Object Classes/Graphics/IDLgrView.htm#objects_gr_2157407275_1016728">IDLgrView</a> class, can serve as the root-level object of a graphics tree. Instances of the IDLgrView class have Add and Remove methods, which allow you to include or remove IDLgrModel objects in a view. A view object is one of the possible arguments for a destination object’s Draw method.</p>
                        <p>Every graphics tree must contain at least one view object. Often, it is convenient to divide the objects being rendered into separate views, which are then contained by a viewgroup or scene object.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p><a href="../Object Classes/Graphics/IDLgrModel.htm#objects_gr_2157407275_1011092">IDLgrModel</a>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColEnd">
                        <p>A <a name="kanchor4902"></a>model, or instance of the <a href="../Object Classes/Graphics/IDLgrModel.htm#objects_gr_2157407275_1011092">IDLgrModel</a> class, serves as containers for individual graphic objects (plot lines, axes, text, and so on) and for other model objects. Model objects include a three-dimensional transformation matrix that describes how the model and all of its components are positioned in space.</p>
                        <p>Altering the model’s transformation matrix changes the position and orientation of any objects the model contains. If a model object contains another model object, the contained model is positioned according to both its own transformation matrix and that of its container.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>See <a href="Creating_an_Object_Graph.htm#obj_graphics_348174843_996870">Creating an Object Graphics Display </a>for an example that introduces the use of these objects. <a href="Rendering_Objects.htm#obj_graphics_348174843_1018070">Rendering Objects</a> provides additional information. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>When creating an iTool display, there is no need to manually configure a window object or destination objects. This is automatically done for you.</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>