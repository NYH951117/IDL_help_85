<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../" data-mc-conditions="" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Language|Objects|Creating Object Classes">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Object Example</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">  <![CDATA[ ]]></span><a class="MCBreadcrumbsLink" href="../IDL Programming.htm">Language</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../Object Classes/ref_part2.htm">Objects</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="Creating Custom Objects.htm">Creating Object Classes</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Object Example</span>
        </div>
        <h1><a name="objects_3041994433_1023611"></a><a name="objects_3041994433_76725"></a>Object Example</h1>
        <p>The following example creates an IDL&#160;object class with both instance and static methods. </p>
        <p>The ObjCircle class inherits from the <a href="../Object Classes/Miscellaneous/IDL_Object.htm">IDL_Object</a> superclass. To run the example, save the following code into a file called "<code>objcircle__define.pro</code>" somewhere on IDL's path.</p>
        <p class="Code">FUNCTION ObjCircle::Init, _EXTRA=ex</p>
        <p class="Code_Indented">COMPILE_OPT IDL2</p>
        <p class="Code_Indented">; Call our superclass Initialization method.</p>
        <p class="Code_Indented">void = self-&gt;IDL_Object::Init()</p>
        <p class="Code_Indented">IF (ISA(ex)) THEN self-&gt;SetProperty, _EXTRA=ex</p>
        <p class="Code_Indented">RETURN, 1</p>
        <p class="Code">END</p>
        <p class="Code">&#160;</p>
        <p class="Code">PRO ObjCircle::Cleanup</p>
        <p class="Code_Indented">COMPILE_OPT IDL2</p>
        <p class="Code_Indented">; Call our superclass Cleanup method</p>
        <p class="Code_Indented">self-&gt;IDL_Object::Cleanup</p>
        <p class="Code">END</p>
        <p class="Code">&#160;</p>
        <p class="Code">FUNCTION ObjCircle::Area</p>
        <p class="Code_Indented">COMPILE_OPT IDL2</p>
        <p class="Code_Indented">RETURN, !const.pi*self.radius^2</p>
        <p class="Code">END</p>
        <p class="Code">&#160;</p>
        <p class="Code">FUNCTION ObjCircle::GetCircles</p>
        <p class="Code_Indented">; Static method.</p>
        <p class="Code_Indented">; Note: Cannot use "self" within a static method</p>
        <p class="Code_Indented">COMPILE_OPT IDL2, static</p>
        <p class="Code_Indented">obj = OBJ_VALID(COUNT=c)</p>
        <p class="Code_Indented">RETURN, obj[WHERE(OBJ_ISA(obj, 'ObjCircle'), /NULL)]</p>
        <p class="Code">END</p>
        <p class="Code">&#160;</p>
        <p class="Code">pro ObjCircle::Plot, _EXTRA=ex</p>
        <p class="Code_Indented">compile_opt idl2</p>
        <p class="Code_Indented">w = WINDOW()</p>
        <p class="Code_Indented">p = ELLIPSE(self.center[0], self.center[1], $</p>
        <p class="Code_Indented">MAJOR=self.radius, _EXTRA=ex)</p>
        <p class="Code">end</p>
        <p class="Code">&#160;</p>
        <p class="Code">PRO ObjCircle::GetProperty, $</p>
        <p class="Code_Indented">CENTER=center, PI=pi, RADIUS=radius</p>
        <p class="Code_Indented">; This method can be called either as a static or instance.</p>
        <p class="Code_Indented">COMPILE_OPT IDL2, static</p>
        <p class="Code_Indented">; If "self" is defined, then this is an "instance".</p>
        <p class="Code_Indented">IF (ISA(self)) THEN&#160;BEGIN</p>
        <p class="Code_Indented">; User asked for an "instance" property.</p>
        <p class="Code_Indented">IF (ARG_PRESENT(center)) THEN center = self.center</p>
        <p class="Code_Indented">IF (ARG_PRESENT(radius)) THEN radius = self.radius</p>
        <p class="Code_Indented">endif else begin</p>
        <p class="Code_Indented">; User asked for a "static" property.</p>
        <p class="Code_Indented">IF (ARG_PRESENT(pi)) THEN pi = !const.pi</p>
        <p class="Code_Indented">ENDELSE</p>
        <p class="Code">END</p>
        <p class="Code">&#160;</p>
        <p class="Code">PRO ObjCircle::SetProperty, CENTER=center, RADIUS=radius</p>
        <p class="Code_Indented">COMPILE_OPT IDL2</p>
        <p class="Code_Indented">; If user passed in a property, then set it.</p>
        <p class="Code_Indented">IF (ISA(center)) THEN self.center = center</p>
        <p class="Code_Indented">IF (ISA(radius)) THEN self.radius = radius</p>
        <p class="Code">END</p>
        <p class="Code">&#160;</p>
        <p class="Code">PRO ObjCircle__define</p>
        <p class="Code_Indented">COMPILE_OPT IDL2</p>
        <p class="Code_Indented">void = {ObjCircle, $</p>
        <p class="Code_Indented">inherits IDL_Object, $ ; superclass</p>
        <p class="Code_Indented">center: [0d, 0d], $ ; two-element array</p>
        <p class="Code_Indented">radius: 0d}  ; scalar value</p>
        <p class="Code">END</p>
        <p>After the above code is saved, you can then execute the following lines of code to try out your new ObjCircle class:</p>
        <p class="Code">COMPILE_OPT IDL2</p>
        <p class="Code">; Create an object instance.</p>
        <p class="Code">a = ObjCircle()</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Set properties</p>
        <p class="Code">a.center = [50, 60]</p>
        <p class="Code">a.radius = 20</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Retrieve some instance data</p>
        <p class="Code">PRINT, a.center</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Create another instance.</p>
        <p class="Code">b = ObjCircle(CENTER=[100,200], RADIUS=40)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Call an instance function method.</p>
        <p class="Code">PRINT, b.Area()</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Call a static method.</p>
        <p class="Code">obj = ObjCircle.GetCircles()</p>
        <p class="Code">PRINT, obj</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Retrieve a static property</p>
        <p class="Code">PRINT, ObjCircle.Pi</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Delete the objects</p>
        <p class="Code">a = 0</p>
        <p class="Code">b = 0</p>
        <p class="Code">obj = 0</p>
        <p>Note that in all of the methods and procedures above, we used <code>compile_opt idl2</code> to avoid any confusion between the use of parentheses for array indexing versus function calls. See <a href="Static_Methods.htm">Static Methods</a> for more details on the use of <code>compile_opt</code>.</p>
        <div class="mp_footer">Â© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>