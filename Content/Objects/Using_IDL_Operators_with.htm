<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../" data-mc-conditions="" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Language|Objects|Using IDL Objects">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Using IDL Operators with Objects</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../IDL Programming.htm">Language</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../Object Classes/ref_part2.htm">Objects</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">Using IDL Objects</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Using IDL Operators with Objects</span>
        </div>
        <h1><a name="obj_operators_3013489070_999424"></a><a name="obj_operators_3013489070_11420"></a>Using IDL Operators with Objects</h1>
        <p>The following standard IDL operators work directly on object reference variables:</p>
        <ul>
            <li value="1">Assignment</li>
            <li value="2">Method invocation (described in <a href="Acting_on_Objects_Using.htm#objects_3041994433_1016265">Acting on Objects Using Methods</a>)</li>
            <li value="3">Property referencing</li>
            <li value="4">EQ</li>
            <li value="5">NE</li>
        </ul>
        <p>Attempting to use other standard operators on object references results in an error.</p>
        <p class="Tip" data-mc-autonum="&lt;b&gt;Tip: &lt;/b&gt;"><span class="autonumber"><span><b>Tip: </b></span></span>Beginning with IDL 8.0, it is possible to <i>overload</i> some IDL operators so that they invoke a user-defined method rather than performing their normal function. See <a href="Object_Operator_Overload.htm#obj_operators_3013489070_998687">Object Operator Overloading Overview </a>for details.</p>
        <p>Many non-computational functions and procedures in IDL also work with object references, such as SIZE, N_ELEMENTS, HELP, and PRINT.</p>
        <h2 class="API"><a name="obj_operators_3013489070_998641"></a><a name="obj_operators_3013489070_66213"></a>Object Assignment</h2>
        <p><a name="kanchor4858"></a>Assignment works in the expected manner—assigning an object reference to a variable gives you another variable with the same reference. Hence, after executing the statements:</p>
        <p class="Code">;Define a class structure.</p>
        <p class="Code">struct = { cname, data1:0.0 }</p>
        <p class="Code">&#160;</p>
        <p class="Code">;Create an object.</p>
        <p class="Code">A = OBJ_NEW('cname')</p>
        <p class="Code">&#160;</p>
        <p class="Code">;Create a second object reference.</p>
        <p class="Code">B = A</p>
        <p class="Code">&#160;</p>
        <p class="Code">HELP, A, B</p>
        <p>IDL prints:</p>
        <p class="Code">A               OBJREF    = &lt;ObjHeapVar1(CNAME)&gt;</p>
        <p class="Code">B               OBJREF    = &lt;ObjHeapVar1(CNAME)&gt;</p>
        <p>Note that both A and B are references to the same object heap variable.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The assignment operator cannot be overridden by a user-defined method.</p>
        <h2 class="API"><a name="obj_operators_3013489070_998659"></a><a name="obj_operators_3013489070_54671"></a>Object Equality and Inequality</h2>
        <p>The E<a name="kanchor4859"></a>Q and <a name="kanchor4860"></a>NE operators allow you to compare object references to see if they refer to the same object heap variable. For example:</p>
        <p class="Code">;Define a class structure.</p>
        <p class="Code">struct = {cname, data:0.0}</p>
        <p class="Code">&#160;</p>
        <p class="Code">;Create an object.</p>
        <p class="Code">A = OBJ_NEW('CNAME')</p>
        <p class="Code">&#160;</p>
        <p class="Code">;B refers to the same object as A.</p>
        <p class="Code">B = A</p>
        <p class="Code">&#160;</p>
        <p class="Code">;C contains a null object reference.</p>
        <p class="Code">C = OBJ_NEW()</p>
        <p class="Code">&#160;</p>
        <p class="Code">PRINT, 'A EQ B: ', A EQ B &amp; $</p>
        <p class="Code">PRINT, 'A NE B: ', A NE B &amp; $</p>
        <p class="Code">PRINT, 'A EQ C: ', A EQ C &amp; $</p>
        <p class="Code">PRINT, 'C EQ NULL: ', C EQ OBJ_NEW() &amp; $</p>
        <p class="Code">PRINT, 'C NE NULL:', C NE OBJ_NEW()</p>
        <p>IDL prints:</p>
        <p class="Code">A EQ B:&#160;&#160;&#160;&#160;1</p>
        <p class="Code">A NE B:&#160;&#160;&#160;&#160;0</p>
        <p class="Code">A EQ C:&#160;&#160;&#160;&#160;0</p>
        <p class="Code">C EQ NULL:&#160;1</p>
        <p class="Code">C NE NULL:&#160;0</p>
        <p class="Code">&#160;</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The EQ and NE operators can be overridden by user-defined methods. See <a href="Object_Operator_Overload.htm#obj_operators_3013489070_998687">Object Operator Overloading Overview</a> for details.</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>