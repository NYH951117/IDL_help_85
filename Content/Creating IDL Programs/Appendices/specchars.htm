<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-conditions="" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Language|Miscellaneous Topics">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Special Characters</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../IDL Programming.htm">Language</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../MiscellaneousLanguageTopics.htm">Miscellaneous Topics</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Special Characters</span>
        </div>
        <h1><a name="specchars_4267724080_996918"></a><a name="specchars_4267724080_86733"></a>Special Characters</h1>
        <p>Within the IDL environment, a number of characters have special meanings.</p>
        <p>The following table lists characters with special interpretations and states their functions in IDL. These characters are discussed further in the descriptions following the table.</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');margin-left: 0;margin-right: auto;caption-side: bottom;" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Character</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Function</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p><code>!</code>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>First character of system variable names and font-positioning commands</p>
                    </td>
                </tr>
                <tr>
                    <td rowspan="2" class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p><code>'</code>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Delimit string constants</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Indicate part of octal or hex constant</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p><code>;</code>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Begin comment field</p>
                    </td>
                </tr>
                <tr>
                    <td rowspan="2" class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p><code>$</code>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Continue current command on the next line</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Issue operating system command if entered on a line by itself</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p><code>"</code>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Delimit string constants or precede octal constants</p>
                    </td>
                </tr>
                <tr>
                    <td rowspan="2" class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p><code>.</code>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Indicate constant is floating point</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Start executive command</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p><code>&amp;</code>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Separate multiple statements on one line</p>
                    </td>
                </tr>
                <tr>
                    <td rowspan="3" class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p><code>:</code>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>End label identifiers for goto and structure fields</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Separate start and end subscript ranges</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">Construct arrays of increasing/decreasing values</td>
                </tr>
                <tr>
                    <td rowspan="3" class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p><code>*</code>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Multiplication operator</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Array subscript range</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Pointer dereference (if in front of a valid pointer)</p>
                    </td>
                </tr>
                <tr>
                    <td rowspan="2" class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>@
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Include file</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Execute IDL batch file</p>
                    </td>
                </tr>
                <tr>
                    <td rowspan="2" class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p><code>?</code>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Invokes online help when entered at the IDL command line</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColEnd">
                        <p>Part of the ?: ternary operator used in conditional expressions</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API"><a name="kanchor4804"></a><a name="specchars_4267724080_27949"></a>Exclamation Point (<a name="kanchor4805"></a>!)</h2>
        <p>The exclamation point is the first character of names of IDL system-defined variables. System variables are predefined scalar variables of a fixed type. Their purpose is to override defaults for system procedures, to return status information, and to control the action of IDL.</p>
        <h2 class="API"><a name="kanchor4806"></a><a name="specchars_4267724080_75489"></a>Apostro<a name="kanchor4807"></a>phe <a name="kanchor4808"></a>(')</h2>
        <p>The apostrophe delimits string literals and indicates part of an octal or hex constant.</p>
        <h2 class="API"><a name="specchars_4267724080_41538"></a>Semicolon<a name="kanchor4809"></a> (<a name="kanchor4810"></a>;<a name="kanchor4811"></a>)</h2>
        <p>        The semicolon is the first character of the optional comment field of an IDL statement. All text on a line following a semicolon is ignored by IDL. A line can consist of a comment only or both a valid statement and a comment.</p>
        <h2 class="API"><a name="specchars_4267724080_997141"></a><a name="kanchor4812"></a><a name="specchars_4267724080_48857"></a>Dollar Sign (<a name="kanchor4813"></a>$)</h2>
        <p>The dollar sign at the end of a line indicates that the current statement is continued on the following line. The dollar sign character can appear anywhere a space is legal except within a string constant or between a function name and the first open parenthesis. Any number of continuation lines are allowed.</p>
        <p>When the $ character is entered as the first character after the IDL prompt, the rest of the line is sent to the operating system as a command. If $ is the only character present, an interactive subprocess is started. Under UNIX, IDL execution suspends until the new shell process terminates.</p>
        <h2 class="API"><a name="kanchor4814"></a><a name="specchars_4267724080_32512"></a>Quotation Mark (<a name="kanchor4815"></a>")</h2>
        <p>The quotation mark precedes octal numbers, which are always integers, and delimits string constants. Example: "<code>100B</code> is a byte constant equal to 64 base 10 and "<code>Don’t drink the water</code>" is a string constant.</p>
        <h2 class="API"><a name="kanchor4816"></a><a name="specchars_4267724080_76908"></a>Period (<a name="kanchor4817"></a>.)</h2>
        <p>The period or decimal point indicates in a numeric constant that the number is of floating-point or double-precision type. Example: 1.0 is a floating-point number. Also, in response to the IDL prompt, the period begins an executive command. For example,</p>
        <p class="Code">.run myfile</p>
        <p>causes IDL to compile the file <i>myfile.pro</i>. If <i>myfile.pro</i> contains a main program, the program also will be executed. In addition, the period precedes the name of a tag when referring to a field within a structure. For example, a reference to a tag called NAME in a structure stored in the variable A is A.NAME.</p>
        <h2 class="API"><a name="kanchor4818"></a><a name="specchars_4267724080_97416"></a>Ampersand (<a name="kanchor4819"></a>&amp;)</h2>
        <p>The ampersand separates multiple statements on one line. Statements can be combined until the maximum line length is reached. For example, the following line contains two statements:</p>
        <p class="Code">I = 1 &amp; PRINT, 'value:', I</p>
        <h2 class="API"><a name="specchars_4267724080_39079"></a>Colon<a name="kanchor4820"></a> (:)</h2>
        <p>The colon ends label identifiers. Labels can only be referenced by GOTO and ON_ERROR statements. The following line contains a statement with the label LOOP1.</p>
        <p class="Code">LOOP1: X = 2.5</p>
        <p>The colon also ends identifiers for structure fields:</p>
        <p class="Code">a = {FIELD1: 5, FIELD2: 10}</p>
        <p>The colon also separates the starting and ending subscripts in subscript range specifiers. For example, A[3:6] designates elements three to six of the variable A.</p>
        <p>Finally, the colon operator can be used to construct arrays of increasing or decreasing values:</p>
        <p class="Code">print, [0: 1: 0.1]</p>
        <p class="Code">&#160;</p>
        <p class="Code">0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0</p>
        <h2 class="API"><a name="kanchor4821"></a><a name="specchars_4267724080_62989"></a>Asterisk (<a name="kanchor4822"></a>*)</h2>
        <p>The asterisk represents one of the following, depending on context:</p>
        <ol>
            <li value="1">Multiplication (3 * 3).</li>
            <li value="2">An ending subscript range equal to the size of the dimension. For example, <code>A[3:*]</code> represents all elements of the vector A from A[3] to the last element, while <code>B[*,3]</code> represents all elements of row four of matrix B.</li>
            <li value="3">A pointer dereference operation. For example, if <code>ptr</code> is a valid pointer (created via the PTR_NEW function), then <code>*ptr</code> is the value held by the heap variable that <code>ptr</code> points to. For more information on IDL pointers, see <a href="../Components of the IDL Language/Operations_on_Pointers.htm#pointers_3224653378_998079">Operations on Pointers</a>.</li>
        </ol>
        <h2 class="API"><a name="kanchor4823"></a><a name="specchars_4267724080_24344"></a>At Sign (@)</h2>
        <p>The at sign is used both as an include character and to signal batch execution.</p>
        <h3>At sign as an Include Character</h3>
        <p>The at sign at the beginning of a line causes the IDL compiler to substitute the contents of the file whose name appears after the @ for the line. See <a href="../IncludeFiles.htm">Include Files</a> for details.</p>
        <h3><a name="kanchor4824"></a>At sign to Signal Batch Processing</h3>
        <p>When IDL is running in interactive mode, a line beginning with the character @ is entered in response to the IDL prompt and the file is opened for batch input. See <a href="../BatchJobs.htm">Batch Files</a> for details.</p>
        <h2 class="API"><a name="kanchor4825"></a><a name="specchars_4267724080_11791"></a>Question Mark (?)</h2>
        <p>The question mark is used as follows:</p>
        <ul>
            <li value="1">When entered at the IDL command line, the IDL online help facility is invoked.</li>
            <li value="2">Used in conditional expressions as part of the ?: ternary operator. For example:</li>
        </ul>
        <p class="Code">; A shorter way of saying IF (a GT b) THEN z=a ELSE z=b:</p>
        <p class="Code">z = (a GT b) ? a : b</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>