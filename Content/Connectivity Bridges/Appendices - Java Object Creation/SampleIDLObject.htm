<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Bridges|Java Export Bridge|Appendix - Java Object Creation">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Sample IDL Object for Java</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../Bridges.htm">Bridges</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">Java Export Bridge</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">Appendix - Java Object Creation</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Sample IDL Object for Java</span>
        </div>
        <h1><a name="Sample_IDL_Object"></a><a name="kanchor5375"></a>Sample IDL Object for Java</h1>
        <p>The Java createObject method creates an instance of an underlying IDL object and calls its Init method with any specified parameters (see <a href="../ExportFromIDL - Java Objects/StockJavaWrapperMethods.htm#createObject">createObject</a> for details). Through this object instance, you have access to the properties and methods of the object as well as the underlying IDL process.</p>
        <p>The following samples rely upon an IDL object contained in file named <i>idlexfoo__define.pro</i>. This file must be in the IDL path and needs to contain the following code:</p>
        <p class="Code">; The Init method expects three parameters:</p>
        <p class="Code">; a string, a 32-bit long, and an array which has</p>
        <p class="Code">; 2 rows &amp; 3 columns, containing 32-bit long values.</p>
        <p class="Code">; The ::Init method can also be called without any parameters.</p>
        <p class="Code">&#160;</p>
        <p class="Code">FUNCTION idlexfoo::Init, parmStr, parmVal, parmArr, _EXTRA=e</p>
        <p class="Code">&#160;</p>
        <p class="Code_Indented">IF (N_ELEMENTS(parmStr) EQ 1) THEN BEGIN</p>
        <p class="Code_Indented" style="text-indent: 20px;">IF ( SIZE(parmStr,/type) NE 7 ) THEN BEGIN</p>
        <p class="Code_Indented" style="text-indent: 40px;">PRINT, 'IDLexFoo::Init, parmStr is not a STRING' HELP, parmStr</p>
        <p class="Code_Indented" style="text-indent: 40px;">RETURN, 0</p>
        <p class="Code_Indented" style="text-indent: 20px;">ENDIF</p>
        <p class="Code_Indented">ENDIF</p>
        <p class="Code_Indented">&#160;</p>
        <p class="Code_Indented">IF (N_ELEMENTS(parmVal) EQ 1) THEN BEGIN</p>
        <p class="Code_Indented" style="text-indent: 20px;">IF ( (SIZE(parmVal,/type) NE 3) ) THEN BEGIN</p>
        <p class="Code_Indented" style="text-indent: 40px;">PRINT, 'IDLexFoo::Init, parmVal is not a LONG'</p>
        <p class="Code_Indented" style="text-indent: 40px;">HELP, parmVal</p>
        <p class="Code_Indented" style="text-indent: 40px;">RETURN, 0</p>
        <p class="Code_Indented" style="text-indent: 20px;">ENDIF</p>
        <p class="Code_Indented">ENDIF</p>
        <p class="Code_Indented">&#160;</p>
        <p class="Code_Indented">nElms = N_ELEMENTS(parmArr)</p>
        <p class="Code_Indented">IF (nElms GT 0) THEN BEGIN</p>
        <p class="Code_Indented" style="text-indent: 20px;">IF ( (nElms NE 6) OR (size(parmArr,/type) NE 3) ) THEN BEGIN</p>
        <p class="Code_Indented" style="text-indent: 40px;">PRINT, 'IDLexFoo::Init, parmArr is not a ARR(3,2) of LONG)'</p>
        <p class="Code_Indented" style="text-indent: 40px;">HELP, parmArr</p>
        <p class="Code_Indented" style="text-indent: 40px;">RETURN, 0</p>
        <p class="Code_Indented" style="text-indent: 20px;">ENDIF</p>
        <p class="Code_Indented">ENDIF</p>
        <p class="Code_Indented">&#160;</p>
        <p class="Code_Indented">RETURN, 1</p>
        <p class="Code">&#160;</p>
        <p class="Code">END</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Object definition.</p>
        <p class="Code">PRO idlexfoo  define</p>
        <p class="Code">&#160;</p>
        <p class="Code_Indented">; Create [col, row] 32-bit long array.</p>
        <p class="Code_Indented">initArr = LONARR(3,2)</p>
        <p class="Code_Indented">struct = {idlexfoo, $</p>
        <p class="Code_Indented" style="text-indent: 20px;">parmStr: '', $</p>
        <p class="Code_Indented" style="text-indent: 20px;">parmVal: 0L, $</p>
        <p class="Code_Indented" style="text-indent: 20px;">parmArr: initArr $</p>
        <p class="Code_Indented">}</p>
        <p class="Code">&#160;</p>
        <p class="Code">END</p>
        <h2>Export the Sample IDL Object</h2>
        <p>You will need to create the necessary wrapper object files by using the Export Bridge Assistant to generate them. Once you have created the object definition file, <i>idlexfoo__define.pro</i>, complete the following steps:</p>
        <ol>
            <li value="1">Open the Export Bridge Assistant by entering IDLEXBR_ASSISTANT at the command line.</li>
            <li value="2">  Select to create a Java export object by selecting <b>File &gt; New Project &gt; Java</b> and browse to select the <i>idlexfoo__define.pro</i> file. Click <b>Open</b> to load the file into the Export Assistant.<br /><p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Export Bridge Assistant details are available <a href="../ExportFromIDL - Export Bridge Assistant/ExportBridgeAssistantOverview.htm#Export_Bridge_Assistant_Overview">Using the Export Bridge Assistant</a>. Refer to that section if you need more information about the following steps.</p></li>
            <li value="3">
                <p>  The top-level project entry in the left tree panel is selected by default. There is no need to modify the default properties shown in the right-hand property panel, but you can enter different values if desired. There are no other parameters that need to be defined for this object.</p>
                <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/Description.css');" class="TableStyle_Description" cellspacing="0">
                    <col />
                    <col />
                    <thead>
                        <tr>
                            <th class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                                <p>Tree View</p>
                            </th>
                            <th class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                                <p>Item Parameter Configuration</p>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                                <p>IDL Export Bridge Project</p>
                            </td>
                            <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                                <p>Accept the default value or make changes as desired:</p>
                                <ul>
                                    <li value="1">Output classname</li>
                                    <li value="2">Process name</li>
                                    <li value="3">Output directory</li>
                                    <li value="4">Package name
</li>
                                </ul>
                            </td>
                        </tr>
                        <tr>
                            <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                                <p>idlexfoo</p>
                            </td>
                            <td class="TableStyle_Description_Body_1_0_RowEnd_ColEnd">
                                <p>Drawable object equals False</p>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </li>
            <li value="4">Save the project by selecting <b>File &gt; Save</b> project. Accept the default name and location or make changes as desired.</li>
            <li value="5">Build the export object by selecting <b>Build &gt; Build</b> object. The <b>Build log</b> panel shows the results of the build process. A subdirectory, named <i>idlexfoo</i> (based on the object name), contains the <i>.java</i> and <i>.class</i> files, and is located in the <b>Output directory</b>.</li>
        </ol>
        <p>See the following for information on how to create this object in your application:</p>
        <ul>
            <li value="1"><a href="JavaObjectInitiationWithoutParameters.htm#Java_Object_Initiation_Without_Parameters">Java Object Initiation Without Parameters</a>
            </li>
            <li value="2"><a href="JavaObjectInitiationWithParameters.htm#Java_Object_Initiation_With_Parameters">Java Object Initiation with Parameters</a>
            </li>
        </ul>
        <h2><a name="Note_on_Running_the_Java_Examples"></a>Note on Running the Java Examples</h2>
        <p>Examples in this appendix provide Windows-style compile <i>javac</i> (compile) and <i>java</i> (run) commands. If you are running on a platform other than Windows, use your platform’s path and directory separators and see <a href="../ExportFromIDL - IDL Objects/ConfiguringBuildAndClientMachines.htm#Java_Requirements">Java Requirements</a> for information about the <i>bridge_setup</i> file, which sets additional information.</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>