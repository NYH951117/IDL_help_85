<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Bridges|COM Import Bridge and ActiveX|ActiveX Controls">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Method Calls On ActiveX Controls</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../Bridges.htm">Bridges</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">COM Import Bridge and ActiveX</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">ActiveX Controls</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Method Calls On ActiveX Controls</span>
        </div>
        <h1><a name="Method_Calls_On_ActiveX_Controls"></a><a name="kanchor5238"></a>Method Calls On ActiveX Controls</h1>
        <p>IDL allows you to call the underlying ActiveX control’s methods by calling methods on the <a name="kanchor5239"></a>IDLcomActiveX object that is automatically created when you call the WIDGET_ACTIVEX function. IDL handles conversion between IDL data types and the data types used by the component, and any results are returned in IDL variables of the appropriate type. As with all IDL objects, the general syntax is:</p>
        <p class="Code">result = ObjRef-&gt;Method([Arguments])</p>
        <p>or</p>
        <p class="Code">ObjRef -&gt; Method[, Arguments]</p>
        <p>where ObjRef is an object reference to an instance of a dynamic subclass of the IDLcomActiveX class.</p>
        <p>The IDLcomActiveX object class is a direct subclass of the IDLcomIDispatch object class and provides none of its own methods. As a result, method calls on IDLcomActiveX objects follow the same rules as calls on IDLcomIDispatch objects. You should read and understand <a href="../ImportToIDL - COM Objects/MethodCallsOnIDLcomIDispatchObjects.htm#Method_Calls_On_IDLcomIDispatch_Objects">Method Calls on IDLcomIDispatch Objects</a> before calling an ActiveX control’s methods.</p>
        <h2><a name="kanchor5240"></a>Retrieving the Object Reference</h2>
        <p>Unlike IDLcomIDispatch objects, which you create explicitly with a call to the OBJ_NEW function, IDLcomActiveX objects are created automatically by IDL. To obtain an object reference to the automatically created IDLcomActiveX object, use the GET_VALUE keyword to the WIDGET_CONTROL procedure.</p>
        <p>For example, consider the following lines of IDL code:</p>
        <p class="Code">wBase = WIDGET_BASE()</p>
        <p class="Code">wAx = WIDGET_ACTIVEX(wBase, 'myProgram.myComponent.1', ID_TYPE=1)</p>
        <p class="Code">WIDGET_CONTROL, wBase, /REALIZE</p>
        <p class="Code">WIDGET_CONTROL, wAx, GET_VALUE=oAx</p>
        <p>The first line creates a base widget that will hold the ActiveX control. The second line instantiates the ActiveX control using its program ID and creates an IDLcomActiveX object. The third line realizes the base widget and the ActiveX control it contains; note that the ActiveX widget must be realized before you can retrieve a reference to the IDLcomActiveX object. The fourth line uses the WIDGET_CONTROL procedure to retrieve an object reference to the IDLcomActiveX object in the variable oAx. You can use this object reference to call the ActiveX control’s methods and set its properties.</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>