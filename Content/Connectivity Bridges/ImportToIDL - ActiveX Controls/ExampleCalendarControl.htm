<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Bridges|COM Import Bridge and ActiveX|ActiveX Controls">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Example Calendar Control</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../Bridges.htm">Bridges</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">COM Import Bridge and ActiveX</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">ActiveX Controls</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Example Calendar Control</span>
        </div>
        <h1><a name="Example_Calendar_Control"></a><a name="kanchor5231"></a>Example Calendar Control</h1>
        <p>This example uses an ActiveX control that displays a calendar interface. The control, contained in the file <i>mscal.ocx</i>, is installed along with a typical installation of Microsoft Office 97, and may also be present on your system if you have upgraded to a more recent version of Microsoft Office. If the control is not present on your system (you’ll know the control is not present if the example code does not display a calendar), you can download a the control as part of a package of sample ActiveX controls included in the file <i>actxsamp.exe</i>, discussed in Microsoft Knowledge Base Article 165437.</p>
        <p>If you download the control, place the file mscal.exe in a known location and execute the file; you will be prompted for a directory in which to place <i>mscal.ocx</i>. Open a command prompt window in the directory you chose and register the control as described in <a href="../ImportToIDL - COM Objects/AboutUsingCOMObjects.htm#Registering_COM_Components_on_a_Windows_Machine">Registering COM Components on a Windows Machine</a>.</p>
        <p>The calendar control has the program ID:</p>
        <p class="Code">MSCAL.Calendar.7</p>
        <p>and the class ID:</p>
        <p class="Code">{8E27C92B-1264-101C-8A2F-040224009C02}</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This example, <i><a name="kanchor5232"></a>ActiveXCal.pro</i>, is included in the <i>examples\doc\bridges\COM</i> subdirectory of the IDL distribution and develops an IDL routine called ActiveXCal that illustrates use of the calendar ActiveX control within an IDL widget hierarchy. Run the example procedure by entering <i>ActiveXCal</i> at the IDL command prompt or view the file in an IDL Editor window by entering <i>.EDIT ActiveXCal.pro</i>.</p>
        <ol>
            <li value="1">Create the ActiveXCal procedure. (Remember that in the <i>ActiveXCal.pro</i> file, this procedure occurs last.)</li>
            <p class="Code">PRO ActiveXCal</p>
            <li value="2">Create a top-level base widget to hold the ActiveX control.</li>
            <p class="Code">wBase = WIDGET_BASE(COLUMN = 1, SCR_XSIZE = 400, $</p>
            <p class="Code_Indented">TITLE='IDL ActiveX Widget Calendar Control')</p>
            <li value="3">Create base widgets to hold labels for the selected month, day, and year. Set the initial values of the labels.</li>
            <p class="Code">wSubBase = WIDGET_BASE(wBase, /ROW)<br />wVoid = WIDGET_LABEL(wSubBase, value = 'Month: ')</p>
            <p class="Code">wMonth = WIDGET_LABEL(wSubBase, value = 'October')</p>
            <p class="Code">wSubBase = WIDGET_BASE(wBase, /ROW)<br />wVoid = WIDGET_LABEL(wSubBase, VALUE = 'Day: ')</p>
            <p class="Code">wDay = WIDGET_LABEL(wSubBase, VALUE = '22')</p>
            <p class="Code">wSubBase = WIDGET_BASE(wBase, /ROW)<br />wVoid = WIDGET_LABEL(wSubBase, VALUE = 'Year: ')<br />wYear = WIDGET_LABEL(wSubBase, VALUE = '1999')</p>
            <li value="4">  Instantiate the ActiveX Control, using the control’s class ID.</li>
            <p class="Code">wAx=WIDGET_ACTIVEX(wBase, </p>
            <p class="Code_Indented">'{8E27C92B-1264-101C-8A2F-040224009C02}')</p>
            <li value="5">  Realize the top-level base widget.</li>
            <p class="Code">WIDGET_CONTROL, wBase, /REALIZE</p>
            <li value="6">  Set the top-level base’s user value to an anonymous structure containing widget IDs of the month, day, and year label widgets.</li>
            <p class="Code">WIDGET_CONTROL, wBase, $</p>
            <p class="Code_Indented">SET_UVALUE = {month:wMonth, day:wDay, year:wYear}</p>
            <li value="7">Retrieve the object ID of the IDLcomActiveX object that encapsulates the ActiveX control. Use the GetProperty method to retrieve the current values of the month, day, and year from the control.</li>
            <p class="Code">WIDGET_CONTROL, wAx, GET_VALUE = oAx<br />oAx-&gt;GetProperty, month=month, day=day, year=year</p>
            <li value="8">  Set the values of the label widgets to reflect the current date, as reported by the<br />ActiveX control.</li>
            <p class="Code">WIDGET_CONTROL, wMonth, SET_VALUE=STRTRIM(month, 2)</p>
            <p class="Code">WIDGET_CONTROL, wDay, SET_VALUE=STRTRIM(day, 2)</p>
            <p class="Code">WIDGET_CONTROL, wYear, SET_VALUE=STRTRIM(year, 2)</p>
            <li value="9">Call XMANAGER to manage the widget events, and end the procedure.</li>
            <p class="Code">XMANAGER, 'ActiveXCal', wBase<br />END</p>
            <li value="10">Now create an event-handling routine for the calendar control. (Remember that in the <i>ActiveXCal.pro</i> file, this procedure occurs before the ActiveXCal procedure.)</li>
            <p class="Code">PRO ActiveXCal_event, ev</p>
            <li value="11">The ActiveX widget is the only widget in this application that generates widget events, so the ID field of the event structure is guaranteed to contain the widget ID of that widget. Use the GET_VALUE keyword to retrieve an object reference to the IDLcomActiveX object that encapsulates the control.</li>
            <p class="Code">WIDGET_CONTROL, ev.ID, GET_VALUE = oCal</p>
            <li value="12">The user value of the top-level base widget is an anonymous structure that holds the widget IDs of the month, day, and year label widgets (see step 6 above). Retrieve the structure into a variable named <i>state</i>.</li>
            <p class="Code">WIDGET_CONTROL, ev.TOP, GET_UVALUE = state</p>
            <li value="13">Use the GetProperty method on the IDLcomActiveX object to retrieve the current values of the month, day, and year from the calendar control.</li>
            <p class="Code">oCal-&gt;GetProperty, month=month, day=day, year=year</p>
            <li value="14"> Use WIDGET_CONTROL to set the values of the month, day, and year label widgets.</li>
            <p class="Code">WIDGET_CONTROL, state.month, SET_VALUE = STRTRIM(month,2)</p>
            <p class="Code">WIDGET_CONTROL, state.day, SET_VALUE = STRTRIM(day,2)</p>
            <p class="Code">WIDGET_CONTROL, state.year, SET_VALUE = STRTRIM(year,2)</p>
            <li value="15">Call HEAP_FREE to ensure that dynamic portions of the event structure are released, and end the procedure.</li>
            <p class="Code">HEAP_FREE, ev<br />END</p>
        </ol>
        <p>Running the ActiveXCal procedure displays a widget that looks like the following:</p>
        <p>
            <img src="../Resources/Images/BridgesFigure4-1.png" />
        </p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>