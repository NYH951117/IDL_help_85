<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Bridges|Java Export Bridge|Appendix - IDL Java Object API">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>JIDLArray</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">  <![CDATA[ ]]></span><a class="MCBreadcrumbsLink" href="../Bridges.htm">Bridges</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">Java Export Bridge</span><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="PackageSummary.htm">Appendix - IDL Java Object API</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">JIDLArray</span>
        </div>
        <h1><a name="JIDLArray"></a>JIDLArray</h1>
        <h2>Declaration</h2>
        <p class="Code">public class JIDLArray implements java.io.Serializable</p>
        <p class="Code">&#160;</p>
        <p class="Code">java.lang.Object</p>
        <p class="Code" style="text-indent: 0px;">|</p>
        <p class="Code" style="text-indent: 0px;">+--com.idl.javaidl.JIDLArray</p>
        <h2>All Implemented Interfaces:</h2>
        <p class="Code">java.io.Serializable</p>
        <h2>Description</h2>
        <p>The JIDLArray class wraps a Java array as an object usable by the Java-IDL Export bridge.</p>
        <p>Wraps arrays of type boolean, byte, char, short, int, long, float, double, String, and JIDLObjectI.</p>
        <p>When retrieving the object, the calling code must cast the Object wrapped by JIDLArray to the proper * array type. For example:</p>
        <p class="Code">int[] myNativeArray = ...;</p>
        <p class="Code">// Create a wrapped array so it may be used in the bridge</p>
        <p class="Code">JIDLArray arr = new JIDLArray(myNativeArray)</p>
        <p class="Code">// ... do something in the bridge to modify the array ...</p>
        <p class="Code">&#160;</p>
        <p class="Code">// Now cast the resultant array to the expected type</p>
        <p class="Code">int[] newNative = (int[])arr.arrayValue();</p>
        <h3>Member Summary</h3>
        <h4>Constructors</h4>
        <p class="Code">JIDLArray(java.lang.Object arr)</p>
        <p class="indent">Construct a JIDLArray from a native array</p>
        <h4>Methods</h4>
        <h5>java.lang.Object</h5>
        <p class="Code">arrayValue()</p>
        <p class="indent">Get the native array that is wrapped by this object</p>
        <h5>java.lang.String</h5>
        <p class="Code">getClassName()</p>
        <p class="indent">Get the classname of the wrapped array.</p>
        <h5>java.lang.Object</h5>
        <p class="Code">getValue()</p>
        <p class="indent">Get the native array that is wrapped by this object</p>
        <h5>void</h5>
        <p class="Code">setValue(JIDLArray arr)</p>
        <p class="indent">Set the native array that is wrapped by this object</p>
        <h5>void</h5>
        <p class="Code">setValue(java.lang.Object arr)</p>
        <p class="indent">Set the native array that is wrapped by this object</p>
        <h5>java.lang.String</h5>
        <p class="Code">toString()</p>
        <h3>Inherited Member Summary</h3>
        <h4>Methods inherited from class Object</h4>
        <p class="indent">equals(Object), getClass(), hashCode(), notify(), notifyAll(), wait(long, int), wait(long, int), wait(long, int)</p>
        <h2>Constructors</h2>
        <h3>JIDLArray(Object)</h3>
        <p class="Code">public JIDLArray(java.lang.Object arr)</p>
        <p class="indent">Construct a JIDLArray from a native array</p>
        <h4 style="text-indent: 20px;">Parameters:</h4>
        <p class="indent">arr - the native array to wrap for use in the export bridge (Must be an array of type boolean, byte, char, short, int, long, float, double, String, or JIDLObjectI.)</p>
        <h2>Methods</h2>
        <h3>arrayValue()</h3>
        <p class="Code">public java.lang.Object arrayValue()</p>
        <p class="indent">Get the native array that is wrapped by this object</p>
        <h4 style="text-indent: 20px;">Returns:</h4>
        <p class="indent">the native array to wrap for use in the export bridge returned as an object. The array will be of type boolean, byte, char, short, int, long, float, double, String, or JIDLObjectI.</p>
        <h3>getClassName()</h3>
        <p class="Code">public java.lang.String getClassName()</p>
        <p class="indent">Get the classname of the wrapped array.</p>
        <h4 style="text-indent: 20px;">Returns:</h4>
        <p class="indent">The classname of the wrapped array.</p>
        <h3>getValue()</h3>
        <p class="Code">public java.lang.Object getValue()</p>
        <p class="indent">Get the native array that is wrapped by this object</p>
        <h4 style="text-indent: 20px;">Returns:</h4>
        <p class="indent">the native array to wrap for use in the export bridge returned as an object. The array will be of type boolean, byte, char, short, int, long, float, double, String, or JIDLObjectI.</p>
        <h3>setValue(JIDLArray)</h3>
        <p class="Code">public void setValue(com.idl.javaidl.JIDLArray arr)</p>
        <p class="indent">Set the native array that is wrapped by this object</p>
        <h4 style="text-indent: 20px;">Parameters:</h4>
        <p class="indent">arr - the native array to wrap for use in the export bridge (Must be an array of type boolean, byte, char, short, int, long, float, double, String, or JIDLObjectI.)</p>
        <h3>setValue(Object)</h3>
        <p class="Code">public void setValue(java.lang.Object arr)</p>
        <p class="indent">Set the native array that is wrapped by this object</p>
        <h4 style="text-indent: 20px;">Parameters:</h4>
        <p class="indent">arr - the native array to wrap for use in the export bridge (Must be an array of type boolean, byte, char, short, int, long, float, double, String, or JIDLObjectI.)</p>
        <h3>toString()</h3>
        <p class="Code">public java.lang.String toString()</p>
        <h4 style="text-indent: 20px;">Overrides:</h4>
        <p class="indent">toString in class Object</p>
        <div class="mp_footer">Â© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>