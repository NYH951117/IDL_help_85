<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Bridges|Java Export Bridge|Appendix - IDL Java Object API">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>JIDLLong</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">  <![CDATA[ ]]></span><a class="MCBreadcrumbsLink" href="../Bridges.htm">Bridges</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">Java Export Bridge</span><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="PackageSummary.htm">Appendix - IDL Java Object API</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">JIDLLong</span>
        </div>
        <h1><a name="JIDLLong"></a>JIDLLong</h1>
        <h2>Declaration</h2>
        <p class="Code">public class JIDLLong implements JIDLNumber, java.io.Serializable</p>
        <p class="Code">&#160;</p>
        <p class="Code">java.lang.Object</p>
        <p class="Code">|</p>
        <p class="Code">+--com.idl.javaidl.JIDLLong</p>
        <h2>All Implemented Interfaces:</h2>
        <p class="Code">JIDLNumber, java.io.Serializable</p>
        <h2>Description</h2>
        <p>The JIDLLong class wraps a long as a mutable object usable by the Java-IDL Export bridge.</p>
        <h3>Member Summary</h3>
        <h4>Constructors</h4>
        <p class="Code">JIDLLong(JIDLNumber value)</p>
        <p class="indent">Construct a wrapper object.</p>
        <p class="Code">JIDLLong(long value)</p>
        <p class="indent">Construct a wrapper object.</p>
        <h4>Methods</h4>
        <h5>boolean</h5>
        <p class="Code">booleanValue()</p>
        <p class="indent">Return the value of the wrapped primitive.</p>
        <h5>byte</h5>
        <p class="Code">byteValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h5>char</h5>
        <p class="Code">charValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h5>double</h5>
        <p class="Code">doubleValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h5>float</h5>
        <p class="Code">floatValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h5>int</h5>
        <p class="Code">intValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h5>long</h5>
        <p class="Code">longValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h5>void</h5>
        <p class="Code">setValue(JIDLNumber value)</p>
        <p class="indent">Change the value of the wrapper object</p>
        <h5>void</h5>
        <p class="Code">setValue(long value)</p>
        <p class="indent">Change the value of the wrapper object</p>
        <h5>short</h5>
        <p class="Code">shortValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h5>java.lang.String</h5>
        <p class="Code">toString()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h3>Inherited Member Summary</h3>
        <h4>Methods inherited from class Object</h4>
        <p class="indent">equals(Object), getClass(), hashCode(), notify(), notifyAll(), wait(long, int), wait(long, int), wait(long, int)</p>
        <h2>Constructors</h2>
        <h3>JIDLLong(JIDLNumber)</h3>
        <p class="Code">public JIDLLong(com.idl.javaidl.JIDLNumber value)</p>
        <p class="indent">Construct a wrapper object.</p>
        <h4 style="text-indent: 20px;">Parameters:</h4>
        <p class="indent">value - JIDLNumber to wrap for use in the export bridge</p>
        <h3>JIDLLong(long)</h3>
        <p class="Code">public JIDLLong(long value)</p>
        <p class="indent">Construct a wrapper object.</p>
        <h4 style="text-indent: 20px;">Parameters:</h4>
        <p class="indent">value - value to wrap for use in the export bridge</p>
        <h2>Methods</h2>
        <h3>booleanValue()</h3>
        <p class="Code">public boolean booleanValue()</p>
        <p class="indent">Return the value of the wrapped primitive.</p>
        <h4 style="text-indent: 20px;">Specified By:</h4>
        <p class="indent">booleanValue in interface JIDLNumber</p>
        <h4 style="text-indent: 20px;">Returns:</h4>
        <p class="indent">true if non-zero, false otherwise</p>
        <h3>byteValue()</h3>
        <p class="Code">public byte byteValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h4 style="text-indent: 20px;">Specified By:</h4>
        <p class="indent">byteValue in interface JIDLNumber</p>
        <h4 style="text-indent: 20px;">Returns:</h4>
        <p class="indent">value that is wrapped by this object</p>
        <h3>charValue()</h3>
        <p class="Code">public char charValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h4 style="text-indent: 20px;">Specified By:</h4>
        <p class="indent">charValue in interface JIDLNumber</p>
        <h4 style="text-indent: 20px;">Returns:</h4>
        <p class="indent">value that is wrapped by this object</p>
        <h3>doubleValue()</h3>
        <p class="Code">public double doubleValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h4 style="text-indent: 20px;">Specified By:</h4>
        <p class="indent">doubleValue in interface JIDLNumber</p>
        <h4 style="text-indent: 20px;">Returns:</h4>
        <p class="indent">value that is wrapped by this object</p>
        <h3>floatValue()</h3>
        <p class="Code">public float floatValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h4 style="text-indent: 20px;">Specified By:</h4>
        <p class="indent">floatValue in interface JIDLNumber</p>
        <h4 style="text-indent: 20px;">Returns:</h4>
        <p class="indent">value that is wrapped by this object</p>
        <h3>intValue()</h3>
        <p class="Code">public int intValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h4 style="text-indent: 20px;">Specified By:</h4>
        <p class="indent">intValue in interface JIDLNumber</p>
        <h4 style="text-indent: 20px;">Returns:</h4>
        <p class="indent">value that is wrapped by this object</p>
        <h3>longValue()</h3>
        <p class="Code">public long longValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h4 style="text-indent: 20px;">Specified By:</h4>
        <p class="indent">longValue in interface JIDLNumber</p>
        <h4 style="text-indent: 20px;">Returns:</h4>
        <p class="indent">value that is wrapped by this object</p>
        <h3>setValue(JIDLNumber)</h3>
        <p class="Code">public void setValue(com.idl.javaidl.JIDLNumber value)</p>
        <p class="indent">Change the value of the wrapper object</p>
        <h4 style="text-indent: 20px;">Specified By:</h4>
        <p class="indent">setValue in interface JIDLNumber</p>
        <h4 style="text-indent: 20px;">Parameters:</h4>
        <p class="indent">value - JIDLNumber to wrap for use in the export bridge</p>
        <h3>setValue(long)</h3>
        <p class="Code">public void setValue(long value)</p>
        <p class="indent">Change the value of the wrapper object</p>
        <h4 style="text-indent: 20px;">Parameters:</h4>
        <p class="indent">value - primitive value to wrap for use in the export bridge</p>
        <h3>shortValue()</h3>
        <p class="Code">public short shortValue()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h4 style="text-indent: 20px;">Specified By:</h4>
        <p class="indent">shortValue in interface JIDLNumber</p>
        <h4 style="text-indent: 20px;">Returns:</h4>
        <p class="indent">value that is wrapped by this object</p>
        <h3>toString()</h3>
        <p class="Code">public java.lang.String toString()</p>
        <p class="indent">Return the value of the wrapped primitive</p>
        <h4 style="text-indent: 20px;">Overrides:</h4>
        <p class="indent">toString in class Object, value that is wrapped by  this object</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>