<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Bridges|COM Export Bridge|Multidimensional Array Storage and Access">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Multidimensional Array Storage and Access Overview</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../Bridges.htm">Bridges</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">COM Export Bridge</span><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink selected" href="#">Multidimensional Array Storage and Access</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Overview</span>
        </div>
        <h1><a name="Multidimensional_Array_Storage_and_Access_Overview"></a><a name="kanchor5141"></a>Multidimensional <a name="kanchor5142"></a>Array Storage and <a name="kanchor5143"></a>Access Overview</h1>
        <p>This appendix is designed to explain how multidimensional arrays are stored and accessed, with specific relevance to marshaling arrays between COM clients and IDL.</p>
        <p>Please note that if you use the Convert Majority property in the Export Bridge Assistant on exported property or method parameters (described in <a href="../ExportFromIDL - Export Bridge Assistant/SpecifyingInformationForExporting.htm#Converting_Array_Majority">Converting Array Majority</a>), you do not have to worry about the information or examples in this appendix. For more information, see <a href="../ExportFromIDL - Export Bridge Assistant/SpecifyingInformationForExporting.htm#Property_Information">Property Information</a>.</p>
        <p>A linear, one-dimensional (1D) vector is a contiguous list of items in memory. There is no room for misinterpreting what order the items are stored and accessed. However, moving beyond 1D can introduce contradictory definitions and connotations, depending on the source consulted and the programming language in question.</p>
        <p>Accordingly, we will stay away from words of strong and conflicting meaning, such as “column majority” and “row majority.” (You can read “Columns, Rows, and Array Majority” (Chapter 15, <i>Application Programming</i>) for more information on those terms.) What matters more than vocabulary is how multidimensional arrays are stored in physical memory (linear memory) and how they are accessed. For brevity’s sake, we will use two-dimensional arrays (2D) to illustrate storage, and focus on Visual Basic, C++, Win32 APIs, and IDL pro code for how the arrays are accessed.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Java has the same issues as COM with multidimensional array storage and access. You can assume that this appendix addresses both external languages, although it names only COM.</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>