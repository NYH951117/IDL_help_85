<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Bridges|Java Export Bridge">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>About Java Export Object Examples</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../Bridges.htm">Bridges</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">Java Export Bridge</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">About Java Export Object Examples</span>
        </div>
        <h1><a name="About_Java_Export_Object_Examples"></a>About <a name="kanchor5358"></a>Java Export Object Examples</h1>
        <p>An IDL object can wrapped for use in a Java application using the Export Bridge Assistant. For valuable information on the theory and architecture of a wrapper object created by the Export Bridge Assistant, see  <a href="../ExportFromIDL - Export Bridge Assistant/UsingTheAssistant.htm#Using_The_Export_Bridge_Assistant">Using the Export Bridge Assistant</a>.</p>
        <p>This chapter provides several Java examples that incorporate the use of Java export objects. These include:</p>
        <ul>
            <li value="1">Nondrawable examples — show how to access the processing power of IDL in a Java application by exchanging data with the IDL process, issuing IDL commands, accessing IDL output.<ul><li value="1"><a href="NondrawableJavaExportExample.htm#Nondrawable_Java_Export_Example">Nondrawable Java Export Example</a></li></ul></li>
            <li value="2">Drawable examples — contain the elements needed to create interactive IDL drawing windows and access to mouse events.<ul><li value="1"><a href="DrawableJavaExportExamples.htm#Drawable_Java_Export_Examples">Drawable Java Export Examples</a></li></ul></li>
        </ul>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>You can quickly incorporate the processing power of IDL in a Java application by including the pre-built Java connector wrapper object in your external application. Use this option if you do not need custom methods or an interactive drawing surface. See <a href="../ExportFromIDL - Connector Objects/UsingTheConnectorObject.htm#Using_The_Connector_Object">Using the Connector Object</a> for details and examples.</p>
        <p>The general process for each of these examples involves the following:</p>
        <ol>
            <li value="1">Create the object in IDL.</li>
            <li value="2">Export the object using the Export Bridge Assistant, which creates the files associated with the IDL object that is now wrapped in a Java export object wrapper.</li>
            <li value="3">Access the object in a Java application.This functionality automatically includes stock methods (described in <a href="OverviewOfJavaExportObjects.htm#Overview_Of_Java_Export_Objects">Using Exported Java Objects</a>) in addition to custom methods you have chosen to export.</li>
            <li value="4">Compile and execute the application with a classpath reference to <i>javaidlb.jar</i>.</li>
        </ol>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>See <a href="../ExportFromIDL - IDL Objects/OverviewOfWritingIDLObjectsForExporting.htm#Overview_Of_Writing_IDL_Objects_For_Exporting">Writing IDL Objects for Exporting</a> for information on how to create custom IDL objects that can be successfully exported using the Export Bridge Assistant. There are important object method and data type requirements that must be met.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>When you distribute an application, you will also need to share:<br />– the executable (<i>.class</i>) file(s) including those generated by the Assistant<br />– the <i>.pro</i> or <i>.sav</i> file that contains the custom IDL object definition</p>
        <p>Any <i>.pro</i> or <i>.sav</i> files included with your application must be located in the IDL path. Also, <i>IDL_DIR/resource/bridges/export/java/javaidlb.jar</i> must be in the Java classpath.</p>
        <h2><a name="Note_on_Running_the_Java_Examples"></a>Note on Running the Java Examples</h2>
        <p>Examples in this chapter provide Windows-style compile <i>javac</i> (compile) and <i>java</i> (run) commands. If you are running on a platform other than Windows, use your platform’s path and directory separators and see <a href="../ExportFromIDL - IDL Objects/ConfiguringBuildAndClientMachines.htm#Java_Requirements">Java Requirements</a> for information about the <i>bridge_setup</i> file, which sets additional information.</p>
        <h2><a name="kanchor5359"></a>Debugging Applications Using Export Objects</h2>
        <p>It can be challenging to determine what is happening in the IDL process associated with a wrapper object without the debugging features of the IDL Workbench. For access to valuable debug information, consider using the IDL_BRIDGE_DEBUG environment variable, described in <a href="DebuggingJavaWrapperObjects.htm#Debugging_Java_Wrapper_Objects">Debugging Java Wrapper Objects</a>.</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>