<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Bridges|Java Export Bridge">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Nondrawable Java Export Example</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../Bridges.htm">Bridges</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">Java Export Bridge</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Nondrawable Java Export Example</span>
        </div>
        <h1><a name="Nondrawable_Java_Export_Example"></a>Nondrawable <a name="kanchor5369"></a>Java Export <a name="kanchor5370"></a>Example</h1>
        <p><a name="kanchor5371"></a>Nondrawable objects provide access to the enormous processing power of IDL, but do not provide IDL drawing capabilities. This is useful for applications that need the data manipulation capabilities of IDL, but have no need for, or have independent drawing capabilities.</p>
        <h2><a name="Hello_World_Java_Example_with_Additional_Method"></a>Hello World Java Example with Additional Method</h2>
        <p>The following simple example creates an IDL object with a single function method that accepts one argument, and walks through the process of exporting the object using the Export Bridge Assistant. Once the export files are created, a simple Java application shows how to access the object method and capture its output.</p>
        <p>Complete the following steps to duplicate this example.</p>
        <ol>
            <li value="1">  In an IDL Editor window, copy in the following code and save the file as <i>helloworldex__define.pro</i> in your working directory:</li>
            <p class="Code">; Method returns message based on presence or</p>
            <p class="Code">; absence of argument.</p>
            <p class="Code">FUNCTION helloworldex::HelloFrom, who</p>
            <p class="Code">&#160;</p>
            <p class="Code_Indented">IF (N_ELEMENTS(who) NE 0) THEN BEGIN</p>
            <p class="Code_Indented" style="text-indent: 20px;">message = "Hello World from " + who RETURN, message</p>
            <p class="Code_Indented">ENDIF ELSE BEGIN</p>
            <p class="Code_Indented" style="text-indent: 20px;">message = 'Hello World' RETURN, message</p>
            <p class="Code_Indented">ENDELSE</p>
            <p class="Code_Indented">&#160;</p>
            <p class="Code">END</p>
            <p class="Code">&#160;</p>
            <p class="Code">; Init returns object reference on successful</p>
            <p class="Code">; initialization.</p>
            <p class="Code">FUNCTION helloworldex::INIT</p>
            <p class="Code_Indented">RETURN, 1</p>
            <p class="Code">END</p>
            <p class="Code">&#160;</p>
            <p class="Code">; Object definition.</p>
            <p class="Code">PRO helloworldex__define</p>
            <p class="Code">&#160;</p>
            <p class="Code_Indented">struct = {helloworldex, $</p>
            <p class="Code_Indented" style="text-indent: 20px;">who: '' , $</p>
            <p class="Code_Indented" style="text-indent: 20px;">message: ' '}</p>
            <p class="Code">&#160;</p>
            <p class="Code">END</p>
            <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>It is a good idea to test the functionality of an object before exporting it. After compiling the file, enter the following lines at the command line and make sure the output is what is expected for this object.</p>
            <p class="Code">ohello = OBJ_NEW("HELLOWORLDEX")</p>
            <p class="Code">PRINT, ohello-&gt;HelloFrom()</p>
            <p class="Code">PRINT, ohello-&gt;HelloFrom('Mr. Bill')</p>
            <li value="2">Open the Export Bridge Assistant by entering IDLEXBR_ASSISTANT at the command line.</li>
            <li value="3">Select to create a Java export object by selecting <b>File &gt; New Project &gt; Java</b> and browse to select the <i>helloworldex__define.pro</i> file. Click <b>Open</b> to load the file into the Export Assistant.</li>
            <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Export Bridge Assistant details are available in <a href="../ExportFromIDL - Export Bridge Assistant/SpecifyingInformationForExporting.htm#Specifying_Information_For_Exporting">Specifying Information for Exporting</a>. Refer to that section if you need more information about the following steps.</p>
            <li value="4">The top-level project entry in the left-hand tree panel is selected by default.</li>
            <p>There is no need to modify the default properties shown in the right-hand property panel, but you can enter different values if desired. Set other export object characteristics as described in the following table. Select the tree view item listed in the left column to configure the related properties in the right column.</p>
            <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/Description.css');" class="TableStyle_Description" cellspacing="0">
                <col />
                <col />
                <thead>
                    <tr>
                        <th class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                            <p>Tree View Item</p>
                        </th>
                        <th class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                            <p>Parameter Configuration</p>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                            <p>IDL Export Bridge Project</p>
                        </td>
                        <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                            <p>Accept the default value or make changes:</p>
                            <ul>
                                <li value="1"> Output classname</li>
                                <li value="2"> Process name</li>
                                <li value="3"> Output directory</li>
                            </ul>
                        </td>
                    </tr>
                    <tr>
                        <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                            <p>helloworldex</p>
                        </td>
                        <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                            <p>Drawable object equals False</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                            <p>Package name</p>
                        </td>
                        <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                            <p>helloworldex</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                            <p>HELLOFROM method</p>
                        </td>
                        <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                            <p><b>Output method name</b> — accept the default value, HELLOFROM</p>
                            <p><b>Return Type</b> — JIDLString since this function method returns a string message (as defined in the IDL object definition structure)</p>
                            <p><b>Array</b> — False since this method returns a single string, not an array</p>
                            <p><b>Export</b> — True</p>
                        </td>
                    </tr>
                    <tr>
                        <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                            <p>WHO argument</p>
                        </td>
                        <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                            <p> <b>Mutability</b> — In since the argument is not passed back to the caller</p>
                            <p><b>Type</b> — JIDLString since this argument is defined as a string in the IDL object definition</p>
                            <p><b>Array</b> — False</p>
                            <p><b>Export</b> — True</p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <li value="5">Save the project by selecting <b>File &gt; Save project</b>. Accept the default name and location or make changes as desired.</li>
            <li value="6">Verify that the object elements you want to export are listed in the Export log panel. If the expected items are not present, one or more items may still have an UNSPECIFIED field value that must be changed.</li>
            <li value="7">Build the export object by selecting <b>Build &gt; Build object</b>. The <b>Build log</b> panel shows the results of the build process. A subdirectory, named <i>helloworldex</i> (based on the object name), contains the <i>.java</i> and <i>.class</i> files, and is located in the <b>Output directory</b>.</li>
        </ol>
        <h3><a name="kanchor5372"></a>Using the Export Wrapper Object</h3>
        <p>The following simple Java application uses the wrapper object created in the previous section.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The file for this example, <i>helloworldex_example.java</i>, is located in the <i>examples/doc/bridges/java</i> subdirectory of the IDL distribution.</p>
        <ol>
            <li value="1">Open the file named <i>helloworldex_example.java</i> in the previously referenced directory and save the file in the <i>helloworldex</i> directory.</li>
            <li value="2">Open the Windows Command window by selecting <b>Start &gt; Run</b> and enter <i>cmd</i> in the textbox.</li>
            <li value="3">Use the <i>cd</i> command to change to the directory containing the <i>helloworldex</i> directory.</li>
            <li value="4">Reference the classpath of <i>javaidlb.jar</i> in the compile statement. Enter the following two commands (as single lines) to compile and execute the program, replacing IDL_DIR with the IDL installation directory:</li>
        </ol>
        <p class="Code">javac -classpath ".;IDL_DIR\resource\bridges\export\java\javaidlb.jar" helloworldex\helloworldex_example.java</p>
        <p class="Code">java -classpath ".;IDL_DIR\resource\bridges\export\java\javaidlb.jar" helloworldex.helloworldex_example</p>
        <p class="Tip" data-mc-autonum="&lt;b&gt;Tip: &lt;/b&gt;"><span class="autonumber"><span><b>Tip: </b></span></span>See <a href="AboutJavaExportObjectExamples.htm#Note_on_Running_the_Java_Examples">Note on Running the Java Examples</a> for information on executing Java commands on a non-Windows platform.</p>
        <p>After compiling and running the project, the output message will appear in the command window.</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>