<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Bridges|Java Import Bridge">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Overview Of Using Java Objects</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../Bridges.htm">Bridges</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">Java Import Bridge</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Overview Of Using Java Objects</span>
        </div>
        <h1><a name="Overview_Of_Using_Java_Objects"></a>Overview Of Using <a name="kanchor5376"></a>Java Objects</h1>
        <p>Java is an object-oriented programming language developed by Sun Microsystems that is commonly used for web development and other programming needs. It is beyond the scope of this chapter to describe Java in detail. Numerous third-party books and electronic resources are available. The Java website (http://java.sun.com) may be useful.</p>
        <p>The IDL-Java bridge allows you to access Java objects within IDL code. Java objects imported into IDL behave like normal IDL objects. See <a href="CreatingIDL-JavaObjects.htm#Creating_IDL-Java_Objects">Creating IDL-Java Objects</a> for more information. The IDL-Java bridge allows the arrow operator (-&gt;) to be used to call the methods of these Java objects just as with other IDL objects, see <a href="MethodCallsOnIDL-JavaObjects.htm#Method_Calls_On_IDL-Java_Objects">Method Calls on IDL-Java Objects</a> for more information. The public data members of a Java object are accessed through GetProperty and SetProperty methods, see <a href="ManagingIDL-JavaObjectProperties.htm#Managing_IDL-Java_Object_Properties">Managing IDL-Java Object Properties</a> for more information. These objects can also be destroyed with the OBJ_DESTROY routine, see <a href="DestroyingIDL-JavaObjects.htm#Destroying_IDL-Java_Objects">Destroying IDL-Java Objects</a> for more information.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>IDL requires an evaluation or permanent IDL license to use this functionality. This functionality is not available in demo mode.</p>
        <p>The bridge also provides IDL with access to exceptions created by the underlying Java object. This access is provided by the IDLJavaBridgeSession object, which is a Java object that maintains exceptions (errors) during a Java session, see <a href="TheIDLJavaBridgeSessionObject.htm#The_IDL_Java_Bridge_Session_Object">The IDLJavaBridgeSession Object</a> for more information.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Visual Java objects cannot be embedded into IDL widgets.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>On Solaris, there are potential problems creating graphical windows from the IDL-Java bridge using Java versions before 1.5. We recommend using the XToolkit option, which the IDL-Java bridge will use by default.</p>
        <h2>Java Runtime Environment Requirements</h2>
        <p>IDL supports version 1.7 and greater of the Java runtime environment.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>On Macintosh machines, the version of Java installed along with the operating system should be sufficient, whatever its version number.</p>
        <h2>Java Terminology</h2>
        <p>You should become familiar with the following terms before trying to understand how IDL works with Java objects:</p>
        <p><i>Java Virtual Machine</i> (JVM) - A software execution engine for executing the byte codes in Java class files on a microprocessor.</p>
        <p><i>Java Native Interface</i> (JNI) - Standard programming interface for accessing Java native methods and embedding the JVM into native applications. For example, JNI may be used to call C/C++ functionality from Java or JNI can be used to call Java from C/C++ programs.</p>
        <p><i>Java Invocation</i> API - An API by which one embeds the Java Virtual Machine into your native application by linking the native application with the JVM shared library.</p>
        <p><i>Java Reflection</i> API - Provides a small, type-safe, and secure API that supports introspection about the classes and objects. The API can be used to:</p>
        <ul>
            <li value="1">Construct new class instances and new arrays</li>
            <li value="2">Access and modify fields of objects and classes</li>
            <li value="3">Invoke methods on objects and classes</li>
            <li value="4">Access and modify elements of arrays</li>
        </ul>
        <h2><a name="IDL-Java_Bridge_Architecture"></a><a name="kanchor5377"></a>IDL-Java Bridge <a name="kanchor5378"></a>Architecture</h2>
        <p>The IDL-Java bridge uses the Java Native Interface (JNI), the reflection API, and the JVM to enable the connection between IDL and the underlying Java system.</p>
        <p>The IDL OBJ_NEW function can be used to create a Java object. A Java-specific class token identifies the Java class used to create a Java proxy object. IDL parses this class name and creates the desired object within the underlying Java environment.</p>
        <p>The Java-specific token is a case-insensitive form of the name of the Java class. Besides the token, the case-sensitive form of the name of the Java class is provided because Java itself is case-sensitive while IDL is not. IDL uses the case-insensitive form to create the object definition while Java uses the case-sensitive form.</p>
        <p>After creation, the object can then be used and manipulated just like any other IDL object. Method calls are the same as any other IDL object, but they are vectored off to an IDL Java system, which will call the appropriate Java method using JNI.</p>
        <p>The OBJ_DESTROY procedure in IDL is used to destroy the object. This process releases the internal Java object and frees any resources associated with it.</p>
        <div class="mp_footer">Â© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>