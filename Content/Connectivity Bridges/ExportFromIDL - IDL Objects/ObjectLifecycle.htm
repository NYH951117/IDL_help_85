<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Bridges|Java and COM - IDL Objects">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Object Lifecycle</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../Bridges.htm">Bridges</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">Java and COM - IDL Objects</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Object Lifecycle</span>
        </div>
        <h1><a name="Object_Lifecycle"></a><a name="kanchor5309"></a>Object Lifecycle</h1>
        <p><a name="kanchor5310"></a>Object lifecycle means the duration in which an object is valid for use between the time it is instantiated or created and then released or destroyed. There are two lifecycles to understand when dealing with the Export Bridge’s wrapper objects: the lifecycle of an instance of the wrapper object and the lifecycle of the underlying IDL object being wrapped.</p>
        <p>The lifecycle of a wrapper object begins when an instance of the wrapper object is created within the client’s application. However, the underlying IDL object is not created until the CreateObject stock method is called on the wrapper object instance. Every wrapper object has a set of stock methods, including CreateObject and DestroyObject, which are used to manage the object lifecycle. (For more information, see <a href="#Object_Creation" class="selected">Object Creation</a> and <a href="#Object_Release" class="selected">Object Release</a>)</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>For Java objects, the method is createObject, which is a more Java-like method- naming scheme. Assume that when this chapter mentions method calls, COM capitalizes the first word, but Java does not.</p>
        <p>When the CreateObject method is called, the underlying IDL process is created (if necessary), and an instance of the IDL object is created. The lifecycle of the IDL object continues until the DestroyObject stock method is called on the wrapper object instance. The lifecycle of the client’s wrapper object instance continues until it is released or destroyed using native language constructs.</p>
        <h2><a name="Object_Creation"></a><a name="kanchor5311"></a>Object Creation</h2>
        <p>Calling the CreateObject method on the wrapper object instance creates an instance of the underlying IDL object and calls its Init method with the specified parameters, if any. See <a href="../ExportFromIDL - COM Objects/StockCOMWrapperMethods.htm#CreateObject">CreateObject</a> (COM) and <a href="../ExportFromIDL - Java Objects/StockJavaWrapperMethods.htm#createObject">createObject</a> (Java) for language-specific calling conventions.</p>
        <h2><a name="Object_Release"></a><a name="kanchor5312"></a>Object Release</h2>
        <p>Calling the DestroyObject method calls the underlying IDL object’s Cleanup method, if present; then the underlying IDL object itself is destroyed. Calling DestroyObject does not release or destroy the wrapper object instance within the client space. This happens when the release method is called on the wrapper instance. See <a href="../ExportFromIDL - COM Objects/StockCOMWrapperMethods.htm#DestroyObject">DestroyObject</a> (COM) and <a href="../ExportFromIDL - Java Objects/StockJavaWrapperMethods.htm#destroyObject">destroyObject</a> (Java) for language-specific calling conventions.</p>
        <p>Java uses a garbage-collection scheme to clean up memory. It is important that there are no references to the wrapper object remaining in the client application; otherwise, the Java Virtual Machine (JVM) will not garbage-collect the wrapper object.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>There can be a period of time between the call to the DestroyObject method and when the wrapper instance itself is released. During that period, no method calls on the wrapper instance can be made because the underlying IDL object no longer exists.</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>