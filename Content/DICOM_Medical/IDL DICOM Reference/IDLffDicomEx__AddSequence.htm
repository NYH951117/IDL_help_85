<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Additional Topics|Medical Imaging in IDL|IDL DICOM Reference|IDLffDicomEx">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>IDLffDicomEx::AddSequence
        </title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">  <![CDATA[ ]]></span><a class="MCBreadcrumbsLink" href="../../OtherTopics.htm">Additional Topics</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../Expanded DICOM Support in IDL/ExpandedDICOMFunctionality.htm">Medical Imaging in IDL</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="DICOMEX_GETCONFIGFILEPAT.htm">IDL DICOM Reference</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">IDLffDicomEx::AddSequence</span>
        </div>
        <h1 class="ObjMethod">IDLffDicomEx::AddSequence
        </h1>
        <p>The IDLffDicomEx::AddSequence function method creates a new sequence. The DicomTag argument specifies a sequence (SQ) attribute, which must be part of the standard IOD (Information Object Definition) for the DICOM file type (unless the NON_CONFORMING keyword was set when the IDLffDicomEx object was created using the <a href="IDLffDicomEx__Init.htm">IDLffDicomEx::Init</a> method).</p>
        <p>The optional PARENTSEQID keyword can be used to create a nested sequence, placing the new sequence within an existing sequence. This existing sequence is identified by a sequence identifier, which may have been returned by a previous call to IDLffDicomEx::AddSequence or <a href="IDLffDicomEx__GetValue.htm">IDLffDicomEx::GetValue</a>.</p>
        <p>Once the sequence has been created, member items can be added via the IDLffDicomEx::SetValue method using the return value from this method, the identifier of the new sequence.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Changes are not written to the DICOM file until you call the <a href="IDLffDicomEx__Commit.htm">IDLffDicomEx::Commit</a> method. When you commit changes, all sequence identifiers are invalidated. You need to call <a href="IDLffDicomEx__GetValue.htm">IDLffDicomEx::GetValue</a> to re-access the sequence identifiers. See <a href="IDLffDicomEx__AddGroup.htm">Adding Groups to a Nested Sequence</a> for an example.</p>
        <h2 class="API"><a name="dicom_ex_4010397576_1006886"></a><a name="dicom_ex_4010397576_1006886_PageTOC_IDLffDicomEx"></a>Syntax</h2>
        <p class="Syntax"><i>Result</i> = <i>Obj</i>-&gt;[<a href="IDLffDicomEx.htm">IDLffDicomEx</a>::]AddSequence (<i>DicomTag</i> [,&#160;<a href="#dicom_ex_4010397576_1006906" class="selected">PARENTSEQID</a>=<i>integer</i>]&#160;)</p>
        <h2 class="API"><a name="dicom_ex_4010397576_1006888"></a><a name="dicom_ex_4010397576_1006888_PageTOC_IDLffDicomEx"></a>Return Value</h2>
        <p>Returns a long integer containing the sequence identifier for the newly created sequence. This identifier can be used by other methods that use the SEQID keyword such as <a href="IDLffDicomEx__GetValue.htm">IDLffDicomEx::GetValue</a> and <a href="IDLffDicomEx__SetValue.htm">IDLffDicomEx::SetValue </a>methods.</p>
        <h2 class="API"><a name="dicom_ex_4010397576_1006896"></a><a name="dicom_ex_4010397576_1006896_PageTOC_IDLffDicomEx"></a>Arguments</h2>
        <h3 class="Argument">DicomTag</h3>
        <p>A string that identifies the group and element of a DICOM sequence (SQ) attribute in the form <code>'XXXX,XXXX'</code>. The <i>DicomTag</i> argument must reference a public tag that is part of the standard IOD for the image type and must be of the SQ VR type. See <a href="../DICOM Resources/DICOMAttributes.htm">DICOM Attributes</a> for a list of tags.</p>
        <h2 class="API"><a name="dicom_ex_4010397576_1006905"></a><a name="dicom_ex_4010397576_1006905_PageTOC_IDLffDicomEx"></a>Keywords</h2>
        <h3 class="Keyword"><a name="dicom_ex_4010397576_1006906"></a><a name="dicom_ex_4010397576_1006906_Keywords_IDLffDicomEx"></a>PARENTSEQID</h3>
        <p>Set this keyword only if adding the new sequence to an existing sequence. Use this keyword to specify a parent sequence identifier to add the sequence to as follows:</p>
        <ul>
            <li value="1">If set to a non-zero value (a sequence identifier), then the sequence will be added to the existing, specified sequence. This sequence identifier may have been returned via a previous call to the IDLffDicomEx::AddSequence method. </li>
            <li value="2">If set to 0 or not specified, then the sequence is added to the root level of the DICOM file. This is the default. </li>
        </ul>
        <h2 class="API"><a name="dicom_ex_4010397576_1033339"></a><a name="dicom_ex_4010397576_1033339_PageTOC_IDLffDicomEx"></a>Example</h2>
        <p>The following example adds a sequence to the root-level of a cloned DICOM file and, a nested sequence containing attributes within the first sequence. The NON_CONFORMING keyword is set when the clone is created in order to avoid errors encountered when attempting to add non-standard attributes to the selected DICOM file. The newly added attributes are printed to the IDL Output Log window. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>For an example that adds groups of repeating tags to a sequence, see the “Examples” section of <a href="IDLffDicomEx__AddGroup.htm">IDLffDicomEx::AddGroup</a>. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This example does not write the cloned file to memory. To do so, simply use the <a href="IDLffDicomEx__Commit.htm">IDLffDicomEx::Commit</a> method. </p>
        <p class="Code">PRO dicom_addpublicattributes_doc</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Select a DICOM file.</p>
        <p class="Code">sFile = DIALOG_PICKFILE($</p>
        <p class="Code">    PATH=FILEPATH('',SUBDIRECTORY=['examples','data']), $</p>
        <p class="Code">    TITLE='Select DICOM Patient File', FILTER='*.dcm', $</p>
        <p class="Code">    GET_PATH=path)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Create a clone (aImgClone.dcm) of the selected file (sfile).</p>
        <p class="Code">; Set the NON_CONFORMING keyword to be able to add a public SQ</p>
        <p class="Code">; of radiopharmaceutical items to any file.</p>
        <p class="Code"> oImg = OBJ_NEW('IDLffDicomEx', path + 'aImgClone.dcm', $</p>
        <p class="Code">    CLONE=sfile, /NON_CONFORMING)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add a root-level sequence (Radiopharmaceutical Information).</p>
        <p class="Code">; **********************************************************</p>
        <p class="Code">vRootSeq = oImg-&gt;AddSequence('0054,0016')</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add an attribute within the sequence.</p>
        <p class="Code">; *************************************</p>
        <p class="Code">oImg-&gt;SetValue, '0018,1071', 'DS', '0', SEQID=vRootSeq</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add a nested sequence (Radionuclide Code Sequence).</p>
        <p class="Code">; ***************************************************</p>
        <p class="Code">vNestSeq = oImg-&gt;AddSequence('0054,0300', PARENTSEQID=vRootSeq)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add two items to the nested sequence.</p>
        <p class="Code">;**************************************</p>
        <p class="Code">oImg-&gt;SetValue, '0008,0100', 'SH', 'Tc-99m', SEQID=vNestSeq</p>
        <p class="Code">oImg-&gt;SetValue, '0008,0102', 'SH', '99SDM', SEQID=vNestSeq</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Print a range including the new tags to</p>
        <p class="Code">; the Output Log window.</p>
        <p class="Code">vTags = oImg-&gt;EnumerateTags(COUNT=vTagCnt, $</p>
        <p class="Code">   START_TAG='0054,0000', STOP_TAG='0056,0000')</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Format the output.</p>
        <p class="Code">PRINT, FORMAT= $</p>
        <p class="Code">   '(%"%-12s, %3s, %5s, %31s, %10s")', $</p>
        <p class="Code">  'TAG',  'VR', 'SEQID', $</p>
        <p class="Code">   'DESCRIPTION', 'VALUE'</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Cycle through the tags.</p>
        <p class="Code">FOR xx = 0, vTagCnt-1  DO BEGIN</p>
        <p class="Code">&#160;</p>
        <p class="Code">   ; If the item is nested within another item, indicate the</p>
        <p class="Code">   ; level using &gt; symbol.</p>
        <p class="Code">    IF (vTags[xx].Level GT 0) THEN BEGIN</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;vLvl = STRJOIN(REPLICATE('&gt;',vTags[xx].Level))</p>
        <p class="Code">      vtg =  vLvl + vTags[xx].Tag</p>
        <p class="Code">    ENDIF ELSE BEGIN</p>
        <p class="Code">      vtg = vTags[xx].Tag</p>
        <p class="Code">    ENDELSE</p>
        <p class="Code">&#160;</p>
        <p class="Code">    ; If the tags are in a group, indicate this.</p>
        <p class="Code">    IF (vTags[xx].GroupNum GT 0) THEN BEGIN</p>
        <p class="Code">       PRINT, FORMAT='(%"%15s, %1d")', 'Group', vTags[xx].GroupNum</p>
        <p class="Code">    ENDIF</p>
        <p class="Code">&#160;</p>
        <p class="Code">   ; Print the fields of the structure.</p>
        <p class="Code">   PRINT, FORMAT = $</p>
        <p class="Code">      '(%"%-12s, %3s, %5d, %31s, %10s")', $</p>
        <p class="Code">       vtg, vTags[xx].VR, vTags[xx].SeqId, $</p>
        <p class="Code">       vTags[xx].Description, vTags[xx].Value</p>
        <p class="Code">&#160;</p>
        <p class="Code">ENDFOR</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Clean up references.</p>
        <p class="Code">OBJ_DESTROY, oImg</p>
        <p class="Code">&#160;</p>
        <p class="Code">END</p>
        <p>Running this example generates the following output.</p>
        <p class="Code">TAG         ,  VR, SEQID,                     DESCRIPTION,  &#160;&#160;VALUE</p>
        <p class="Code">0054,0016   ,  SQ,   337, Radiopharmaceutical Information, </p>
        <p class="Code">&gt;0018,1071  ,  DS,   338,      Radiopharmaceutical Volume, &#160;&#160;&#160;&#160;&#160;&#160;&#160;0</p>
        <p class="Code">&gt;0054,0300  ,  SQ,   338,      Radionuclide Code Sequence,           </p>
        <p class="Code">&gt;&gt;0008,0100 ,  SH,   339,                      Code Value, &#160;&#160;Tc-99m</p>
        <p class="Code">&gt;&gt;0008,0102 ,  SH,   339,        Coding Scheme Designator, &#160;&#160;&#160;99SDM</p>
        <h2 class="API"><a name="dicom_ex_4010397576_1036854"></a><a name="dicom_ex_4010397576_1036854_PageTOC_IDLffDicomEx"></a>Version History</h2>
        <table style="mc-table-style: url('../../Resources/TableStyles/VersionTable.css');margin-left: 0;margin-right: auto;caption-side: top;" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>6.1</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>