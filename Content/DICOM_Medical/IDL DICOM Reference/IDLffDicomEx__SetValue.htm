<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Additional Topics|Medical Imaging in IDL|IDL DICOM Reference|IDLffDicomEx">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>IDLffDicomEx::SetValue
        </title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">  <![CDATA[ ]]></span><a class="MCBreadcrumbsLink" href="../../OtherTopics.htm">Additional Topics</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../Expanded DICOM Support in IDL/ExpandedDICOMFunctionality.htm">Medical Imaging in IDL</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="DICOMEX_GETCONFIGFILEPAT.htm">IDL DICOM Reference</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">IDLffDicomEx::SetValue</span>
        </div>
        <h1 class="ObjMethod">IDLffDicomEx::SetValue
        </h1>
        <p>The IDLffDicomEx::SetValue procedure method allows you to add and alter attributes including items contained in sequences. When modifying the value of an existing tag that is contained in a sequence, you must supply a SEQID keyword value. Use the IDLffDicomEx::AddSequence method or the IDLffDicomEx::GetValue method to return the SEQID keyword value.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Use <a href="IDLffDicomEx__AddSequence.htm">IDLffDicomEx::AddSequence</a> to create the sequence, and then call SetValue, using the returned SEQID from the AddSequence call, to add attributes to the sequence.</p>
        <p>This method allows you to:</p>
        <ul>
            <li value="1">Modify existing attributes, those that exist at the root level of a file, and those contained within sequences.</li>
            <li value="2">Add an attribute to the root level of a file, or as an item in a sequence. Use the <i>VR</i> argument to assign the Value Representation of the value. The value passed in will be converted to the specified VR as shown in the following <a href="#dicom_ex_4010397576_1008661" class="selected">VR Conversion Table</a> section. </li>
            <li value="3">Clear single or multiple values from an attribute at the root level or contained in a sequence using the CLEAR keyword. The attribute will exist but will not have any associated value. </li>
            <li value="4">Remove a single attribute from the root level or from within a sequence using the REMOVE keyword. When you specify the REMOVE keyword in conjunction with a sequence attribute (SQ), this removes all attributes in the sequence, including all nested sequences and all repeating groups of tags. Once any change has been committed, attempting to re-access a value that has been removed will fail. </li>
        </ul>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>You must call the <a href="IDLffDicomEx__Commit.htm">IDLffDicomEx::Commit</a> method to write any changes to the DICOM file. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Always use the <a href="IDLffDicomEx__SetPixelData.htm">IDLffDicomEx::SetPixelData</a> method to alter pixel data. Do not use the SetValue method.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>To ensure the pixel data is stored in the correct format before being further modified, use the <a href="IDLffDicomEx__ChangeTransferSyntax.htm">IDLffDicomEx::ChangeTransferSyntax</a> method to modify the compression of the pixel data. Do not use SetValue to directly modify the Transfer Syntax UID attribute (0002,0010). </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Strings which have trailing spaces may have those spaces ignored. Leading spaces are considered significant and are preserved.</p>
        <h3><a name="dicom_ex_4010397576_1008661"></a><a name="dicom_ex_4010397576_22658"></a>VR Conversion Table</h3>
        <p>A tag can have a single value or a tag can have multiple values. Correspondingly, the <i>Value</i> argument consists of either a single value or an array of values. The <i>VR</i> argument determines the Value Representation of the associated value(s). The VR types that can be used in SetPrivateValue are listed in the following table. These are the same VR types described in <a href="../DICOM Resources/ValueRepresentations.htm">Value Representations</a>. When SetValue is called to add or modify an attribute value, the conversions listed in the following table are applied to the data values specified in the <i>Value</i> argument. This lets you pass in values of one type and if possible the values will be converted according to the <i>VR</i> argument. </p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');margin-left: 0;margin-right: auto;caption-side: bottom;" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Value Representation</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Conversion</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>AE (Application Entity)</p>
                        <p>AS (Age String)</p>
                        <p>CS (Code String)</p>
                        <p>DA (Date)</p>
                        <p>DS (Decimal String)</p>
                        <p>DT (Date Time)</p>
                        <p>IS (Integer String)</p>
                        <p>LO (Long String)</p>
                        <p>LT (Long Text)</p>
                        <p>PN (Patient Name)</p>
                        <p>SH (Short String)</p>
                        <p>ST (Short Text)</p>
                        <p>TM (Time)</p>
                        <p>UI (Unique Identifier)</p>
                        <p>UT (Unlimited Text)</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>STRING</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>SS (Signed Short)</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>FIX</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>US (Unsigned Short)</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>UINT</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>SL (Signed Long)</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>LONG</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>UL (Unsigned Long)</p>
                        <p>AT (Attribute Tag) </p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>ULONG</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>FL (Floating Point Single)</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>FLOAT</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>FD (Floating Point Double) </p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>DOUBLE</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>SQ (Sequence)</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>No conversion. SQ can only specified for removal. To add a sequence, use the AddSequence method. </p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>OB (Other Byte)</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>No conversion. </p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>OW (Other Word) </p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>No conversion. </p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p>OF (Other Float) </p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p>FLT</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API"><a name="dicom_ex_4010397576_1033030"></a><a name="dicom_ex_4010397576_1033030_PageTOC_IDLffDicomEx"></a>Syntax</h2>
        <p class="Syntax"><i>Obj</i>-&gt;[<a href="IDLffDicomEx.htm">IDLffDicomEx</a>::]SetValue, <i>DicomTag</i>,&#160;<i>VR</i>,&#160;<i>Value </i>[,&#160;<a href="#dicom_ex_4010397576_1008769" class="selected">SEQID</a>=<i>integer</i>] [,&#160;/<a href="#dicom_ex_4010397576_1008779" class="selected">CLEAR</a>] [,&#160;/<a href="#dicom_ex_4010397576_1008781" class="selected">REMOVE</a>]</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The <i>VR</i> and <i>Value</i> arguments are optional when the CLEAR or REMOVE keywords are set. </p>
        <h2 class="API"><a name="dicom_ex_4010397576_1008741"></a><a name="dicom_ex_4010397576_1008741_PageTOC_IDLffDicomEx"></a>Arguments</h2>
        <h3 class="Argument">DicomTag</h3>
        <p>A string that identifies the group and element of a DICOM attribute in the form <code>'XXXX,XXXX'</code>. The <i>DicomTag</i> argument must reference a public tag. See <a href="../DICOM Resources/DICOMAttributes.htm">DICOM Attributes</a> for a list of tags. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>When adding a DICOM attribute, the tag must be part of the standard IOD for the image type unless the IDLffDicomEx object was initialized with the NON_CONFORMING keyword. Attempting to set an attribute that does not belong to the image type will result in an error. See <a href="IDLffDicomEx__Init.htm">IDLffDicomEx::Init</a> for details. </p>
        <h3 class="Argument">VR </h3>
        <p>A two-character string of the attribute, indicating the Value Representation of the supplied <i>Value</i> argument. When adding an attribute value, the data specified in the <i>Value</i> argument is converted to the data type defined by this argument. See the <a href="IDLffDicomEx__SetPrivateValue.htm">VR Conversion Table</a> for how values are converted. See  <a href="../DICOM Resources/ValueRepresentations.htm">Value Representations</a> for a descriptive VR list. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The <i>VR</i> argument is optional when the REMOVE or CLEAR keyword is set.</p>
        <h3 class="Argument">Value </h3>
        <p>An attribute can have a single value or multiple values (only a subset of standard DICOM attributes support multiple values). Set this argument to a single value or array of value(s) to store in the attribute as follows:</p>
        <ul>
            <li value="1">Set a single value to a tag by specifying a single value for the tag being written. This value is converted to match VR type specified in the <i>VR</i> argument if it is not of the specified type. </li>
            <li value="2">Set multiple values into a tag by specifying an array of values for the tag being written. Values in the array are converted match the VR type specified in the <i>VR</i> argument if they are not of the specified type. </li>
        </ul>
        <p class="NoteIndented">See the <a href="IDLffDicomEx__SetPrivateValue.htm">VR Conversion Table</a> for the conversions used per VR type.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The <i>Value</i> argument is optional when the CLEAR or REMOVE keyword is set.</p>
        <h2 class="API"><a name="dicom_ex_4010397576_1008768"></a><a name="dicom_ex_4010397576_1008768_PageTOC_IDLffDicomEx"></a>Keywords</h2>
        <h3 class="Keyword"><a name="dicom_ex_4010397576_1008769"></a><a name="dicom_ex_4010397576_10150"></a>SEQID</h3>
        <p>Set this keyword only if setting the value of an attribute that exists within a sequence. Use this keyword to specify a sequence identifier as follows:</p>
        <ul>
            <li value="1">Set to a non-zero value (a sequence identifier) indicating the sequence in which the value is contained. This sequence identifier may have been returned via a previous call to the <a href="IDLffDicomEx__AddSequence.htm">IDLffDicomEx::AddSequence</a> or <a href="IDLffDicomEx__GetValue.htm">IDLffDicomEx::GetValue</a> method. </li>
            <li value="2">Set to 0 or do not set this keyword to indicate the attribute exists at the root level of the DICOM file. This is the default. </li>
        </ul>
        <h3 class="Keyword"><a name="dicom_ex_4010397576_1008779"></a><a name="dicom_ex_4010397576_89517"></a>CLEAR </h3>
        <p>Set this keyword to remove all values from the attribute. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Some attributes require one or more values in order to be valid. You should always replace any cleared mandatory values if you wish to maintain a valid DICOM file. </p>
        <h3 class="Keyword"><a name="dicom_ex_4010397576_1008781"></a><a name="dicom_ex_4010397576_69574"></a>REMOVE</h3>
        <p>Set this keyword to remove the attribute from the DICOM file. If the attribute is a sequence then the sequence and all of the attributes included in the sequence are removed.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Some attributes are required in a valid DICOM file. You should always replace any mandatory attributes that you remove if you wish to maintain a valid DICOM file. </p>
        <h2 class="API"><a name="dicom_ex_4010397576_1008785"></a><a name="dicom_ex_4010397576_1008785_PageTOC_IDLffDicomEx"></a>Examples</h2>
        <h3>Adding Attributes</h3>
        <p>The following code provides examples of:</p>
        <ul>
            <li value="1">Adding attributes to the root level of a selected DICOM file</li>
            <li value="2">Adding a sequence</li>
            <li value="3">Adding attributes to the root-level sequence</li>
            <li value="4">Adding a sequence nested inside the first sequence</li>
            <li value="5">Adding attributes inside the nested sequence </li>
        </ul>
        <p>The NON_CONFORMING keyword is set when the clone is created in order to avoid errors when attempting to add non-standard attributes to the selected DICOM file. The newly added attributes are printed to the IDL Output Log window. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>For an example that adds groups of repeating tags to a sequence, see the “Examples” section of <a href="IDLffDicomEx__AddGroup.htm">IDLffDicomEx::AddGroup</a>. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This example does not write the cloned file to memory. To do so, simply use the <a href="IDLffDicomEx__Commit.htm">IDLffDicomEx::Commit</a> method. </p>
        <p class="Code">PRO dicom_addpublicattributes_doc</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Select a DICOM file.</p>
        <p class="Code">sFile = DIALOG_PICKFILE( $</p>
        <p class="Code">    PATH=FILEPATH('',SUBDIRECTORY=['examples','data']), $</p>
        <p class="Code">    TITLE='Select DICOM Patient File', FILTER='*.dcm', $</p>
        <p class="Code">    GET_PATH=path)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Create a clone (aImgClone.dcm) of the selected file (sfile).</p>
        <p class="Code">; Set the NON_CONFORMING keyword to be able to add a public SQ</p>
        <p class="Code">; of radiopharmaceutical items to any file.</p>
        <p class="Code"> oImg = OBJ_NEW('IDLffDicomEx', path + 'aImgClone.dcm', $</p>
        <p class="Code">    CLONE=sfile, /NON_CONFORMING)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add a root-level sequence (Radiopharmaceutical Information).</p>
        <p class="Code">; **********************************************************</p>
        <p class="Code">vRootSeq = oImg-&gt;AddSequence('0054,0016')</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add an attribute within the sequence.</p>
        <p class="Code">; *************************************</p>
        <p class="Code">oImg-&gt;SetValue, '0018,1071', 'DS', '0', SEQID=vRootSeq</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add a nested sequence (Radionuclide Code Sequence).</p>
        <p class="Code">; ***************************************************</p>
        <p class="Code">vNestSeq = oImg-&gt;AddSequence('0054,0300', PARENTSEQID=vRootSeq)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add two items to the nested sequence.</p>
        <p class="Code">;**************************************</p>
        <p class="Code">oImg-&gt;SetValue, '0008,0100', 'SH', 'Tc-99m', SEQID=vNestSeq</p>
        <p class="Code">oImg-&gt;SetValue, '0008,0102', 'SH', '99SDM', SEQID=vNestSeq</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Print a range including the new tags to</p>
        <p class="Code">; the Output Log window.</p>
        <p class="Code">vTags = oImg-&gt;EnumerateTags(COUNT=vTagCnt, $</p>
        <p class="Code">   START_TAG='0054,0000', STOP_TAG='0056,0000')</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Format the output.</p>
        <p class="Code">PRINT, FORMAT= $</p>
        <p class="Code">   '(%"%-12s, %3s, %5s, %31s, %10s")', $</p>
        <p class="Code">  'TAG',  'VR', 'SEQID', $</p>
        <p class="Code">   'DESCRIPTION', 'VALUE'</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Cycle through the tags.</p>
        <p class="Code">FOR xx = 0, vTagCnt-1  DO BEGIN</p>
        <p class="Code">&#160;</p>
        <p class="Code">   ; If the item is nested within another item, indicate the</p>
        <p class="Code">   ; level using &gt; symbol.</p>
        <p class="Code">    IF (vTags[xx].Level GT 0) THEN BEGIN</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;vLvl = STRJOIN(REPLICATE('&gt;',vTags[xx].Level))</p>
        <p class="Code">      vtg =  vLvl + vTags[xx].Tag</p>
        <p class="Code">    ENDIF ELSE BEGIN</p>
        <p class="Code">      vtg = vTags[xx].Tag</p>
        <p class="Code">    ENDELSE</p>
        <p class="Code">&#160;</p>
        <p class="Code">    ; If the tags are in a group, indicate this.</p>
        <p class="Code">    IF (vTags[xx].GroupNum GT 0) THEN BEGIN</p>
        <p class="Code">       PRINT, FORMAT='(%"%15s, %1d")', 'Group', vTags[xx].GroupNum</p>
        <p class="Code">    ENDIF</p>
        <p class="Code">&#160;</p>
        <p class="Code">   ; Print the fields of the structure.</p>
        <p class="Code">   PRINT, FORMAT = $</p>
        <p class="Code">      '(%"%-12s, %3s, %5d, %31s, %10s")', $</p>
        <p class="Code">       vtg, vTags[xx].VR, vTags[xx].SeqId, $</p>
        <p class="Code">       vTags[xx].Description, vTags[xx].Value</p>
        <p class="Code">&#160;</p>
        <p class="Code">ENDFOR</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Clean up references.</p>
        <p class="Code">OBJ_DESTROY, oImg</p>
        <p class="Code">&#160;</p>
        <p class="Code">END</p>
        <p>This code produces the following output.</p>
        <p class="Code">TAG         ,  VR, SEQID,                     DESCRIPTION, &#160;&#160;&#160;VALUE</p>
        <p class="Code">0054,0016   ,  SQ,   123, Radiopharmaceutical Information, </p>
        <p class="Code">&gt;0018,1071  ,  DS,   124,      Radiopharmaceutical Volume, &#160;&#160;&#160;&#160;&#160;&#160;&#160;0</p>
        <p class="Code">&gt;0054,0300  ,  SQ,   124,      Radionuclide Code Sequence, </p>
        <p class="Code">&gt;&gt;0008,0100 ,  SH,   125,                      Code Value, &#160;&#160;Tc-99m</p>
        <p class="Code">&gt;&gt;0008,0102 ,  SH,   125,        Coding Scheme Designator, &#160;&#160;&#160;99SDM</p>
        <h3>Removing Attributes</h3>
        <p>The following example clears the value of a root-level attribute, deletes a nested sequence (and all of its items) and modifies the value of another item within a sequence. The output of the additions and modifications are printed to the Output Log window.</p>
        <p class="Code">PRO print_tags_doc, vTags, vTagCnt</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Format the output.</p>
        <p class="Code">PRINT, FORMAT= $</p>
        <p class="Code">   '(%"%3s, %2s, %-12s, %3s, %7s, %3s, %5s, %30s, %10s")', $</p>
        <p class="Code">   'IDX', 'LVL', 'TAG',  'VR', 'LEN', 'CNT', 'SEQID', $</p>
        <p class="Code">   'DESCRIPTION', 'VALUE'</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Cycle through the tags.</p>
        <p class="Code">FOR xx = 0, vTagCnt-1  DO BEGIN</p>
        <p class="Code">&#160;</p>
        <p class="Code">   ; If the item is nested within another item, indicate the </p>
        <p class="Code">   ; level using &gt; symbol.</p>
        <p class="Code">    IF (vTags[xx].Level GT 0) THEN BEGIN</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;vLvl = STRJOIN(REPLICATE('&gt;',vTags[xx].Level))</p>
        <p class="Code">      vtg =  vLvl + vTags[xx].Tag</p>
        <p class="Code">    ENDIF ELSE BEGIN</p>
        <p class="Code">      vtg = vTags[xx].Tag</p>
        <p class="Code">    ENDELSE</p>
        <p class="Code">&#160;</p>
        <p class="Code">    ; If the tags are in a group, indicate this.</p>
        <p class="Code">    IF (vTags[xx].GroupNum GT 0) THEN BEGIN</p>
        <p class="Code">       PRINT, FORMAT='(%"%15s, %1d")', 'Group', vTags[xx].GroupNum</p>
        <p class="Code">    ENDIF</p>
        <p class="Code">&#160;</p>
        <p class="Code">   ; Print the fields of the structure. </p>
        <p class="Code">   PRINT, FORMAT = $</p>
        <p class="Code">      '(%"%3d, %2d, %-12s, %3s, %7d, %3d, %5d, %30s, %10s")', $</p>
        <p class="Code">       xx, vTags[xx].Level, vtg, vTags[xx].VR, vTags[xx].Length, $</p>
        <p class="Code">       vTags[xx].ValueCount, vTags[xx].SeqId, $</p>
        <p class="Code">       vTags[xx].Description, vTags[xx].Value</p>
        <p class="Code">&#160;</p>
        <p class="Code">ENDFOR</p>
        <p class="Code">&#160;</p>
        <p class="Code">END</p>
        <p class="Code">&#160;</p>
        <p class="Code">&#160;</p>
        <p class="Code">PRO dicom_clearpublicattributes_doc</p>
        <p class="Code">; Add and modify public attributes within a DICOM file.</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Select a DICOM file.</p>
        <p class="Code">sFile = DIALOG_PICKFILE( $</p>
        <p class="Code">    PATH=FILEPATH('',SUBDIRECTORY=['examples','data']), $</p>
        <p class="Code">    TITLE='Select DICOM Patient File', FILTER='*.dcm', $</p>
        <p class="Code">    GET_PATH=path)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Create a clone (aImgClone.dcm) of the selected file (sfile).</p>
        <p class="Code">; Set the NON_CONFORMING keyword to be able to add a public SQ  </p>
        <p class="Code">; of radiopharmaceutical items to any file. </p>
        <p class="Code"> oImg = OBJ_NEW('IDLffDicomEx', path + 'aImgClone.dcm', $</p>
        <p class="Code">    CLONE=sfile, /NON_CONFORMING)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add a public attribute, Image ID to the root level of the file.</p>
        <p class="Code">; ***************************************************************</p>
        <p class="Code">oImg-&gt;SetValue, '0054,0400', 'SH', 32</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add a root-level sequence (Radiopharmaceutical Information).</p>
        <p class="Code">; ********************************************************** </p>
        <p class="Code">vRootSeq = oImg-&gt;AddSequence('0054,0016') </p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add an attribute within the sequence.</p>
        <p class="Code">oImg-&gt;SetValue, '0018,1071', 'DS', '0', SEQID=vRootSeq</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add a nested sequence (Radionuclide Code Sequence).</p>
        <p class="Code">vNestSeq = oImg-&gt;AddSequence('0054,0300', PARENTSEQID=vRootSeq) </p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add two items to the nested sequence.</p>
        <p class="Code">oImg-&gt;SetValue, '0008,0100', 'SH', 'Tc-99m', SEQID=vNestSeq</p>
        <p class="Code">oImg-&gt;SetValue, '0008,0102', 'SH', '99SDM', SEQID=vNestSeq</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Print a range including the new tags to </p>
        <p class="Code">; the Output Log window.</p>
        <p class="Code">vTags = oImg-&gt;EnumerateTags(COUNT=vTagCnt, $</p>
        <p class="Code">   START_TAG='0054,0000', STOP_TAG='0056,0000')</p>
        <p class="Code">print_tags_doc, vTags, vTagCnt</p>
        <p class="Code">&#160;</p>
        <p class="Code">; ************** Clear Values ************************</p>
        <p class="Code">; Clear the values from an attribute at the root level.</p>
        <p class="Code">oImg-&gt;SetValue, '0054,0400', /CLEAR</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Retrieve the root-level sequence identifier to modify </p>
        <p class="Code">; items within the sequence.</p>
        <p class="Code">vSeqId = oImg-&gt;GetValue('0054,0016')</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Remove the nested sequence. This also removes all attributes </p>
        <p class="Code">; contained within the sequence.</p>
        <p class="Code">oImg-&gt;SetValue, '0054,0300', SEQID=vSeqId, /REMOVE</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Change the value of Radiopharmaceutical Volume from 0 to 55.</p>
        <p class="Code">oImg-&gt;SetValue, '0018,1071', 'DS', 55, SEQID=vSeqID</p>
        <p class="Code">&#160;</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Print a range including the new tags to </p>
        <p class="Code">; the Output Log window.</p>
        <p class="Code">PRINT, '******************* Modified Values *******************</p>
        <p class="Code">vTags = oImg-&gt;EnumerateTags(COUNT=vTagCnt, $</p>
        <p class="Code">   START_TAG='0054,0000', STOP_TAG='0056,0000')</p>
        <p class="Code">print_tags_doc, vTags, vTagCnt</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Cleanup objects.</p>
        <p class="Code">OBJ_DESTROY, oImg</p>
        <p class="Code">END</p>
        <p>Running this program produces the following output. the Volume attribute value is changed from 0 to 55, the Radionuclide Code sequence and all member items have been removed, and the Image ID value has been cleared.</p>
        <p>
            <img src="../../Resources/Images/clearpublicattributes.gif" />
        </p>
        <h2 class="API"><a name="dicom_ex_4010397576_1037040"></a><a name="dicom_ex_4010397576_1037040_PageTOC_IDLffDicomEx"></a>Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>6.1</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>&#160;</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>