<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Graphics|Graphics Overview">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Using IDL Graphics</title>
        <link href="../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../GUInavigation/visualize.htm">Graphics</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="Graphics Overview.htm">Graphics Overview</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Using IDL Graphics</span>
        </div>
        <h1><a name="kanchor4195"></a>Using IDL Graphics</h1>
        <p>You can use the same basic processes to create and modify any of the IDL graphics. In this topic, we will demonstrate how to use the IDL&#160;graphic functions to create graphics and subsequently manipulate them.</p>
        <h2 class="API">Creating an IDL graphic</h2>
        <p>To create an IDL graphic, call one of the IDL graphic functions with appropriate data. In this example, we will use the PLOT function:</p>
        <p class="Code_Indented">; Define the data.</p>
        <p class="Code_Indented">data =  SIN(2.0*FINDGEN(200)*!PI/25.0)*EXP(-0.02*FINDGEN(200))</p>
        <p class="Code_Indented">; Draw the plot.</p>
        <p class="Code_Indented">myPlot = PLOT(data)</p>
        <p>
            <img src="images/plot.gif" />
        </p>
        <p>Notice that the PLOT function returns a reference to the created graphic:</p>
        <p class="Code">myPlot = PLOT(data)</p>
        <p>The reference <code>myPlot</code> is our hook to the graphic, and we will use it to modify or retrieve information from the graphic. </p>
        <h2 class="API">Modifying graphic properties</h2>
        <p>Each IDL graphic has a set of associated properties. You can change the values of these properties to change the appearance of the graphic.</p>
        <p>For example, the PLOT graphic has a LINESTYLE property that determines the kind of line that is drawn. After creating the graphic, you can change its LINESTYLE property using the following syntax:</p>
        <p><i>graphic</i>.<i>property </i>= <i>value</i></p>
        <p>To create a PLOT graphic and change the LINESTYLE property, the code would be:</p>
        <p class="Code_Indented">data =  SIN(2.0*FINDGEN(200)*!PI/25.0)*EXP(-0.02*FINDGEN(200))</p>
        <p class="Code_Indented">myPlot = PLOT(data)</p>
        <p class="Code_Indented">myPlot.LINESTYLE = 1</p>
        <p>Notice that changing a graphic property immediately changes the graphic's appearance:</p>
        <p>
            <img src="images/plot1.gif" />
        </p>
        <p>Some properties can be set (initialized) at graphic creation, and  are identified by the (Init) tag in the Help system. For example, at graphic creation you can set the graphic's location within the window. In this example, we will initialize the graphic to occupy the middle third of the window:</p>
        <p class="Code">data =  SIN(2.0*FINDGEN(200)*!PI/25.0)*EXP(-0.02*FINDGEN(200))</p>
        <p class="Code">pos = [0.33, 0.33, 0.66, 0.66]</p>
        <p class="Code">myPlot = PLOT(data, POSITION=pos)</p>
        <p>
            <img src="images/plot2.gif" />
        </p>
        <p>The majority of property values can also be retrieved. For example, you can retrieve the value of a plot's LINESTYLE property and use it to set the LINESTYLE property of another graphic:</p>
        <p class="Code">myPlot = PLOT(data, LINESTYLE = 3)</p>
        <p class="Code">style = myPlot.LINESTYLE</p>
        <p class="Code">myPlotToo = PLOT(data, LINESTYLE = style)</p>
        <p>To get a list of a graphic's properties, you can reference the graphic function in the Help system, or you can print the list directly by printing the graphic reference:</p>
        <p class="Code_Indented">PRINT, myPlotToo</p>
        <p>The output will be similar to this:</p>
        <p class="Code_Indented">PLOT &lt;72245&gt;</p>
        <p class="Code_Indented">ANTIALIAS                 = 1</p>
        <p class="Code_Indented">ASPECT_RATIO              = 0.00000000</p>
        <p class="Code_Indented">ASPECT_Z                  = 0.00000000</p>
        <p class="Code_Indented">.</p>
        <p class="Code_Indented">.</p>
        <p class="Code_Indented">.</p>
        <p class="Code_Indented">&#160;</p>
        <p>The first line of output lists the graphic type and ID, and the following lines list all of the graphic's properties and current values.</p>
        <h2 class="API">Manipulating a graphic with methods</h2>
        <p>Properties can be thought of as settings that change the appearance of a graphic. You can also manipulate graphics using methods, which are small programs that carry out discrete tasks. Each IDL&#160;graphic has a set of associated methods that are listed on the graphic's Help page.</p>
        <p>For example, you can rotate a graphic around its axes by calling the graphic's Rotate method. Let's first create a test SURFACE graphic:</p>
        <p class="Code_Indented">mySurface = SURFACE( /TEST)</p>
        <p>
            <img src="images/surface1.gif" />
        </p>
        <p>Next, we call the SURFACE graphic's Rotate method with the /RESET keyword to reset the rotation on all the axes:</p>
        <p class="Code_Indented">mySurface.Rotate, /RESET</p>
        <p>
            <img src="images/surface2.gif" />
        </p>
        <p>Now we call the Rotate method individually for each axis, to recreate (roughly) the original image:</p>
        <p class="Code_Indented">mySurface.Rotate, 45, /ZAXIS</p>
        <p>
            <img src="images/surface3.gif" />
        </p>
        <p class="Code_Indented">mySurface.Rotate, -60, /XAXIS</p>
        <p>
            <img src="images/surface4.gif" />
        </p>
        <p class="Code_Indented">mySurface.Rotate, 45, /YAXIS</p>
        <p>
            <img src="images/surface5.gif" />
        </p>
        <p>Alternatively, you can use the graphics window interface to directly rotate your graphic. See <a href="GraphicsWindowInterface.htm">Graphics Window Interface</a> for more information.</p>
        <h2 class="API">Outputting graphics</h2>
        <p>Once you have created a graphic to your satisfaction, you can use built-in methods to save or print the graphic.</p>
        <p>For the previous surface graphic we created:</p>
        <p class="Code">mySurface = SURFACE( /TEST)</p>
        <p>You can save the graphic with the Save method:</p>
        <p class="Code">mySurface.Save, 'surface.png'</p>
        <p>The method will determine the image file type from the filename extension. See <a href="../IDL Graphics/Save Method.htm">Save Method</a> for more information.</p>
        <p>The Print method prints the window contents of an IDL graphic to the default printer:</p>
        <p class="Code">mySurface.Print, /LANDSCAPE</p>
        <p>See <a href="../IDL Graphics/Print Method.htm">Print Method</a> for more information.</p>
        <h2 class="API">Resources</h2>
        <ul>
            <li value="1"><a href="../Reference Material/A/AXIS.htm">AXIS</a>
            </li>
            <li value="2"><a href="AxesInGraphics.htm">Axes in Graphics</a>
            </li>
            <li value="3"><a href="../Reference Material/Functional List of IDL Routines/Graphics.htm">IDL Graphics Functions</a>
            </li>
            <li value="4"><a href="propChanges.htm">Change graphics properties</a>
            </li>
            <li value="5"><a href="../IDL Graphics/FormattingSymsAndLines.htm">Formatting IDL&#160;Graphics Symbols and Lines</a>
            </li>
            <li value="6"><a href="GraphicsWindowInterface.htm">Graphics Window Interface</a>
            </li>
            <li value="7"><a href="ImageGuideMe/SaveImage.htm">Save a graphic</a>
            </li>
            <li value="8"><a href="../IDL Graphics/Rotate Method.htm">Rotate Method</a>
            </li>
            <li value="9"><a href="Displaying graphics annotations.htm">Displaying graphics annotations</a>
            </li>
            <li value="10"><a href="Legend_add.htm">Add a legend to a graphic</a>
            </li>
            <li value="11"><a href="text_annotations.htm">Adding text and symbols</a>
            </li>
            <li value="12"><a href="titles_tex_syntax.htm">Mathematical symbols and Greek letters</a>
            </li>
        </ul>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>