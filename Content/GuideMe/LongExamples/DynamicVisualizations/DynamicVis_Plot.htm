<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Graphics|Graphics Gallery|Long Examples|Dynamic Visualizations">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Dynamic PLOT Visualizations</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix">  <![CDATA[ ]]></span><a class="MCBreadcrumbsLink" href="../../../GUInavigation/visualize.htm">Graphics</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../../GUInavigation/visualize.htm">Graphics Gallery</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbsSelf">Long Examples</span><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Dynamic Plot Visualizations</span>
        </div>
        <h1>Dynamic PLOT Visualizations</h1>
        <p>The <a href="../../../Reference Material/P/PLOT.htm">PLOT</a> function's <i>Equation</i> argument (and the <a href="../../../Reference Material/P/PLOT.htm#EQUATION">EQUATION</a> property) adds a level of flexibility to the creation of plots. This topic explores ways you can use the <i>Equation</i> argument to create dynamic, interactive plots.</p>
        <p>The <i>Equation</i> argument on the PLOT function allows you to specify either a string containing an equation with variable <i>X</i>, or the name of an IDL&#160;function that accepts <i>X</i>  as an input argument. The result of the equation (or the function) should be a one-dimensional array of <i>Y</i> coordinates to be plotted.</p>
        <ul>
            <li value="1">If <i>Equation</i> is an expression, then the <a href="../../../Reference Material/E/EXECUTE.htm">EXECUTE</a> function is called once with the <i>X</i>  array. Note that in certain circumstances (such as the IDL Virtual Machine), you may not be able to use the EXECUTE function.</li>
            <li value="2">If <i>Equation</i> is a function name, then <a href="../../../Reference Material/C/CALL_FUNCTION.htm">CALL_FUNCTION</a> is called once, with the <i>X</i>  array as an input argument. The function should return a one-dimensional result array.</li>
        </ul>
        <p>Once IDL creates the plot output, if you then interactively adjust the plot range, IDL will automatically recompute the equation to cover the new range.</p>
        <h2>Using an Equation String</h2>
        <p>For the first example, we will have IDL&#160;plot the <a href="../../../Reference Material/L/LAMBERTW.htm">LAMBERTW</a> function:</p>
        <p class="Code">p1 = PLOT('LambertW(x)', '2', DIMENSIONS=[400,400],$</p>
        <p class="Code_Indented">NAME='Upper branch', $</p>
        <p class="Code_Indented">TITLE='Lambert W Function', XRANGE=[-0.4, 1])</p>
        <p class="Code">p2 = PLOT('LambertW(x, /LOWER_BRANCH)', '2r', /OVERPLOT, $</p>
        <p class="Code_Indented">NAME='Lower branch')</p>
        <p class="Code">lg = LEGEND(/DATA, POSITION=[0.95, -6], LINESTYLE=6, SHADOW=0)</p>
        <p>This should produce the following graphic:</p>
        <p>
            <img src="../../images/ex_plot_equation1.png" />
        </p>
        <p>Once IDL creates the plot, test out its dynamic capabilities:</p>
        <ul>
            <li value="1">Try clicking with the middle mouse button on the graphic and panning around. </li>
            <li value="2">You can also use the mouse wheel to zoom in or out, or hold down the &lt;<i>Shift</i>&gt; key and draw a zoom box. </li>
            <li value="3">Try programmatically changing the plot range at the IDL command line:</li>
        </ul>
        <p class="Code_Indented">p1.XRANGE = [-0.5, 0.5]</p>
        <p class="Code_Indented">p1.YRANGE = [-2, 1]</p>
        <p>In all of these cases, as you change the plot range, IDL recomputes the equation with new <i>X</i> values that span the new range.</p>
        <h2>Using an Equation Function</h2>
        <p>Using an equation string has some limitations: </p>
        <ul>
            <li value="1">You can only have a single statement.</li>
            <li value="2">You cannot easily change the equation unless you set a new string.</li>
            <li value="3">You cannot pass parameters into your equation. </li>
        </ul>
        <p>As a different approach, create an IDL&#160;function containing your equation and then pass the function name to the <i>Equation</i> argument. This method allows you a bit more flexibility in your input equations.</p>
        <p>For example, in the first line of the code above, we could have simply written:</p>
        <p class="Code">p1 = PLOT('LambertW', '2', DIMENSIONS=[400,400],$</p>
        <p class="Code_Indented">NAME='Upper branch', $</p>
        <p class="Code_Indented">TITLE='Lambert W Function', XRANGE=[-0.4, 2])</p>
        <p>Notice that we no longer have an <i>X</i> variable in our equation, we just have the name of the function.</p>
        <p>We can also create our own routine which accepts our <i>X</i> vector and some optional user data.</p>
        <p>First, create a new IDL routine called <code>ex_plot_function</code> and save it in a file <code>ex_plot_function.pro</code> on IDL's path:</p>
        <p class="Code">FUNCTION ex_plot_function, x, k</p>
        <p class="Code_Indented">COMPILE_OPT IDL2</p>
        <p class="Code_Indented">RETURN, LAMBERTW(DCOMPLEX(x), k)</p>
        <p class="Code">END</p>
        <p>Next, we create our plot visualization, passing in the name of our equation along with our user data containing the "branch" parameter <i>k</i>:</p>
        <p class="Code">p1 = PLOT('ex_plot_function', '2', DIMENSIONS=[400,400],$</p>
        <p class="Code_Indented">NAME='k = 0', EQN_USERDATA=0, $</p>
        <p class="Code_Indented">TITLE='$\Re${LambertW}', XRANGE=[-1, 2])</p>
        <p class="Code">p2r = PLOT('ex_plot_function', '2r', /OVERPLOT, $</p>
        <p class="Code_Indented">NAME='k = -1', EQN_USERDATA=-1)</p>
        <p class="Code">p3r = PLOT('ex_plot_function', '2g', /OVERPLOT, $</p>
        <p class="Code_Indented">NAME='k = 1', EQN_USERDATA=1)</p>
        <p class="Code">p4r = PLOT('ex_plot_function', '2b', /OVERPLOT, $</p>
        <p class="Code_Indented">NAME='k = 2', EQN_USERDATA=2)</p>
        <p class="Code">lg = LEGEND(/DATA, POSITION=[1.9, -4], LINESTYLE=6, SHADOW=0)</p>
        <p>Our plot should now look like the following:</p>
        <p>
            <img src="../../images/ex_plot_equation2.png" />
        </p>
        <p>Again, we can pan and zoom around the plot, and IDL will automatically update the equations.</p>
        <p>&#160;</p>
        <h2>Other Topics in this Series</h2>
        <ul>
            <li value="1"><a href="DynamicVis_Contour.htm">Dynamic Contour Visualizations</a>
            </li>
            <li value="2"><a href="DynamicVis_Surface.htm">Dynamic Surface Visualizations</a>
            </li>
        </ul>
        <h2>See Also</h2>
        <p><a href="../../../Reference Material/C/CALL_FUNCTION.htm">CALL_FUNCTION</a>, <a href="../../../Reference Material/E/EXECUTE.htm">EXECUTE</a>, <a href="../../../Reference Material/L/LAMBERTW.htm">LAMBERTW</a>, <a href="../../../Reference Material/L/LEGEND.htm">LEGEND</a>,&#160;<a href="../../../Reference Material/P/PLOT.htm">PLOT</a> <![CDATA[ ]]></p>
        <div class="mp_footer">Â© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>