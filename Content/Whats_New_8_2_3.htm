<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>What's New in IDL 8.2.3</title>
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../Resources/Scripts/require.min.js">
        </script>
        <script src="../Resources/Scripts/require.config.js">
        </script>
        <script src="../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <h1>What's New in IDL 8.2.3</h1>
        <p>IDL 8.2.3 adds  functionality to IDL Graphics,  provides a new look and new features to Widget programming, and simplified building of custom tools for ENVI. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If you are new to IDL or upgrading from an older version, see also:</p>
        <ul>
            <li value="1"><a href="WhatsNew_in_8_0.htm">What's New in IDL 8.0 </a>
            </li>
            <li value="2"><a href="WhatsNew_in_8_1.htm">What's New in IDL 8.1</a>
            </li>
            <li value="3"><a href="Whats_New_in_82.htm">What's New in IDL 8.2</a>
            </li>
            <li value="4"><a href="Whats_New_in_821.htm">What's New in IDL 8.2.1</a>
            </li>
            <li value="5"><a href="Whats_New_8_2_2.htm">What's New in IDL 8.2.2</a>
            </li>
        </ul>
        <h2 class="API">New Routines</h2>
        <h3 data-mc-conditions="">BUBBLEPLOT</h3>
        <p>The <a href="Reference Material/B/BUBBLEPLOT.htm">BUBBLEPLOT</a> function creates a bubble chart that displays three dimensions of data in a two-dimensional Cartesian coordinate system. A bubble chart is similar to a scatter plot except that it additionally displays the magnitude of the data at a given (x, y) position by changes in size of the bubbles plotted. See the <a href="Reference Material/B/BUBBLEPLOT.htm">BUBBLEPLOT</a> topic and <a href="GuideMe/PlotGuideMe/Bubbleplots.htm">BUBBLEPLOT on a Map</a> for examples of using this function.</p>
        <p>
            <img src="Reference Material/images/bubbleplot_ex1.png" />
        </p>
        <h3 data-mc-conditions="">FILE_GZIP/FILE_GUNZIP</h3>
        <p data-mc-conditions="">The <a href="Reference Material/F/FILE_GZIP.htm">FILE_GZIP</a> and <a href="Reference Material/F/FILE_GUNZIP.htm">FILE_GUNZIP</a> routines allow you to compress and uncompress files using the GZIP file format. In addition to files, you can also compress or uncompress the input files to an in-memory buffer.</p>
        <h3 data-mc-conditions="">FILE_TAR/FILE_UNTAR</h3>
        <p data-mc-conditions="">The <a href="Reference Material/F/FILE_TAR.htm">FILE_TAR</a> and <a href="Reference Material/F/FILE_UNTAR.htm">FILE_UNTAR</a> routines allow you to archive and unarchive directories and files using the TAR file format. When creating TAR files, you also have the option to use GZIP compression. Using FILE_TAR you can also archive the files to a data stream instead of an output file, while with FILE_UNTAR you can unarchive from a data stream.</p>
        <h3 data-mc-conditions="">FILE_ZIP/FILE_UNZIP</h3>
        <p data-mc-conditions="">The <a href="Reference Material/F/FILE_ZIP.htm">FILE_ZIP</a> and <a href="Reference Material/F/FILE_UNZIP.htm">FILE_UNZIP</a> routines allow you to archive and unarchive directories and files using the ZIP file format.</p>
        <h3 data-mc-conditions="">GRIB_GETDATA</h3>
        <p data-mc-conditions="">The <a href="Reference Material/G/GRIB Routines/GRIB_GETDATA.htm" class="MCXref xref" xrefformat="{para}">GRIB_GETDATA</a> routine allows you to access a value associated with a key.</p>
        <h3 data-mc-conditions="">GRIB_PUTDATA</h3>
        <p data-mc-conditions="">The <a href="Reference Material/G/GRIB Routines/GRIB_PUTDATA.htm" class="MCXref xref" xrefformat="{para}">GRIB_PUTDATA</a> routine allows you to put a record to a GRIB file.</p>
        <h3 data-mc-conditions="">GRIB_LIST</h3>
        <p data-mc-conditions="">The <a href="Reference Material/G/GRIB Routines/GRIB_LIST.htm" class="MCXref xref" xrefformat="{para}">GRIB_LIST</a> routine allows you to list the records or keys in a GRIB file.</p>
        <h3 data-mc-conditions="">IDLffVideoRead</h3>
        <p data-mc-conditions="">The <a href="Object Classes/File Format/IDLffVideoRead.htm">IDLffVideoRead</a> class can be used to open video files in a variety of formats and read out frames of video, samples of audio, and packets of data.</p>
        <h3 data-mc-conditions="">QUERY_VIDEO</h3>
        <p data-mc-conditions=""><a href="Reference Material/Q/QUERY_VIDEO.htm">QUERY_VIDEO</a> obtains information about a video file without having to read the file. </p>
        <h3 data-mc-conditions="">READ_VIDEO</h3>
        <p data-mc-conditions="">The <a href="Reference Material/R/READ_VIDEO.htm">READ_VIDEO</a> function is a wrapper for <a href="Object Classes/File Format/IDLffVideoRead.htm">IDLffVideoRead</a> and provides a way to read video, audio, and/or data streams from a video file.</p>
        <h3 data-mc-conditions="">WRITE_VIDEO</h3>
        <p data-mc-conditions="">The <a href="Reference Material/W/WRITE_VIDEO.htm">WRITE_VIDEO</a> function is a wrapper for <a href="Object Classes/File Format/IDLffVideoWrite.htm">IDLffVideoWrite</a>. This function provides a way to easily write video and/or audio streams to a video file. </p>
        <h3>TERMINAL_SIZE</h3>
        <p>The <a href="Reference Material/T/TERMINAL_SIZE.htm">TERMINAL_SIZE</a> function allows you to  set and retrieve the column width and number of lines that are used for IDL output to the console. This function works for either the Console View in the IDL Workbench or the "tty" terminal shell for command-line IDL.</p>
        <h3 data-mc-conditions="">VOLUME</h3>
        <p data-mc-conditions="">The <a href="Reference Material/V/Volume.htm">VOLUME</a> function displays a visual representation of a three-dimensional array of data.</p>
        <p data-mc-conditions="">
            <img src="IDL Graphics/images/volume_hydrogen.png" />
        </p>
        <h3 data-mc-conditions="">ZLIB_COMPRESS/ZLIB_UNCOMPRESS</h3>
        <p data-mc-conditions="">The <a href="Reference Material/Z/ZLIB_COMPRESS.htm">ZLIB_COMPRESS</a> and <a href="Reference Material/Z/ZLIB_UNCOMPRESS.htm">ZLIB_UNCOMPRESS</a> routines allow you to compress and uncompress IDL numeric arrays using the DEFLATE compression algorithm. You can specify the compression level as well as the type of header: no header, ZLIB, or GZIP.</p>
        <h2 class="API">Updates</h2>
        <h3>Axis: Minor Tick Linestyle</h3>
        <p>Both <a href="Object Classes/Graphics/IDLgrAxis_Properties.htm">IDLgrAxis</a> and the <a href="Reference Material/A/AXIS.htm">AXIS</a> graphics function have a new SUBGRIDSTYLE property. This property lets you control the linestyle for the minor tick marks on an axis. For IDLgrAxis the default value is -1, which indicates that the minor ticks should follow the linestyle of the major ticks. For the AXIS function, the default is 0, which is solid lines.</p>
        <h3>Automatic Gridding for IMAGE, CONTOUR, and SURFACE Functions</h3>
        <p>
            <img src="Resources/Images/ex_autogridding.png" />
        </p>
        <p>Previously, if you supplied data that was irregularly spaced to the IMAGE, CONTOUR, or SURFACE functions, IDL would produce an error. Now, IDL will automatically grid the data for you. See <a href="Reference Material/I/IMAGE.htm">IMAGE</a>, <a href="Reference Material/C/CONTOUR.htm">CONTOUR</a>, or <a href="Reference Material/S/SURFACE.htm">SURFACE</a> for details on the gridding method. You can also retrieve the gridded results using the ::<a href="IDL Graphics/GetData Method.htm">GetData</a> method.</p>
        <p>For example:</p>
        <p class="Code">; Scattered elevation data of a model of an inlet</p>
        <p class="Code">ds = READ_ASCII(FILEPATH('irreg_grid1.txt', $</p>
        <p class="Code_Indented">&#160;SUBDIRECTORY = ['examples', 'data']))</p>
        <p class="Code">x = ds.field1[0,*]</p>
        <p class="Code">y = ds.field1[1,*]</p>
        <p class="Code">z = ds.field1[2,*]</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Contour plot of the irregularly-spaced data</p>
        <p class="Code">c = CONTOUR(z, x, y, /FILL, $</p>
        <p class="Code">&#160;&#160;&#160;POSITION=[0.18,0.15,0.83,0.85], $</p>
        <p class="Code_Indented">&#160;ASPECT_RATIO=1, $</p>
        <p class="Code_Indented">&#160;GRID_UNITS="meters", $</p>
        <p class="Code_Indented">&#160;XTITLE='X (m)', YTITLE='Y (m)', $</p>
        <p class="Code_Indented">&#160;TITLE='Inlet Elevation (m)')</p>
        <p class="Code">c1 = COLORBAR(TARGET=c, /ORIENTATION, $</p>
        <p class="Code_Indented">&#160;POSITION=[0.86,0.2,0.88,0.8], FONT_SIZE=12, TEXTPOS=1)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Overplot the original data locations</p>
        <p class="Code">s = SYMBOL(x, y, 'o', /DATA, /SYM_FILLED)</p>
        <h3>Graphics: Output to SVG (Scalable Vector Graphics)</h3>
        <p>The IDL graphics functions now support output to Scalable Vector Graphics (SVG) files. The SVG file format is widely used to produce scalable graphics that can be easily embedded in web pages. Since this is a "vector" format, you can modify the graphics  using a variety of authoring tools. As an example, for the above contour plot, you can simply save the file to SVG by typing:</p>
        <p class="Code">c.Save, 'contour.svg'</p>
        <p>Once saved, open the resulting SVG file in your web browser. See the graphics <a href="IDL Graphics/Save Method.htm">Save</a> method for details on SVG output.</p>
        <h3>Text: Overline Symbol</h3>
        <p>The TEXT graphics function has a new <code>\overline{ }</code> symbol, which draws a line above the enclosed characters. For example, you could specify a plot with the following string:</p>
        <p class="Code">myPlot = PLOT(/TEST, TITLE="$1/7 = 1.\<b>overline</b>{142857}$", FONT_NAME='Symbol')</p>
        <p>See the <a href="Reference Material/T/TEXT.htm">TEXT</a> function for details.</p>
        <h3>LIST::ToArray with DIMENSION Keyword</h3>
        <p>The LIST::ToArray method now has a DIMENSION keyword. If the DIMENSION keyword is specified, then the result is an array where the list elements are concatenated along that dimension. If you need to concatenate a large number of arrays and you do not know the total size (for example, when reading data from a file), using LIST::ToArray with DIMENSION can be significantly faster than doing simple array concatenation.</p>
        <p>See the <a href="Reference Material/L/LIST.htm#List::To">LIST::ToArray</a> method for a detailed example.</p>
        <h3>INTERPOLATE with DOUBLE Keyword</h3>
        <p>By default, the <a href="Reference Material/I/INTERPOLATE.htm">INTERPOLATE</a> function always converts the grid locations given by the X, Y, and Z arguments to single-precision floating-point values even if they were originally double-precision. To preserve backwards compatibility, this remains true. However, you can now set the DOUBLE keyword to 1 to use double precision for the grid locations. In either case, the actual interpolation is always done using double-precision arithmetic.</p>
        <h3>!CONST: Added Imaginary Number "i"</h3>
        <p>The <a href="Creating IDL Programs/Appendices/Constant_System_Variable.htm">!CONST</a> system variable now has a new field "i", which contains the value dcomplex(0,1). Using !CONST.I, you can now easily convert real values to complex numbers, and perform complex arithmetic.</p>
        <h2 class="API">IDL 8.0 Functionality</h2>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If you are new to IDL or upgrading from an older version, see also:<a href="WhatsNew_in_8_0.htm"></a></p>
        <ul>
            <li value="1"><a href="WhatsNew_in_8_0.htm">What's New in IDL 8.0 </a>
            </li>
            <li value="2"><a href="WhatsNew_in_8_1.htm">What's New in IDL 8.1</a>
            </li>
            <li value="3"><a href="Whats_New_in_82.htm">What's New in IDL 8.2</a>
            </li>
            <li value="4"><a href="Whats_New_in_821.htm">What's New in IDL 8.2.1</a>
            </li>
            <li value="5"><a href="Whats_New_8_2_2.htm">What's New in IDL 8.2.2</a>
            </li>
        </ul>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>