<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>What's New in IDL&#160;8.0</title>
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../Resources/Scripts/require.min.js">
        </script>
        <script src="../Resources/Scripts/require.config.js">
        </script>
        <script src="../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <h1>What's New in IDL&#160;8.0</h1>
        <p>IDL&#160;8.0 provides some ground-breaking functionality to make data visualization and IDL&#160;programming easier than ever. The new graphics functions allow you to create visualizations on the fly or within a program. You can also use create graphics singly or in batches and save the output files. The language enhancements make IDL&#160;programming more intuitive and straightforward. </p>
        <p>These features, along with a simplified IDL&#160;Workbench, will streamline the workflows you use to visualize and analyze your data. And most importantly, IDL 8.0 maintains backward compatibility for your existing IDL code.</p>
        <h1>Graphics Functions</h1>
        <p>IDL&#160;8.0 provides new graphics functions to easily visualize your data. Rather than writing a program, you can quickly type just a few lines to display a plot, map, image or other visualization. For example, type or paste the following into the IDL&#160;command line:</p>
        <p>
            <img src="Resources/Images/bar02_369x280.png" alt="stacked bar plot" style="float: right;width: 369;height: 280;" />
        </p>
        <p class="Code">; Define the data set.</p>
        <p class="Code">data1 = SIN((FINDGEN(15)+1)/15*!PI/2)</p>
        <p class="Code">data2 = data1 + COS((FINDGEN(15))/15*!PI/2)</p>
        <p class="Code">data3 = data2 + 0.25 + RANDOMU(1,15)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Plot three bars, stacked.</p>
        <p class="Code">b1 = BARPLOT(data1, BOTTOM_COLOR="white")</p>
        <p class="Code">b2 = BARPLOT(data2, BOTTOM_VALUES=data1, $</p>
        <p class="Code">FILL_COLOR='yellow', BOTTOM_COLOR="white", /OVERPLOT)</p>
        <p class="Code">b3 = BARPLOT(data3, BOTTOM_VALUES=data2, $</p>
        <p class="Code">FILL_COLOR='red', BOTTOM_COLOR="white", /OVERPLOT)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Add a title.</p>
        <p class="Code">b1.TITLE='$sin(\omega\pi/2) + cos(\omega\pi/2) + \nu$'</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Save to a PDF file.</p>
        <p class="Code">b1.SAVE, 'barplot.pdf', /LANDSCAPE</p>
        <p class="Code">&#160;</p>
        <p>With the new graphics functions, it is easy to create complex plots, modify the graphics on the fly, and then output to multiple file formats. These new graphic functions are designed to replace the use of Direct Graphics and iTools (although those procedures still exist). </p>
        <p>See the <a href="GUInavigation/visualize.htm">Graphics examples</a> for many ways you can use the new graphics functions. </p>
        <table style="margin-left: 0;margin-right: auto;mc-table-style: url('Resources/TableStyles/Description.css');" class="TableStyle_Description" cellspacing="0">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p><b>Graphics functions include:</b>
                        </p>
                        <ul>
                            <li value="1"><a href="Reference Material/P/PLOT.htm">PLOT</a>
                            </li>
                            <li value="2"><a href="Reference Material/B/BARPLOT.htm">BARPLOT</a>
                            </li>
                            <li value="3"><a href="Reference Material/E/ERRORPLOT.htm">ERRORPLOT</a>
                            </li>
                            <li value="4"><a href="Reference Material/P/POLARPLOT.htm">POLARPLOT</a>
                            </li>
                            <li value="5"><a href="Reference Material/P/PLOT3D.htm">PLOT3D</a>
                            </li>
                            <li value="6"><a href="Reference Material/I/IMAGE.htm">IMAGE</a>
                            </li>
                            <li value="7"><a href="Reference Material/C/CONTOUR.htm">CONTOUR</a>
                            </li>
                            <li value="8"><a href="Reference Material/S/SURFACE.htm">SURFACE</a>
                            </li>
                            <li value="9"><a href="Reference Material/M/MAP.htm">MAP</a>
                            </li>
                            <li value="10"><a href="Reference Material/V/VECTOR.htm">VECTOR</a>
                            </li>
                            <li value="11"><a href="Reference Material/S/STREAMLINE.htm">STREAMLINE</a>
                            </li>
                            <li value="12"><a href="Reference Material/W/WINDOW.htm">WINDOW</a>
                            </li>
                            <li value="13"><a href="Reference Material/W/WIDGET_WINDOW.htm">WIDGET_WINDOW     </a>
                            </li>
                        </ul>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p><b>These graphics helper functions enhance graphics:</b>
                        </p>
                        <ul>
                            <li value="1"><a href="Reference Material/M/MAPGRID.htm">MAPGRID</a>
                            </li>
                            <li value="2"><a href="Reference Material/M/MAPCONTINENTS.htm">MAPCONTINENTS</a>
                            </li>
                            <li value="3"><a href="Reference Material/L/LEGEND.htm">LEGEND</a>
                            </li>
                            <li value="4"><a href="Reference Material/C/COLORBAR.htm">COLORBAR</a>
                            </li>
                            <li value="5"><a href="Reference Material/T/TEXT.htm">TEXT</a>
                            </li>
                            <li value="6"><a href="Reference Material/P/POLYGON.htm">POLYGON</a>
                            </li>
                            <li value="7"><a href="Reference Material/P/POLYLINE.htm">POLYLINE</a>
                            </li>
                            <li value="8"><a href="Reference Material/A/AXIS.htm">AXIS</a>
                            </li>
                            <li value="9"><a href="Reference Material/E/ELLIPSE.htm">ELLIPSE</a>
                            </li>
                            <li value="10"><a href="Reference Material/G/GETWINDOWS.htm">GETWINDOWS</a>
                            </li>
                        </ul>
                        <p>&#160;</p>
                        <p>&#160;</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>Features of the new graphics include:</p>
        <ul>
            <li value="1"><a href="GuideMe/propChanges.htm">Dot notation</a> - easily change graphics properties  using the dot “.” and structure notation from the command line after graphics are created</li>
            <li value="2"><a href="GUInavigation/visualize.htm">Display multiple visualizations</a> in one graphics window</li>
            <li value="3">Use <a href="GuideMe/titles_tex_syntax.htm">mathematical and Greek symbols</a> and other special characters in graphics</li>
            <li value="4">Add <a href="GuideMe/Displaying graphics annotations.htm">annotations</a> such as text, lines and arrows, circles and polygons</li>
            <li value="5"><a href="GuideMe/ImageGuideMe/SaveImage.htm">Save as PDF</a> from  graphics</li>
        </ul>
        <h1>Language Enhancements</h1>
        <p>IDL 8.0 provides major language enhancements that are intuitive and easy to use.</p>
        <h2 class="API">!NULL</h2>
        <p>Use <a href="Creating IDL Programs/Components of the IDL Language/IDL_Data_Types.htm">!NULL</a>&#160;or empty brackets [ ] to create an empty array that can be used for array concatenation. Other uses include comparison with undefined variables or to test for null objects or pointers. !NULL or empty braces { } can also be used for structure concatenation. Finally, !NULL can be used to assign to variables or function results to free memory.</p>
        <h2 class="API">Garbage collection</h2>
        <p><a href="Creating IDL Programs/Components of the IDL Language/Automatic_Garbage_Collec.htm">Automatic garbage collection</a> eliminates the complexities of manual object and pointer memory management. IDL now performs automatic garbage collection on all data types so that when a variable is destroyed or goes out of scope, the variable’s memory is automatically reclaimed. The <a href="Reference Material/H/HEAP_REFCOUNT.htm">HEAP_REFCOUNT</a> routine was added to facilitate working with automatic garbage collection. It returns the current reference count for a pointer or object reference. </p>
        <h2 class="API">LIST </h2>
        <p>A list is a compound data type that can contain elements of any IDL data type, including scalars, arrays, structures, pointers, object references, and other lists.</p>
        <p>Lists have the following properties:</p>
        <ul>
            <li value="1">Elements in a list are ordered, and are indexed in one dimension.</li>
            <li value="2">Lists can change their size, growing and shrinking as elements are added or deleted, with no performance penalty or copying.</li>
            <li value="3">Individual list elements can change their value and data type without performance penalty.</li>
        </ul>
        <p>See the new <a href="Reference Material/L/LIST.htm">LIST</a> function for more information.</p>
        <h2 class="API">HASH</h2>
        <p>A hash is a compound data type that contains key-value pairs of different data types, including any mixture of scalars, arrays, structures, pointers, object references, lists, and other hashes. </p>
        <p>Hashes have the following properties:</p>
        <ul>
            <li value="1">Elements in a hash are unordered, and are indexed by a scalar key (either a number or a string).</li>
            <li value="2">Hashes can change their size, growing and shrinking as elements are added or deleted, with no performance penalty or copying.</li>
            <li value="3">Individual hash elements can change their value and data type without performance penalty.</li>
        </ul>
        <p>See the new                 <a href="Reference Material/H/HASH.htm">HASH</a> function for more information.</p>
        <h2 class="API">FOREACH operator</h2>
        <p>Use the <a href="Reference Material/F/FOREACH.htm">FOREACH</a> operator to iterate through the values of an array, list, or hash. The FOREACH statement executes one or more statements for each element of a variable. Within the FOREACH loop, the element’s value and (optionally) the key or index to which the element corresponds are available.</p>
        <h2 class="API">Negative Array Indices</h2>
        <p>When subscripting an array using scalar subscript values, you can use negative integers to index the array from the last element of the dimension being indexed. For example, the statement</p>
        <p class="Code">PRINT, array[-1]</p>
        <p>is a simple way to select the last element of array without knowing how many elements array contains. The above statement is equivalent to:</p>
        <p class="Code">PRINT, array[N_ELEMENTS(array)-1]</p>
        <p>Similarly, to select the third element from the end of a the array:</p>
        <p class="Code">PRINT, array[-3]</p>
        <p>You can select an element of a multidimensional array using negative subscript values. For example:</p>
        <p class="Code">mdstrarr = [['row1_col1', 'row1_col2', 'row1_col3'], $</p>
        <p class="Code">['row2_col1', 'row2_col2', 'row2_col3'], $</p>
        <p class="Code">['row3_col1', 'row3_col2', 'row3_col3']]</p>
        <p>The following two statements print the same element in mdstrarr:</p>
        <p class="Code">PRINT, mdstrarr[-3,-2]</p>
        <p class="Code">PRINT, mdstrarr[0,1]</p>
        <p>IDL Prints:</p>
        <p class="Code">row2_col1</p>
        <p class="Code">row2_col1</p>
        <p>For more information, see <a href="Creating IDL Programs/Components of the IDL Language/Using_Scalar_Values_as_A.htm">Using Scalar Values as Array Subscripts</a>.</p>
        <h2 class="API">Variable Type Functions</h2>
        <p>The <a href="Reference Material/I/ISA.htm">ISA</a> function tests for valid variables, types, structure names, object names, or whether an element is an array. The <a href="Reference Material/T/TYPENAME.htm">TYPENAME</a> function returns information about a variable's type, structure name, or object class.</p>
        <h2 class="API">Object Syntax</h2>
        <p>The object syntax has been simplified for all IDL object classes, making it more like standard programming languages. </p>
        <ul>
            <li value="1">To create an object, you need to use only the name of the class as though it were a function. For example, instead of using OBJ_NEW(<i>"Classname"</i>), the new syntax looks like the following:</li>
        </ul>
        <p class="Code_Indented">myContainer = IDL_Container( )</p>
        <ul>
            <li value="1">To call methods on an object, you can now use "." instead of "-&gt;". For example:</li>
        </ul>
        <p class="Code_Indented">myContainer.Add, IDLgrModel()</p>
        <p class="Code_Indented">&#160;</p>
        <p class="Code_Indented">print, myContainer.Count()</p>
        <ul>
            <li value="1">To destroy objects, instead of calling OBJ_DESTROY, obj, you can now do:</li>
        </ul>
        <p class="Code_Indented">myContainer.Cleanup</p>
        <h2 class="API">IDL_Object and Property Access</h2>
        <p>The new <a href="Object Classes/Miscellaneous/IDL_Object.htm">IDL_Object</a> class is designed to be the base class for all user-defined classes. By subclassing from IDL_Object, you gain the benefits of the new object syntax, as well as the potential for operator overloading (described below). In addition, you can use a simplified "." syntax to automatically call your GetProperty and SetProperty methods. For example,</p>
        <p class="Code">myObject = MyClass()</p>
        <p class="Code">&#160;</p>
        <p class="Code">print, myObject.COLOR</p>
        <p class="Code">&#160;</p>
        <p class="Code">myObject.COLOR = "red"</p>
        <p>Here, we are creating the object using the new syntax. In the second line, the COLOR property is being retrieved. IDL will automatically call your GetProperty method on MyClass with the COLOR keyword. For the third line, IDL will automatically call your SetProperty method with the COLOR keyword.</p>
        <h2 class="API">Operator Overloading</h2>
        <p><a href="Objects/Object_Operator_Overload.htm">Operator overloading</a> is an advanced feature to perform a specific object method when an operator is performed on that object. For example, you might want to define the "+" operator, such that when two objects are added together, it combines the internal properties in a predetermined manner and returns a third object with the results. By subclassing from <a href="Object Classes/Miscellaneous/IDL_Object.htm">IDL_Object</a>, you can override all of IDL's standard math operators, as well as the logical operators, true/false, N_ELEMENTS and SIZE, HELP and PRINT, array indexing, and the FOREACH statement.</p>
        <p>See the <a href="Objects/Overloadable_Operators.htm">list of operators that can be overloaded.</a></p>
        <h1>Simplified IDL Workbench User Interface</h1>
        <p>The Workbench consists of three basic views for an uncluttered work space. Just the project explorer, editor and console/command line are shown.</p>
        <ul>
            <li value="1">The toolbar contains larger icons for file management, editor and debugging features</li>
            <li value="2">Code templates  are available from the editor  or the workbench source menu</li>
            <li value="3">The current working directory is displayed and can be changed from the Workbench</li>
        </ul>
        <h2 class="API">Save to PDF</h2>
        <p>IDL 8.0 allows you to save visualizations in Adobe Acrobat's portable document format (PDF). This functionality supports saving multiple pages and gives you the option to save as vector or bitmap graphics. Use the new <a href="Object Classes/Graphics/IDLgrPDF.htm">IDLgrPDF</a> object class or <a href="GuideMe/ImageGuideMe/SaveImage.htm">save from the graphics window</a>.</p>
        <h1>Scientific Data Formats</h1>
        <ul>
            <li value="1">Updates to <a href="Reference Material/H/HDF5_Routines.htm">HDF5</a> 1.8.4 and <a href="Reference Material/N/NCDF_Routines.htm">NetCDF</a> 4.1 libraries, and <a href="Reference Material/C/CDF_Routines.htm">CDF</a> library (version 3.3)</li>
            <li value="2">Added the following new NetCDF routines:</li>
            <li class="Indent" value="3"><a href="Reference Material/N/NetCDF Routines/NCDF_DIMIDSINQ.htm">NCDF_DIMIDSINQ</a>
            </li>
            <li class="Indent" value="4"><a href="Reference Material/N/NetCDF Routines/NCDF_FULLGROUPNAME.htm">NCDF_FULLGROUPNAME</a>
            </li>
            <li class="Indent" value="5"><a href="Reference Material/N/NetCDF Routines/NCDF_GROUPDEF.htm">NCDF_GROUPDEF</a>
            </li>
            <li class="Indent" value="6"><a href="Reference Material/N/NetCDF Routines/NCDF_GROUPNAME.htm">NCDF_GROUPNAME</a>
            </li>
            <li class="Indent" value="7"><a href="Reference Material/N/NetCDF Routines/NCDF_GROUPSINQ.htm">NCDF_GROUPSINQ</a>
            </li>
            <li class="Indent" value="8"><a href="Reference Material/N/NetCDF Routines/NCDF_GROUPPARENT.htm">NCDF_GROUPPARENT</a>
            </li>
            <li class="Indent" value="9"><a href="Reference Material/N/NetCDF Routines/NCDF_NCIDINQ.htm">NCDF_NCIDINQ</a>
            </li>
            <li class="Indent" value="10"><a href="Reference Material/N/NetCDF Routines/NCDF_VARIDSINQ.htm">NCDF_VARIDSINQ</a>
            </li>
        </ul>
        <h1>Help</h1>
        <p>The online help has been reorganized to make common items easily accessible. Some documentation is available in PDF format in the <code>help/pdf</code> directory of your IDL&#160;installation. </p>
        <p>This material includes material on <a name="kanchor5611"></a>connectivity bridges, <a name="kanchor5612"></a>application and <a name="kanchor5613"></a>object programming, <a name="kanchor5614"></a>external development, and <a name="kanchor5615"></a>scientific data format examples.</p>
        <h1>Miscellaneous</h1>
        <ul>
            <li value="1">The Workbench provides a preference to control "on top" behavior of the graphics windows.</li>
            <li value="2">Updated the IDL&#160;Workbench to  Java JRE 1.6.</li>
            <li value="3"><a href="Object Classes/Graphics/IDLgrSymbol.htm">IDLgrSymbol</a> now supports filled symbols. There are also 15 new plot symbols.</li>
            <li value="4"><a href="Object Classes/File Format/IDLffDICOM.htm">IDLffDICOM</a> read now supports Windows 64-bit and Mac Intel 64-bit.</li>
            <li value="5"><a href="Reference Material/R/READ_CSV.htm">READ_CSV</a> and <a href="Reference Material/W/WRITE_CSV.htm">WRITE_CSV</a> now allow multiple rows in the header.</li>
            <li value="6"><a href="Reference Material/R/RESTORE.htm">RESTORE</a> now automatically compiles class and structure definitions within the save file.</li>
            <li value="7"><a href="Creating IDL Programs/Appendices/Constant_System_Variable.htm">!COLOR</a> system variable contains all 147 web colors.</li>
            <li value="8"><a href="Reference Material/M/MAP.htm">MAP</a> and <a href="Reference Material/M/MAP_PROJ_INIT.htm">MAP_PROJ_INIT </a>functions: Added Cylindrical Equal Area map projection, and ellipsoid support for Lambert Azimuthal.</li>
            <li value="9">New DIMENSION keyword to <a href="Reference Material/K/KURTOSIS.htm">KURTOSIS</a>, <a href="Reference Material/M/MOMENT.htm">MOMENT</a>, <a href="Reference Material/S/STDDEV.htm">STDDEV</a>, <a href="Reference Material/M/MEAN.htm">MEAN</a>, <a href="Reference Material/V/VARIANCE.htm">VARIANCE</a>, <a href="Reference Material/S/SKEWNESS.htm">SKEWNESS.</a></li>
            <li value="10"><a href="Reference Material/F/FOR.htm">FOR </a>loops now automatically promote loop variable to larger integer type if necessary.</li>
        </ul>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>