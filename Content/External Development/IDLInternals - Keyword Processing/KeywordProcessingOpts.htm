<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Additional Topics|External Development Guide|IDLInternals - Keyword Processing">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Keyword Processing Options</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../OtherTopics.htm">Additional Topics</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../EDG.htm">External Development Guide</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="IDLKeywordProcessing.htm">IDLInternals - Keyword Processing</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Keyword Processing Options</span>
        </div>
        <h1><a name="kanchor5446"></a>Keyword Processing Options</h1>
        <p>The following cases occur in keyword processing:</p>
        <h2 class="API">Scalar Input-Only</h2>
        <p>For scalar, input-only keywords, the user never sees the <b>IDL_VARIABLE</b> passed as the keyword argument. Instead, the value of the <b>IDL_VARIABLE</b> is converted to the type specified by the type field of the <b>IDL_KW_PAR</b> struct and is placed into the field of the user specified <b>KW_RESULT</b> structure, the offset of which is given by the value field. This offset is calculated using the <b>IDL_KW_OFFSETOF()</b> macro.</p>
        <h2 class="API">Array Input-Only</h2>
        <p>Array input-only keywords work similarly to the scalar case, except that the value field contains the address of an <b>IDL_KW_ARR_DESC_R</b> struct that supplies the added information required to convert the passed array elements to the specified type and place them into a C array for easy access. The array data is copied into a array within the user supplied <b>KW_RESULT</b> structure. The data field of the <b>IDL_KW_ARR_DESC_R</b> struct supplies the offset of the array field within the <b>KW_RESULT</b> structure. This offset is calculated using the <b>IDL_KW_OFFSETOF()</b> macro.</p>
        <p>As part of this process, the number of array elements passed is checked to be within the range specified in the <b>IDL_KW_ARR_DESC_R</b> struct, and if no error results, the number is stored into a field of the user supplied <b>KW_RESULT</b> struct. The n_offset field of the <b>IDL_KW_ARR_DESC_R</b> struct supplies the offset of this “number of elements” field within the <b>KW_RESULT</b> structure. This offset is calculated using the <b>IDL_KW_OFFSETOF()</b> macro.</p>
        <p>It is worth noting that input-only array keywords don’t pass information about the number of dimensions or their sizes, only the total number of elements. Therefore, they are treated as 1-dimensional vectors. For more flexibility, use an Input/Output keyword instead.</p>
        <h2 class="API">Input/Output</h2>
        <p>This case occurs if the <b>IDL_KW_VIN</b> or <b>IDL_KW_OUT</b> flag is set in the <b>IDL_KW_PAR</b> struct. In this case, the value field contains the offset of the <b>IDL_VPTR</b> field (computed with the <b>IDL_KW_OFFSETOF()</b> macro) in the user defined <b>KW_RESULT</b> struct into which the actual keyword argument is copied. In this case, you must do all error checking and type conversion yourself, just like with two cases are much easier to use, and are suitable for the vast majority of keywords.</p>
        <p>&#160;</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>