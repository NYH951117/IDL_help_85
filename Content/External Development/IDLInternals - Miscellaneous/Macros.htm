<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Additional Topics|External Development Guide|IDLInternals - Miscellaneous">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Macros</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../OtherTopics.htm">Additional Topics</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../EDG.htm">External Development Guide</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="InternalsMisc.htm">IDLInternals - Miscellaneous</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Macros</span>
        </div>
        <h1><a name="kanchor5509"></a>Macros</h1>
        <p>The macros defined in <code>idl_export.h</code> handle recurring small jobs. Those macros not discussed elsewhere in this book are covered here.</p>
        <h2 class="API">IDL_ABS(x)</h2>
        <p><b>IDL_ABS()</b> accepts a single argument of any numeric C type, and returns its absolute value. <b>IDL_ABS()</b> evaluates its argument more than once, so be careful to avoid unwanted side effects, and for efficiency do not call it with a complex expression.</p>
        <h2 class="API">IDL_CARRAY_ELTS(arr)</h2>
        <p>This macro encapsulates a common C language idiom for determining the number of elements in a statically defined array without requiring the programmer to provide a constant or otherwise hardwire the length. It’s use improves the robustness of code that uses it by automatically adapting to any change in the definition of the array without requiring additional programmer effort. This macro corresponds directly to the C expression:</p>
        <p class="Code">sizeof(arr)/sizeof(arr[0])</p>
        <p>The C compiler evaluates this expression at compile time, so there is no additional runtime cost for using this macro instead of a hardwired constant.</p>
        <h2 class="API">IDL_CHAR(ptr)</h2>
        <p><b>IDL_CHAR()</b> casts its argument to be a pointer to char. It is used to convert an existing pointer into a generic pointer to a memory location.</p>
        <h2 class="API"><a name="kanchor5510"></a>IDL_CHARA(addr)</h2>
        <p><b>IDL_CHARA()</b> takes the address of its argument and casts it to be a pointer to char. It is used to get a generic pointer to a memory location.</p>
        <h2 class="API"><a name="kanchor5511"></a>IDL_MIN(x,y) and IDL_MAX(x,y)</h2>
        <p>The arguments can be of any numeric C type as long as they are compatible with each other. <b>IDL_MIN()</b> and <b>IDL_MAX()</b> return the smaller and larger of their two arguments, respectively. These macros evaluate their arguments more than once, so be careful to avoid unwanted side effects, and for efficiency do not call them with a complex expression.</p>
        <h2 class="API"><a name="kanchor5512"></a>IDL_ROUND_UP(x, m)</h2>
        <p><b>IDL_ROUND_UP()</b> returns the value of x rounded up modulo <b>m</b>. <b>m</b> must be a power of 2. This macro is useful for extending data regions out to a specified alignment.</p>
        <h2 class="API"><a name="kanchor5513"></a>IDL_TRUE and IDL_FALSE</h2>
        <p>When performing logical expression evaluation the C programming language, in which IDL is written, treats zero (0) as False, and non-zero as True, and when returning the result of such an expression, uses 1 for True and 0 for False. <b>IDL_TRUE</b> is defined as the constant 1, and <b>IDL_FALSE</b> is defined as the constant 0. These constants are used internally by IDL.</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>