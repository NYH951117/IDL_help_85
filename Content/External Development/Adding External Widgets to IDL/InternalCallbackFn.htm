<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Additional Topics|External Development Guide|Adding External Widgets to IDL">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Internal Callback Functions</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../OtherTopics.htm">Additional Topics</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../EDG.htm">External Development Guide</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="ExternalWidgets.htm">Adding External Widgets to IDL</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Internal Callback Functions</span>
        </div>
        <h1><a name="kanchor5531"></a>Internal Callback Functions</h1>
        <p>Real widget toolkits (upon which IDL widgets are built) are event-driven. C language programs register interest in specific events by providing callback functions that are called when that event occurs. All but the most basic of widgets are capable of generating events.</p>
        <p>In order for IDL stub widgets to generate IDL events, you must use <a href="../Using CALL_EXTERNAL/CALL_EXTERNAL.htm">CALL_EXTERNAL</a> to invoke code that sets up real widget event callbacks for the events you are interested in. This setup can be done as part of creating the real widgets after the initial call to <a href="IDLExternalWidgets.htm">WIDGET_STUB</a>. These callbacks then call IDL_WidgetIssueStubEvent() to issue the IDL event.</p>
        <p>Your C-language widget toolkit callback functions should be patterned after the following template. Note that the arguments and return type will depend on the widget toolkit used, and so cannot be shown here:</p>
        <p class="Code">stub_widget_call()</p>
        <p class="Code">{</p>
        <p class="Code_Indented">char *idl_widget; </p>
        <p class="Code_Indented">IDL_WidgetStubLock(TRUE);</p>
        <p class="Code_Indented">&#160;&#160;&#160;/* Get the IDL user-level identifier for this widget */</p>
        <p class="Code_Indented">&#160;&#160;&#160;if (idl_widget = IDL_WidgetStubLookup(id)) {</p>
        <p class="Code_Indented">&#160;&#160;&#160;&#160;&#160;&#160;/* Do whatever work is required */</p>
        <p class="Code_Indented">&#160;&#160;&#160;&#160;&#160;&#160;...</p>
        <p class="Code_Indented">&#160;&#160;&#160;&#160;&#160;&#160;/* Optionally, issue an IDL event */ </p>
        <p class="Code_Indented">&#160;&#160;&#160;&#160;&#160;&#160;IDL_WidgetIssueStubEvent(idl_widget, value)</p>
        <p class="Code_Indented">} </p>
        <p class="Code_Indented">IDL_WidgetStubLock(FALSE);</p>
        <p class="Code">}</p>
        <h2 class="API">Commentary on the Example Shown Above</h2>
        <p>Note that <b>IDL_WidgetStubLock()</b> is used to protect the critical section where widgets are being manipulated.</p>
        <p>Somehow, the callback must be able to find the user-level integer returned by <b>WIDGET_STUB</b> when the stub widget was created in IDL. Usually, this is done in one of two ways:</p>
        <ul>
            <li value="1">When registering the callback, it is sometimes possible to specify a value that will be passed to the callback without interpretation. For example, the X windows <b>XtAddCallback()</b> function takes an argument named <b>client_data</b>. This value is passed to the callback and can be used to supply the user-level identifier.</li>
            <li value="2">Some widget toolkits have a set of attributes that they carry along with each widget. Under the X windows Xt toolkit, these attributes are called resources. Xt widgets usually have a resource capable of holding a single integer or memory address. This resource can be used to supply the user level identifier.</li>
        </ul>
        <p><b>IDL_WidgetStubLookup()</b> is used to translate the user level widget identifier into a memory pointer. If this function returns NULL, no further event processing is done since it would be a fatal error to issue an IDL event for a non-existent widget.</p>
        <p>The event is issued via <b>IDL_WidgetIssueStubEvent()</b>. This step is not required. Many of the IDL widget types process real widget events via callbacks that do not always result in an IDL widget event being sent.</p>
        <div class="mp_footer">Â© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>