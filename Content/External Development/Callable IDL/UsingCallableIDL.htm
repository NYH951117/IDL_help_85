<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Additional Topics|External Development Guide|Callable IDL">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Using Callable IDL</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../OtherTopics.htm">Additional Topics</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../EDG.htm">External Development Guide</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="CallableIDL.htm">Callable IDL</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Using Callable IDL</span>
        </div>
        <h1><a name="kanchor5523"></a>Using Callable IDL</h1>
        <p>The process of using Callable IDL has three stages: initialization, IDL use, and cleanup. </p>
        <p>Between the initialization and the cleanup, your program contains a complete active IDL session just as if a user were typing commands at an <code>IDL&gt; </code>prompt. In addition to the usual IDL abilities, you can import data from your program and cause IDL to see it as an IDL variable. IDL can use such data in computations as if it had created the variable itself. In addition, you can obtain pointers to data currently held by IDL variables and access the results of IDL computations from your program.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The functions documented in this chapter should only be used when calling IDL from other programs—their use in code called by IDL via CALL_EXTERNAL or a system routine (<a href="../Adding System Routines/LinkImage.htm">LINKIMAGE</a>, <a href="../Adding System Routines/DLM.htm">Dynamically Loadable Module</a>) is not supported and is certain to corrupt and/or crash the IDL process.</p>
        <p>Before calling IDL to execute instructions, you must initialize it. This is done by calling<b> <![CDATA[ ]]></b><a href="Initialization.htm" style="font-weight: bold;">IDL_Initialize()</a>. This is a one-time operation, and must occur before calling any other IDL function.  Once IDL is initialized, you can:</p>
        <ol>
            <li value="1">Send IDL commands to IDL for execution. Commands are sent as strings, using the same syntax as interactive IDL. Note that there is not a separate C language function for every IDL command—any valid IDL command can be executed as IDL statements. This approach allows us to keep the callable IDL API small and simple while allowing full access to IDL’s abilities. This is explained in <a href="ExecuteIDL.htm">Executing IDL Statements</a>.</li>
            <li value="2">  Call any of the several routines that interact with IDL through other means to perform operations such as:<ul><li value="1">Importing data into IDL. (See <a href="../IDLInternals - Variables/CreateArrayFromExistingData.htm">Creating an Array from Existing Data</a>.)</li><li value="2">Accessing data within IDL. (See <a href="../IDLInternals - Variables/LookUpVariablesCurrentScope.htm">Looking Up Variables in Current Scope</a>".)</li><li value="3">Changing items in the process, such as signal handling or timers. (See “<a href="../IDLInternals - UNIX Signals/UNIXSignalMasks.htm">IDL Internals: UNIX Signals</a>, or <a href="../IDLInternals - Timers/IDLandTimers.htm">IDL Internals: Timers</a>".)</li><li value="4">Redirecting IDL output to your own function for processing. See “<a href="DivertingIDLOutput.htm">Diverting IDL Output</a>.</li></ul></li>
        </ol>
        <p>&#160;</p>
        <p>The above list is not complete, but is representative of the possibilities afforded by Callable IDL.</p>
        <h2 class="API">Cleanup</h2>
        <p>After all IDL use is complete, but before the program exits, you must call <b>IDL_Cleanup()</b> to allow IDL to shutdown gracefully and clean up after itself. Once this has been done, you are not allowed to call IDL again from this process. See <a href="CleanupCallable.htm">Cleanup</a> for more information.</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>