<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: T">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>TRIANGULATE </title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="T_list.htm">Routines: T</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">TRIANGULATE</span>
        </div>
        <h1 class="Routine"><a name="T_809226861_679530"></a><a name="kanchor2567"></a><a name="T_809226861_55512"></a>TRIANGULATE </h1>
        <p><a name="kanchor2568"></a><a name="kanchor2569"></a>The TRIANGULATE procedure constructs a Delaunay triangulation of a planar set of points. Delaunay triangulations are very useful for the interpolation, analysis, and visual display of irregularly-gridded data. In most applications, after the irregularly gridded data points have been triangulated, the function TRIGRID is invoked to interpolate surface values to a regular grid. TRIANGULATE uses double precision for all computations.<a name="kanchor2570"></a></p>
        <p>Since Delaunay triangulations have the property that the circumcircle of any triangle in the triangulation contains no other vertices in its interior, interpolated values are only computed from nearby points.</p>
        <p>TRIANGULATE can, optionally, return the adjacency list that describes, for each node, the adjacent nodes in the Delaunay triangulation. With this list, the Voronoi polygon (the polygon described by the set of points which are closer to that node than to any other node) can be computed for each node. This polygon contains the area influenced by its associated node. Tiling of the region in this manner is also called Dirichlet, Wigner-Seithz, or Thiessen tessellation.<a name="kanchor2571"></a><a name="kanchor2572"></a></p>
        <p>The grid returned by the TRIGRID function can be input to various routines such as SURFACE, TV, and CONTOUR. See the description of TRIGRID for an example.</p>
        <p><a name="kanchor2573"></a><a name="kanchor2574"></a>TRIANGULATE and TRIGRID can also be used to perform gridding and interpolation over the surface of a sphere. The interpolation is <i>C</i><sub>1</sub> continuous, meaning that the result is continuous over both the function value and its first derivative. This feature is ideal for interpolating an irregularly-sampled dataset over part or all of the surface of the earth (or other (spherical) celestial bodies). Extrapolation outside the convex hull of sample points is also supported. To perform spherical gridding, you must include the FVALUE and SPHERE keywords described below. </p>
        <h2 class="API"><a name="T_809226861_795978"></a><a name="T_809226861_795978_PageTOC_TRIANGULATE_"></a>Examples</h2>
        <p>For some examples using the TRIANGULATE routine, see the <a href="TRIGRID.htm#T_809226861_1095045">TRIGRID</a> function.</p>
        <h2 class="API"><a name="T_809226861_679535"></a><a name="T_809226861_679535_PageTOC_TRIANGULATE_"></a>Syntax</h2>
        <p class="Syntax">TRIANGULATE, <i>X</i>, <i>Y</i>, <i>Triangles</i> [,&#160;<i>B</i>] [,&#160;<a href="#T_809226861_679547" class="selected">CONNECTIVITY</a>=<i>variable</i>] [,&#160;<a href="#T_809226861_126681" class="selected">SPHERE</a>=<i>variable</i>&#160;[,&#160;/<a href="#T_809226861_126686" class="selected">DEGREES</a>]] [,&#160;<a href="#T_809226861_126695" class="selected">FVALUE</a>=<i>variable</i>] [,&#160;<a href="#T_809226861_679555" class="selected">REPEATS</a>=<i>variable</i>] [,&#160;<a href="#T_809226861_1145212" class="selected">TOLERANCE</a>=<i>value</i>]</p>
        <h2 class="API"><a name="T_809226861_679537"></a><a name="T_809226861_679537_PageTOC_TRIANGULATE_"></a>Arguments</h2>
        <h3 class="Argument">X</h3>
        <p>An array that contains the X coordinates of the points to be triangulated.</p>
        <h3 class="Argument">Y</h3>
        <p>An array that contains the Y coordinates of the points to be triangulated. Parameters <i>X</i> and <i>Y</i> must have the same number of elements.</p>
        <h3 class="Argument">Triangles</h3>
        <p>A named variable that, on exit, contains the list of triangles in the Delaunay triangulation of the points specified by the X and Y arguments. Triangles is a longword array dimensioned (3, <i>number of triangles</i>), where <code>Triangles[0,&#160;i]</code>, <code>Triangles[1,&#160;i]</code>, and <code>Triangles[2,&#160;i] </code>contain the indices of the vertices of the <i>i</i>-th triangle (i.e., <code>X[Tr[*,&#160;i]]</code> and <code>Y[Triangles[*,&#160;i]]</code> are the X and Y coordinates of the vertices of the <i>i-</i>th triangle).</p>
        <h3 class="Argument">B</h3>
        <p>An optional, named variable that, upon return, contains a list of the indices of the boundary points in counterclockwise order.</p>
        <h2 class="API"><a name="T_809226861_679546"></a><a name="T_809226861_679546_PageTOC_TRIANGULATE_"></a>Keywords</h2>
        <h3 class="Keyword"><a name="T_809226861_679547"></a><a name="T_809226861_679547_Keywords_TRIANGULATE__"></a>CONNECTIVITY</h3>
        <p>Set this keyword to a named variable in which the adjacency list for each of the <i>N</i> nodes (xy point) is returned. The list has the following form:</p>
        <p>Each element <i>i, </i>0 ≤<i>i </i>&lt; <i>N</i>, contains the starting index of the connectivity list for node <i>i</i> within the list array. To obtain the adjacency list for node <i>i</i>, extract the list elements from LIST[<i>i</i>] to LIST[<i>i</i>+1]-1.</p>
        <p>The adjacency list is ordered in the counter-clockwise direction. The first item on the list of boundary nodes is the subscript of the node itself. For interior nodes, the list contains the subscripts of the adjacent nodes in counter-clockwise order.</p>
        <p>For example, the call:</p>
        <p class="Code">TRIANGULATE, X, Y, CONNECTIVITY = LIST</p>
        <p>returns the adjacency list in the variable LIST. </p>
        <p>The subscripts of the nodes adjacent to X[<i>i</i>] and Y[<i>i</i>] are contained in the array:</p>
        <p class="Code">LIST[LIST[i] : LIST[i+1]-1]</p>
        <h3 class="Keyword"><a name="T_809226861_126686"></a><a name="T_809226861_126686_Keywords_TRIANGULATE__"></a>DEGREES</h3>
        <p>Set this keyword to indicate that the <i>X</i> and <i>Y</i> arguments contain longitude and latitude coordinates specified in degrees. This keyword is only effective if the SPHERE keyword is specified. If DEGREES is not set, <i>X</i> and <i>Y</i> are assumed to be specified in radians when a spherical triangulation is performed.</p>
        <h3 class="Keyword"><a name="T_809226861_126695"></a><a name="T_809226861_126695_Keywords_TRIANGULATE__"></a>FVALUE</h3>
        <p>Set this keyword to a named variable that contains sample values for each longitude/latitude point in a spherical triangulation. On output, the elements of FVALUE are rearranged to correspond to the new ordering of <i>X</i> and <i>Y</i> (as described in the SPHERE keyword, below). This reordered array can be passed to TRIGRID to complete the interpolation.</p>
        <h3 class="Keyword"><a name="T_809226861_679555"></a><a name="T_809226861_679555_Keywords_TRIANGULATE__"></a>REPEATS</h3>
        <p>Set this keyword to a named variable to return a (2, <i>n</i>) list of the indices of duplicated points. That is, for each <i>i</i>,</p>
        <p class="Code">X[REPEATS[0,<i>i</i>]] = X[REPEATS[1,<i>i</i>]]</p>
        <p>and</p>
        <p class="Code">Y[REPEATS[0,<i>i</i>]] = Y[REPEATS[1,<i>i</i>]]</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Use the <a href="../G/GRID_INPUT.htm#G_845992557_877021">GRID_INPUT </a>procedure to handle repeated points (duplicate locations).</p>
        <h3 class="Keyword"><a name="T_809226861_126681"></a><a name="T_809226861_126681_Keywords_TRIANGULATE__"></a>SPHERE</h3>
        <p>Set this keyword to a named variable in which the results from a spherical triangulation are returned. This result is a structure that can be passed to TRIGRID to perform spherical gridding. The structure contains the 3D Cartesian locations sample points and the adjacency list that describes the triangulation.</p>
        <p>When spherical triangulation is performed, <i>X</i> and <i>Y</i> are interpreted as longitude and latitude, in either degrees or radians (see the <a href="#T_809226861_126686" class="selected">DEGREES</a> keyword, above). The <i>X</i> and <i>Y</i> parameters are converted to double precision and are rearranged to match the spherical triangulation.</p>
        <h3 class="Keyword"><a name="T_809226861_1145212"></a><a name="T_809226861_31281"></a>TOLERANCE</h3>
        <p>Set this keyword to the tolerance to be used when determining whether points are colinear. If <i>X</i> and <i>Y</i> are double-precision values, the default is 10<sup>-12</sup> * <i>Max(X,Y)</i>; otherwise the default is 10<sup>-6</sup> * <i>Max(X,Y)</i>, where <i>Max(X,Y)</i> is the maximum absolute value of the <i>X</i> and <i>Y</i> arrays. If three points are colinear within the given tolerance, a triangle will not be constructed for those points. The default is zero, which assumes that none of the points are colinear.</p>
        <p class="Tip" data-mc-autonum="&lt;b&gt;Tip: &lt;/b&gt;"><span class="autonumber"><span><b>Tip: </b></span></span>TRIANGULATE is typically used for irregular grids, where none of the points are colinear. For regular or semi-regular grids, you can use the TOLERANCE value to avoid creating artificial triangles along the boundary, and to triangulate the appropriate points within the grid. In this case, an appropriate tolerance value might be 10<sup>-6</sup> * <i>Max(X,Y)</i>, where <i>Max(X,Y)</i> is the maximum absolute value of the <i>X</i> and <i>Y</i> arrays.</p>
        <h2 class="API"><a name="T_809226861_795980"></a><a name="T_809226861_795980_PageTOC_TRIANGULATE_"></a>Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>Pre-4.0</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API">Resources and References</h2>
        <ul>
            <li value="1">The spherical gridding technique used in IDL is based on the paper “Interpolation of Data on the Surface of a Sphere”, R. Renka, <i>Oak Ridge National Laboratory Report ORNL/CSD-108</i>, 1982.</li>
            <li value="2">The TRIANGULATE procedure uses the divide-and-conquer method described in “Two Algorithms for Constructing a Delaunay Triangulation,” D.T. Lee and B.J. Schachter, <i>Int. J. of Computer and Information Sci.</i>, Vol. 9, 1980, pp. 219-242.</li>
        </ul>
        <h2 class="API"><a name="T_809226861_1086514"></a><a name="T_809226861_1086514_PageTOC_TRIANGULATE_"></a>See Also</h2>
        <p><a href="../S/SPH_SCAT.htm#S_820040301_126787">SPH_SCAT</a>, <a href="TRIGRID.htm#T_809226861_1095045">TRIGRID</a></p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>