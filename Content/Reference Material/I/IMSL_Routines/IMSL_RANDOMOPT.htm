<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>IMSL_RANDOMOPT</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <h1><a name="IMSL_RANDOMOPT"></a>IMSL_RANDOMOPT</h1>
        <p>The IMSL_RANDOMOPT procedure uses keywords to set or retrieve the random number seed or to select the form of the IMSL random number generator.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This routine requires an IDL Analyst license. For more information, contact your <span class="DocumentTitleCompanyName">Exelis VIS</span> sales or technical support representative.</p>
        <p>The IMSL_RANDOMOPT procedure is designed to allow a user to set certain key elements of the random-number generator functions.</p>
        <p>The uniform pseudorandom-number generators use a multiplicative congruential method, or a generalized feedback shift register. The choice of generator is determined by keyword GEN_OPTION. The chapter introduction and the description of IMSL_RANDOM may provide some guidance in the choice of the form of the generator. If no selection is made explicitly, the generators use the multiplier 16807 without shuffling. This form of the generator has been in use for some time (Lewis et al. 1969).</p>
        <p>Keyword SET is used to initialize the seed used in the IDL Advanced Math and Stats random-number generators. See the chapter introduction for details of the various generator options. The seed can be reinitialized to a clock-dependent value by calling IMSL_RANDOMOPT with SET set to zero.</p>
        <p>A common use of keyword Set is in conjunction with the keyword Get to restart a simulation. Keyword Get retrieves the current value of the “seed” used in the random-number generators.</p>
        <p>If keyword SUBSTREAM_SEED is set, IMSL_RANDOMOP determines another seed, such that if one of the IMSL multiplicative congruential generators, using no shuffling, went through 100,000 generations starting with SUBSTREAM_SEED, the next number in that sequence would be the first number in the sequence that begins with the returned seed.</p>
        <p>Note that SUBSTREAM_SEED works only when a multiplicative congruential generator without shuffling is used. This means that either the routine IMSL_RANDOMOPT has not been called at all or that it has been last called with Gen_Option having a value of 1, 3, or 5.</p>
        <p>For many IMSL generators for nonuniform distributions that do not use the inverse CDF method, the distance between sequences generated starting with SUBSTREAM_SEED and starting with returned seed may be less than 100,000. This is because nonuniform generators that use other techniques may require more than one uniform deviate for each output deviate.</p>
        <p>The reason that one may want two seeds that generate sequences a known distance apart is for blocking Monte Carlo experiments or for running parallel streams.</p>
        <h2 class="API">Examples</h2>
        <p>For additional information on using IMSL_RANDOMOPT, see <a href="#Additional_Examples" class="selected">Additional Examples</a>.</p>
        <h3>Example 1</h3>
        <p>This example illustrates the statements required to restart a simulation using the keywords GET and SET. The example shows that restarting the sequence of random numbers at the value of the last seed generated is the same as generating the random numbers all at once.</p>
        <p class="Code">seed = 123457</p>
        <p class="Code">nrandom = 5</p>
        <p class="Code">IMSL_RANDOMOPT, Set = seed</p>
        <p class="Code">; Set the seed using the keyword Set.</p>
        <p class="Code">r1 = IMSL_RANDOM(nrandom)</p>
        <p class="Code">PM, r1, Title = 'First Group of Random Numbers'</p>
        <p class="Code">&#160;</p>
        <p class="Code">First Group of Random Numbers</p>
        <p class="Code">0.966220</p>
        <p class="Code">0.260711</p>
        <p class="Code">0.766262</p>
        <p class="Code">0.569337</p>
        <p class="Code">0.844829</p>
        <p class="Code">&#160;</p>
        <p class="Code">IMSL_RANDOMOPT, Get = seed</p>
        <p class="Code">; Get the current value of the seed using the keyword Get.</p>
        <p class="Code">IMSL_RANDOMOPT, Set = seed</p>
        <p class="Code">; Set the seed.</p>
        <p class="Code">r2 = IMSL_RANDOM(nrandom)</p>
        <p class="Code">PM, r2, Title = 'Second Group of Random Numbers'</p>
        <p class="Code">&#160;</p>
        <p class="Code">Second Group of Random Numbers</p>
        <p class="Code">0.0442665</p>
        <p class="Code">0.987184</p>
        <p class="Code">0.601350</p>
        <p class="Code">0.896375</p>
        <p class="Code">0.380854</p>
        <p class="Code">&#160;</p>
        <p class="Code">IMSL_RANDOMOPT, Set = 123457</p>
        <p class="Code">; Reset the seed to the original seed.</p>
        <p class="Code">r3 = IMSL_RANDOM(2 * nrandom)</p>
        <p class="Code">PM, r3, Title = 'Both Groups of Random Numbers'</p>
        <p class="Code">&#160;</p>
        <p class="Code">Both Groups of Random Numbers</p>
        <p class="Code">0.966220</p>
        <p class="Code">0.260711</p>
        <p class="Code">0.766262</p>
        <p class="Code">0.569337</p>
        <p class="Code">0.844829</p>
        <p class="Code">0.0442665</p>
        <p class="Code">0.987184</p>
        <p class="Code">0.601350</p>
        <p class="Code">0.896375</p>
        <p class="Code">0.380854</p>
        <h2 class="API">Syntax</h2>
        <p>IMSL_RANDOMOPT ([, CURRENT_OPTION=<i>variable</i>] [, GEN_OPTION=<i>value</i>] [, GET_SEED=<i>variable</i>] [, SET_SEED=<i>value</i>] [, SUBSTREAM_SEED=<i>value</i>])</p>
        <h2 class="API">Return Value</h2>
        <p>None</p>
        <h2 class="API">Arguments</h2>
        <p>The IMSL_RANDOMOPT procedure does not have any positional Input Parameters.</p>
        <p>Keywords are required for specific actions to be taken.</p>
        <h2 class="API">Keywords</h2>
        <h3 class="Keyword">CURRENT_OPTION</h3>
        <p>Named variable into which the value of the current random-number generator option is stored.</p>
        <h3 class="Keyword">GEN_OPTION</h3>
        <p>Indicator of the generator. The random-number generator is a multiplicative, congruential generator with modulus 231 – 1. Keyword GEN_OPTION is used to choose the multiplier and to determine whether or not shuffling is done.</p>
        <ul>
            <li value="1">1—multiplier 16807 used (default)</li>
            <li value="2">2—multiplier 16807 used with shuffling</li>
            <li value="3">3—multiplier 397204094 used</li>
            <li value="4">4—multiplier 397204094 used with shuffling</li>
            <li value="5">5—multiplier 950706376 used</li>
            <li value="6">6—multiplier 950706376 used with shuffling</li>
            <li value="7">7—GFSR, with the recursion Xt = Xt-1563 ⊕ Xt-96 is used</li>
        </ul>
        <h3 class="Keyword">GET_SEED</h3>
        <p>Named variable into which the value of the current random-number seed is stored.</p>
        <h3 class="Keyword">SET_SEED</h3>
        <p>Seed of the random-number generator. The seed must be in the range (0, 2147483646). If the seed is zero, a value is computed using the system clock; hence, the results of programs using the IDL Advanced Math and Stats random-number generators are different at various times.</p>
        <h3 class="Keyword">SUBSTREAM_SEED</h3>
        <p>If present and nonzero, then a seed for the congruential generators that do not do shuffling that will generate random numbers beginning 100,000 numbers farther along will be returned in keyword Get. If keyword SUBSTREAM_SEED is set, then keyword GET is required.</p>
        <h2 class="API"><a name="Additional_Examples"></a>Additional Examples</h2>
        <h3>Example 2</h3>
        <p>In this example, IMSL_RANDOMOPT is used to determine seeds for 4 separate streams, each 200,000 numbers apart, for a multiplicative congruential generator without shuffling. (Since IMSL_RANDOMOPT is not invoked to select a generator, the multiplier is 16807.) Since the streams are 200,000 numbers apart, each seed requires two invocations of IMSL_RANDOMOPT with keyword SUBSTREAM_SEED. All of the streams are non-overlapping, since the period of the underlying generator is 2,147,483,646.</p>
        <p class="Code">IMSL_RANDOMOPT, GEN_OPTION = 1</p>
        <p class="Code">is1 = 123457;</p>
        <p class="Code">IMSL_RANDOMOPT, GET = itmp, SUBSTREAM_SEED = is1</p>
        <p class="Code">IMSL_RANDOMOPT, GET = is2, SUBSTREAM_SEED = itmp</p>
        <p class="Code">IMSL_RANDOMOPT, GET = itmp, SUBSTREAM_SEED = is2</p>
        <p class="Code">IMSL_RANDOMOPT, GET = is3, SUBSTREAM_SEED = itmp</p>
        <p class="Code">IMSL_RANDOMOPT, GET = itmp, SUBSTREAM_SEED = is3</p>
        <p class="Code">IMSL_RANDOMOPT, GET = is4, SUBSTREAM_SEED = itmp</p>
        <p class="Code">PRINT, is1, is2, is3, is4</p>
        <p class="Code">&#160;</p>
        <p class="Code">123457 2016130173 85016329 979156171</p>
        <h2 class="API">Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col style="width: 40px;" />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>6.4</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">&#160;</td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">&#160;</td>
                </tr>
            </tbody>
        </table>
        <h2 class="API">See Also</h2>
        <p>&#160;</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>