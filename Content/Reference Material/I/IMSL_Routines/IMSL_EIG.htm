<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>IMSL_EIG</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <h1>IMSL_EIG</h1>
        <p>The IMSL_EIG function computes the eigenexpansion of a real or complex matrix <i>A</i>. If the matrix is known to be symmetric or Hermitian, a keyword can be used to trigger more efficient algorithms.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This routine requires an IDL Analyst license. For more information, contact your <span class="DocumentTitleCompanyName">Exelis VIS</span> sales or technical support representative.</p>
        <p>If A is a real, general matrix, the IMSL_EIG function computes the eigenvalues of A by a two-phase process. The matrix is reduced to upper Hessenberg form by elementary orthogonal or Gauss similarity transformations, then the eigenvalues are computed using a QR or combined LR-QR algorithm (Golub and Van Loan 1989, pp. 373–382, and Watkins and Elsner 1990). The combined LR-QR algorithm is based on an implementation by Jeff Haag and David Watkins. Eigenvectors are then calculated as required. When eigenvectors are computed, the QR algorithm is used to compute the eigenexpansion. When only eigenvalues are required, the combined LR-QR algorithm is used.</p>
        <p>If A is a complex, general matrix, the IMSL_EIG function computes the eigenvalues of A by a two-phase process. The matrix is reduced to upper Hessenberg form by elementary Gauss transformations, then the eigenvalues are computed using an explicitly shifted LR algorithm. Eigenvectors are calculated during the iterations for the eigenvalues (Martin and Wilkinson 1971).</p>
        <p>If A is a real, symmetric matrix and the keyword SYMMETRIC is used, the IMSL_EIG function computes the eigenvalues of A by a two-phase process. The matrix is reduced to tridiagonal form by elementary orthogonal similarity transformations, then the eigenvalues are computed using a rational QR or bisection algorithm. Eigenvectors are calculated as required (see Parlett 1980, pp. 169–173).</p>
        <p>If A is a complex, Hermitian matrix and the keyword SYMMETRIC is used, the IMSL_EIG function computes the eigenvalues of A by a two-phase process. The matrix is reduced to tridiagonal form by elementary orthogonal similarity transformations, then the eigenvalues are computed using a rational QR or bisection algorithm. Eigenvectors are calculated as required.</p>
        <p>If keyword SYMMETRIC is used, it is possible to force the IMSL_EIG function to return the eigenvalues and, optionally, eigenvectors that lie in a specified interval. The interval is defined using keywords LOWER_LIMIT and UPPER_LIMIT. The NUMBER keyword is provided to return the number of elements of the returned array that contain valid eigenvalues. The first NUMBER elements of the returned array contain the computed eigenvalues, and all remaining elements contain NaN (Not a Number).</p>
        <h2 class="API">Examples</h2>
        <p>For additional information on using IMSL_EIG, see Additional Examples.</p>
        <h3>Example 1</h3>
        <p>This example computes the eigenvalues of a real 3-by-3 matrix.</p>
        <p class="Code">RM, a, 3, 3</p>
        <p class="Code">; Define the matrix.</p>
        <p class="Code">row 0: 8 -1 -5</p>
        <p class="Code">row 1: -4 4 -2</p>
        <p class="Code">row 2: 18 -5 -7</p>
        <p class="Code">eigval = IMSL_EIG(a)</p>
        <p class="Code">; Call IMSL_EIG to compute the eigenvalues.</p>
        <p class="Code">PM, eigval, Title = 'Eigenvalues of A'</p>
        <p class="Code">; Output the results.</p>
        <p class="Code">Eigenvalues of A</p>
        <p class="Code_Indented">( 2.00000, 4.00001)</p>
        <p class="Code_Indented">( 2.00000, -4.00001)</p>
        <p class="Code_Indented">( 1.00000, 0.00000)</p>
        <p>&#160;</p>
        <h2 class="API">Syntax</h2>
        <p><i>Result</i> = IMSL_EIG(a [, /<a href="#DOUBLE" class="selected">DOUBLE</a>] [, /<a href="#LOWER_LI" class="selected">LOWER_LIMIT</a>] [, <a href="#NUMBER" class="selected">NUMBER</a>=<u>value</u>] [, <a href="#SYMMETRI" class="selected">SYMMETRIC</a>=<i>value</i>] [, /<a href="#UPPER_LI" class="selected">UPPER_LIMIT]</a> [, <a href="#VECTORS" class="selected">VECTORS</a>=<i>variable</i>])</p>
        <h2 class="API">Return Value</h2>
        <p>A one-dimensional matrix containing the complex eigenvalues of the matrix.</p>
        <h2 class="API">Arguments</h2>
        <h3 class="Argument">a</h3>
        <p>Two-dimensional matrix containing the data.</p>
        <h2 class="API">Keywords</h2>
        <h3 class="Keyword"><a name="DOUBLE"></a>DOUBLE</h3>
        <p>If present and nonzero, double precision is used.</p>
        <h3 class="Keyword"><a name="LOWER_LI"></a>LOWER_LIMIT</h3>
        <p>Forces the IMSL_EIG function to return the eigenvalues and, optionally, eigenvectors that lie in the interval within the lower limit LOWER_LIMIT and upper limit UPPER_LIMIT. If LOWER_LIMIT is specified, the keywords UPPER_LIMIT and SYMMETRIC must also be specified. Default: (LOWER_LIMIT, UPPER_LIMIT) = (<i>-infinity, +infinity</i>)</p>
        <h3 class="Keyword"><a name="NUMBER"></a>NUMBER</h3>
        <p>Number of eigenvalues and eigenvectors in the range (LOWER_LIMIT, UPPER_LIMIT). This keyword is only available if also using the keyword SYMMETRIC.</p>
        <h3 class="Keyword"><a name="SYMMETRI"></a>SYMMETRIC</h3>
        <p>If present and nonzero, <i>a</i> is assumed to be symmetric in the real case and Hermitian in the complex case. Using SYMMETRIC triggers the use of a more appropriate algorithm for symmetric and Hermitian matrices.</p>
        <h3 class="Keyword"><a name="UPPER_LI"></a>UPPER_LIMIT</h3>
        <p>Forces the IMSL_EIG function to return the eigenvalues and, optionally, eigenvectors that lie in the interval within the lower limit LOWER_LIMIT and upper limit UPPER_LIMIT. If UPPER_LIMIT is specified, SYMMETRIC and LOWER_LIMIT must also be specified. Default: (LOWER_LIMIT, UPPER_LIMIT) = (<i>-infinity, +infinity</i>)</p>
        <h3 class="Keyword"><a name="VECTORS"></a>VECTORS</h3>
        <p>The named variable into which the two-dimensional array containing the eigenvectors of the matrix <i>a</i> is stored.</p>
        <h2 class="API">Additional Examples</h2>
        <h3>Example 2</h3>
        <p>This example is a variation of the first example. It computes the eigenvectors as well as the eigenvalues.</p>
        <p class="Code">RM, a, 3, 3</p>
        <p class="Code">; Define the 3-by-3 matrix.</p>
        <p class="Code">row 0: 8 -1 -5</p>
        <p class="Code">row 1: -4 4 -2</p>
        <p class="Code">row 2: 18 -5 -7</p>
        <p class="Code">eigval = IMSL_EIG(a, Vectors = eigvec)</p>
        <p class="Code">; Call IMSL_EIG using keyword Vectors to specify named</p>
        <p class="Code">; variable into which the eigenvectors are stored.</p>
        <p class="Code">PM, eigval, Title = 'Eigenvalues of A'</p>
        <p class="Code">; Output the eigenvalues.</p>
        <p class="Code">Eigenvalues of A</p>
        <p class="Code_Indented">( 2.00000, 4.00000)</p>
        <p class="Code_Indented">( 2.00000, -4.00000)</p>
        <p class="Code_Indented">( 1.00001, 0.00000)</p>
        <p class="Code">PM, eigvec, Title = 'Eigenvectors of A'</p>
        <p class="Code">; Output the eigenvectors.</p>
        <p class="Code">Eigenvectors of A</p>
        <p class="Code_Indented">( 0.316228, 0.316228)( 0.316228, -0.316228)</p>
        <p class="Code_Indented">( 0.408248, 0.00000)</p>
        <p class="Code_Indented">( 2.08616e-07, 0.632455)( 2.08616e-07, -0.632455)</p>
        <p class="Code_Indented">( 0.816497, 0.00000)</p>
        <p class="Code_Indented">( 0.632456, 0.00000)( 0.632456, 0.00000)</p>
        <p class="Code_Indented">( 0.408247, 0.00000)</p>
        <h3>Example 3</h3>
        <p>This example computes Eigenvalues of a complex matrix.</p>
        <p class="Code">RM, a, 4, 4, /Complex</p>
        <p class="Code">; Define a complex matrix.</p>
        <p class="Code">row 0: (5, 9) (5, 5) (-6, -6) (-7, -7)</p>
        <p class="Code">row 1: (3, 3) (6, 10) (-5, -5) (-6, -6)</p>
        <p class="Code">row 2: (2, 2) (3, 3) (-1, 3) (-5, -5)</p>
        <p class="Code">row 3: (1, 1) (2, 2) (-3, -3) ( 0, 4)</p>
        <p class="Code">eigval = IMSL_EIG(a)</p>
        <p class="Code">; Call IMSL_EIG to compute the eigenvalues.</p>
        <p class="Code">PM, eigval, Title = 'Eigenvalues of A'</p>
        <p class="Code">; Output the results.</p>
        <p class="Code">Eigenvalues of A</p>
        <p class="Code_Indented">( 4.00000, 8.00000)</p>
        <p class="Code_Indented">( 3.00000, 7.00000)</p>
        <p class="Code_Indented">( 2.00000, 6.00000)</p>
        <p class="Code_Indented">( 1.00000, 5.00000)</p>
        <h2 class="API">Errors</h2>
        <h3>Warnings</h3>
        <p><code>MATH_SLOW_CONVERGENCE_GEN</code> — Iteration for an eigenvalue did not converge after # iterations.</p>
        <h2 class="API">Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col style="width: 40px;" />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>6.4</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">&#160;</td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">&#160;</td>
                </tr>
            </tbody>
        </table>
        <p>&#160;</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>