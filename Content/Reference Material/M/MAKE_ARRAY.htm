<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: M">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>MAKE_ARRAY </title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="M_list.htm">Routines: M</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">MAKE_ARRAY</span>
        </div>
        <h1 class="Routine"><a name="M_824365677_887420"></a><a name="kanchor1754"></a><a name="M_824365677_80497"></a>MAKE_ARRAY </h1>
        <p>The MAKE_ARRAY function enables you to dynamically create an array whose characteristics are not known until run time.</p>
        <h2 class="API">Examples</h2>
        <p>To create a 3-element by 4-element integer array with each element set to the value 5, enter:</p>
        <p class="Code">M = MAKE_ARRAY(3, 4, /INTEGER, VALUE = 5)</p>
        <h2 class="API">Syntax</h2>
        <p class="Syntax"><i>Result</i> = MAKE_ARRAY ( [<i>D</i><sub class="italic">1</sub>[, ...,<i> D</i><sub class="italic">8</sub>]], <a href="#DIMENSION" class="selected">DIMENSION</a>=<i>vector</i>, <a href="#INCREMENT" class="selected">INCREMENT</a>=<i>value</i>, /<a href="#INDEX" class="selected">INDEX</a>, /<a href="#NOZERO" class="selected">NOZERO</a>, <a href="#SIZE" class="selected">SIZE</a>=<i>vector</i>, <a href="#START" class="selected">START</a>=<i>value</i>, <a href="#TYPE" class="selected">TYPE</a>=<i>type_code</i>, <a href="#VALUE" class="selected">VALUE</a>=<i>value</i>, /<a href="#BOOLEAN" class="selected">BOOLEAN</a>, /<a href="#BYTE" class="selected">BYTE</a>, /<a href="#COMPLEX" class="selected">COMPLEX</a>, /<a href="#DCOMPLEX" class="selected">DCOMPLEX</a>, /<a href="#DOUBLE" class="selected">DOUBLE</a>, /<a href="#FLOAT" class="selected">FLOAT</a>, /<a href="#INTEGER" class="selected">INTEGER</a>, /<a href="#L64" class="selected">L64</a>, /<a href="#LONG" class="selected">LONG</a>, /<a href="#OBJ" class="selected">OBJ</a>, /<a href="#PTR" class="selected">PTR</a>, /<a href="#STRING" class="selected">STRING</a>,  /<a href="#UINT" class="selected">UINT</a>, /<a href="#UL64" class="selected">UL64</a>, /<a href="#ULONG" class="selected">ULONG</a> )</p>
        <h2 class="API">Return Value </h2>
        <p>Returns an array of the specified type, dimensions, and initialization.</p>
        <h2 class="API">Arguments</h2>
        <h3 class="Argument">D<sub class="italic">i</sub></h3>
        <p>Either an array or a series of scalar expressions specifying the dimensions of the result. If a single argument is specified, it can be either a scalar expression or an array of up to eight elements. If multiple arguments are specified, they must all be scalar expressions. Up to eight dimensions can be specified. If the dimension arguments are not integer values, IDL will convert them to integer values before creating the new array.</p>
        <p>The <i>D</i><sub class="italic">i </sub>arguments are optional if the dimensions of the result are specified using the DIMENSION keyword. Note that you should supply either the <i>D</i><sub class="italic">i</sub> arguments or a value for the DIMENSION keyword, but not both.</p>
        <h2 class="API">Keywords</h2>
        <h3 class="Keyword"><a name="BOOLEAN"></a>BOOLEAN</h3>
        <p>Set this keyword to create a <a href="../B/BOOLEAN.htm">boolean</a> array.</p>
        <h3 class="Keyword"><a name="BYTE"></a>BYTE</h3>
        <p>Set this keyword to create a byte array.</p>
        <h3 class="Keyword"><a name="COMPLEX"></a>COMPLEX</h3>
        <p>Set this keyword to create a complex, single-precision, floating-point array.</p>
        <h3 class="Keyword"><a name="DCOMPLEX"></a>DCOMPLEX</h3>
        <p>Set this keyword to create a complex, double-precision, floating-point array.</p>
        <h3 class="Keyword"><a name="DIMENSION"></a>DIMENSION</h3>
        <p>An array of up to eight scalar elements, specifying the dimensions of the result. Note that you should supply either the <i>D</i><sub class="italic">i</sub> arguments or a value for the DIMENSION keyword, but not both.</p>
        <h3 class="Keyword"><a name="DOUBLE"></a>DOUBLE</h3>
        <p>Set this keyword to create a double-precision, floating-point array.</p>
        <h3 class="Keyword"><a name="FLOAT"></a>FLOAT</h3>
        <p>Set this keyword to create a single-precision, floating-point array.</p>
        <h3 class="Keyword"><a name="INCREMENT"></a>INCREMENT</h3>
        <p>Set this keyword to a double-precision number giving the spacing between values in the array. The default is 1. Setting this keyword is equivalent to multiplying each array element by this value and then converting to the result type. This keyword is only applied if INDEX is set. This keyword is ignored for arrays of boolean, objects, or pointers.</p>
        <h3 class="Keyword"><a name="INDEX"></a>INDEX</h3>
        <p>Set this keyword to initialize the array with each element set to the value of its one-dimensional subscript. This keyword cannot be used with arrays of boolean, objects, or pointers.</p>
        <h3 class="Keyword"><a name="INTEGER"></a>INTEGER</h3>
        <p>Set this keyword to create an integer array.</p>
        <h3 class="Keyword"><a name="L64"></a>L64</h3>
        <p>Set this keyword to create a 64-bit integer array.</p>
        <h3 class="Keyword"><a name="LONG"></a>LONG</h3>
        <p>Set this keyword to create a longword integer array.</p>
        <h3 class="Keyword"><a name="NOZERO"></a>NOZERO</h3>
        <p>Set this keyword to prevent the initialization of the array. Normally, each element of the resulting array is set to zero.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This keyword is ignored for arrays of boolean, strings, objects, or pointers. Arrays of these types  will always be initialized to zero.</p>
        <h3 class="Keyword"><a name="OBJ"></a>OBJ</h3>
        <p>Set this keyword to create an object reference array.</p>
        <h3 class="Keyword"><a name="PTR"></a>PTR</h3>
        <p>Set this keyword to create a pointer array.</p>
        <h3 class="Keyword"><a name="SIZE"></a>SIZE</h3>
        <p>A size vector specifying the type and dimensions of the result. The format of a size vector is given in the description of the SIZE function.</p>
        <h3 class="Keyword"><a name="START"></a>START</h3>
        <p>Set this keyword to a double-precision number giving the value of the first element in the array when the array is initialized by index. The default is 0. Setting this keyword is equivalent to adding a constant offset to each element (after first multiplying by INCREMENT if necessary) and then converting to the result type. This keyword is only applied if INDEX is set. This keyword is ignored for arrays of boolean, objects, or pointers.</p>
        <h3 class="Keyword"><a name="STRING"></a>STRING</h3>
        <p>Set this keyword to create a string array.</p>
        <h3 class="Keyword"><a name="TYPE"></a>TYPE</h3>
        <p>The type code to set the type of the result.</p>
        <table style="caption-side: bottom;mc-table-style: url('../../Resources/TableStyles/Description.css');" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Type Code</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Type Name</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Data Type</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>0</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>UNDEFINED</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Undefined</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>1</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>BYTE</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Byte</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>2</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>INT</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Integer</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>3</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>LONG</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Longword integer</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>4</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>FLOAT</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Floating point</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>5</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>DOUBLE</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Double-precision floating</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>6</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>COMPLEX</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Complex floating</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>7</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>STRING</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>String</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>8</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>STRUCT</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Structure</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>9</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>DCOMPLEX</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Double-precision complex</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>10</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>POINTER</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Pointer</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>11</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>OBJREF</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Object reference</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>12</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>UINT</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Unsigned Integer</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>13</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>ULONG</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Unsigned Longword Integer</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>14</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>LONG64</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>64-bit Integer</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p>15</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p>ULONG64</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColEnd">
                        <p>Unsigned 64-bit Integer</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>All type code values except for TYPE=8 (structures) are valid. To create an array of structures, use the <a href="../R/REPLICATE.htm#R_822202989_1069463">REPLICATE</a> function.</p>
        <h3 class="Keyword"><a name="UINT"></a>UINT</h3>
        <p>Set this keyword to create an unsigned integer array.</p>
        <h3 class="Keyword"><a name="UL64"></a>UL64</h3>
        <p>Set this keyword to create an unsigned 64-bit integer array.</p>
        <h3 class="Keyword"><a name="ULONG"></a>ULONG</h3>
        <p>Set this keyword to create an unsigned longword integer array.</p>
        <h3 class="Keyword"><a name="VALUE"></a>VALUE</h3>
        <p>The value to initialize each element of the resulting array. VALUE can be a scalar of any type including structure types. The result type is taken from VALUE unless one of the other keywords that specify a type is also set. In that case, VALUE is converted to the type specified by the other keyword prior to initializing the resulting array.</p>
        <h3><a name="M_824365677_965830_PageTOC_MAKE_ARRAY_"></a>Thread Pool Keywords</h3>
        <p>This routine is written to make use of IDL’s <i>thread pool</i>, which can increase execution speed on systems with multiple CPUs. The values stored in the !CPU system variable control whether IDL uses the thread pool for a given computation. In addition, you can use the thread pool keywords TPOOL_MAX_ELTS, TPOOL_MIN_ELTS, and TPOOL_NOTHREAD to override the defaults established by !CPU for a single invocation of this routine. See <a href="../../Creating IDL Programs/Appendices/tpoolkeyw.htm#tpoolkeyw_2501860834_317209">Thread Pool Keywords</a> for details.</p>
        <h2 class="API">Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col style="width: 265px;" />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>4.0</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowSep_ColSep">8.2.1</td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowSep_ColEnd">Added START keyword</td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">8.3</td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">Added INCREMENT keyword</td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">8.4</td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">Added BOOLEAN keyword</td>
                </tr>
            </tbody>
        </table>
        <h2 class="API">See Also</h2>
        <p><a href="../B/BOOLARR.htm">BOOLARR</a>, <a href="../B/BYTARR.htm#B_856805997_675870">BYTARR</a>, <a href="../C/COMPLEXARR.htm#C_854643309_676228">COMPLEXARR</a>, <a href="../D/DBLARR.htm#D_843829869_1060809">DBLARR</a>, <a href="../D/DCOMPLEXARR.htm#D_843829869_37687">DCOMPLEXARR</a>, <a href="../F/FLTARR.htm#F_848155245_676939">FLTARR</a>, <a href="../I/INTARR.htm#I_833016429_677245">INTARR</a>, <a href="../L/LON64ARR.htm#L_826528365_983144">LON64ARR</a>, <a href="../L/LONARR.htm#L_826528365_916547">LONARR</a>, <a href="../R/REPLICATE.htm#R_822202989_1069463">REPLICATE</a>, <a href="../S/STRARR.htm#S_820040301_679026">STRARR</a>, <a href="../U/UINTARR.htm#U_807064173_950250">UINTARR</a>, <a href="../U/ULON64ARR.htm#U_807064173_950409">ULON64ARR</a>, <a href="../U/ULONARR.htm#U_807064173_950466">ULONARR</a></p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>