<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: F">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>FOREACH</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="F_list.htm">Routines: F</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">FOREACH</span>
        </div>
        <h1 class="Routine"><a name="F_848155245_976448"></a><a name="kanchor971"></a><a name="F_848155245_69986"></a>FOREACH</h1>
        <p>The FOREACH statement executes one or more statements for each element of an input set (which can be an array, list, or hash table). Within the FOREACH loop, the elementâ€™s value and (optionally) the index or key to which the element corresponds are available.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Unlike other loop statements in IDL, FOREACH does not use a loop counter. It simply iterates through all of the items in an input set.</p>
        <h2 class="API"><a name="F_848155245_976451"></a><a name="F_848155245_976451_PageTOC_FOREACH_"></a>Syntax</h2>
        <p class="Syntax">FOREACH <i>Element</i>, <i>Variable</i> [,&#160;<i>Index</i>] DO <i>Statement</i></p>
        <p>or</p>
        <p>FOREACH <i>Element</i>, <i>Variable</i> [,&#160;<i>Index</i>] DO BEGIN</p>
        <p> <i>statements</i></p>
        <p>ENDFOREACH</p>
        <p>If <i>Variable</i> is an array or <a href="../L/LIST.htm">list</a>, then the optional <i>Index</i> is set to an integer corresponding to the current loop index. If <i>Variable</i> is a <a href="../H/HASH.htm">hash</a>, then <i>Index</i> is set to the key corresponding to the current key-value pair.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If <i>Variable</i> is undefined then a runtime error will be thrown.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If <i>Variable</i> is !NULL, or is a scalar null object or scalar null pointer, then FOREACH will quietly return without doing any iterations. Note that this behavior will be different for a 1-element array of objects or pointers: In that case the FOREACH will iterate over the single element, even if it is a null object or null pointer.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If <i>Variable</i> is a scalar then the FOREACH will iterate over the single element (unless as noted above it is a null object or pointer).</p>
        <h2 class="API"><a name="F_848155245_976490"></a><a name="F_848155245_976490_PageTOC_FOREACH_"></a>Examples</h2>
        <h3>FOREACH with an Array or List</h3>
        <p>A simple FOREACH code example:</p>
        <p class="Code">array = [1, 3, 5, 7, 9, 11, 13, 15]</p>
        <p class="Code">FOREACH element, array DO PRINT, 'Value = ', element</p>
        <p>This code sample produces the following output:</p>
        <p class="Code">Value =        1</p>
        <p class="Code">Value =        3</p>
        <p class="Code">Value =        5</p>
        <p class="Code">Value =        7</p>
        <p class="Code">Value =        9</p>
        <p class="Code">Value =       11</p>
        <p class="Code">Value =       13</p>
        <p class="Code">Value =       15</p>
        <p>The same example, but also supplying the optional index argument:</p>
        <p class="Code">array = [1, 3, 5, 7, 9, 11, 13, 15]</p>
        <p class="Code">FOREACH element, array, index DO PRINT, 'Index ', index, ' Value = ', element</p>
        <p>This code sample produces the following output:</p>
        <p class="Code">Index 0 Value =        1</p>
        <p class="Code">Index 1 Value =        3</p>
        <p class="Code">Index 2 Value =        5</p>
        <p class="Code">Index 3 Value =        7</p>
        <p class="Code">Index 4 Value =        9</p>
        <p class="Code">Index 5 Value =       11</p>
        <p class="Code">Index 6 Value =       13</p>
        <p class="Code">Index 7 Value =       15</p>
        <p>The next example uses the block structure (instead of a single statement):</p>
        <p class="Code">PRO testForeach</p>
        <p class="Code">&#160;</p>
        <p class="Code">  list = LIST(77.97, 'Galactic', [2, 7, 1, 8, 2])</p>
        <p class="Code">  &#160;</p>
        <p class="Code">  FOREACH element, list DO BEGIN</p>
        <p class="Code_Indented">    &#160;&#160;PRINT, 'Value = ', element</p>
        <p class="Code">  ENDFOREACH</p>
        <p class="Code">&#160;</p>
        <p class="Code">END</p>
        <p>After compiling and running the procedure, it produces the following output:</p>
        <p class="Code">Value =       77.9700</p>
        <p class="Code">Value = Galactic</p>
        <p class="Code">Value =        2       7       1       8       2</p>
        <h3>FOREACH where <i>Variable</i> is an Expression</h3>
        <p>In a FOREACH statement, <i>Variable</i> can be an expression as well as a literal. In this example, we create a two-dimensional array and use an expression for <i>Variable</i> to print out the third column elements.</p>
        <p>The 3<i>x</i>3 array elements are:</p>
        <p class="Code">0 1 2</p>
        <p class="Code">3 4 5</p>
        <p class="Code">6 7 8</p>
        <p>&#160;</p>
        <p class="Code">arr = INDGEN(3,3)<br />FOREACH element, arr[2,*] DO PRINT, element</p>
        <p>IDL prints:</p>
        <p class="Code">2</p>
        <p class="Code">5</p>
        <p class="Code">8</p>
        <h3>FOREACH with a HASH Table</h3>
        <p>In this example, we create a <a href="../H/HASH.htm">hash</a> and loop through all of the key-value pairs.</p>
        <p class="Code">planets = HASH('Mercury', 0.3e24, 'Venus', 5e24, $</p>
        <p class="Code">'Earth', 6e24, 'Mars', 0.65e24, 'Jupiter', 1900e24, $</p>
        <p class="Code">'Saturn', 570e24, 'Uranus', 87e24, 'Neptune', 100e24, $</p>
        <p class="Code">'Pluto', 0.7e24)</p>
        <p class="Code">
            <br />FOREACH mass, planets, key DO PRINT, key, mass</p>
        <p>IDL prints:</p>
        <p class="Code">Mercury 3.00000e+023</p>
        <p class="Code">Venus 5.00000e+024</p>
        <p class="Code">Earth 6.00000e+024</p>
        <p class="Code">Neptune 1.00000e+026</p>
        <p class="Code">Saturn 5.70000e+026</p>
        <p class="Code">Mars 6.50000e+023</p>
        <p class="Code">Uranus 8.70000e+025</p>
        <p class="Code">Pluto 7.00000e+023</p>
        <p class="Code">Jupiter 1.90000e+027</p>
        <p>Notice that the order in which the keys are returned is arbitrary for a hash table.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>While iterating through a <a href="../L/LIST.htm">list</a>, <a href="../H/HASH.htm">hash</a>, <a href="../O/ORDEREDHASH.htm">ordered hash</a>, or <a href="../D/DICTIONARY.htm">dictionary</a>, you should avoid adding or removing elements. If the set is changed during the FOREACH, the behavior  is undefined.</p>
        <h2 class="API"><a name="F_848155245_976494"></a><a name="F_848155245_976494_PageTOC_FOREACH_"></a>Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>8.0</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API"><a name="F_848155245_976492"></a><a name="F_848155245_976492_PageTOC_FOREACH_"></a>See Also</h2>
        <p><a href="../B/BEGIN___END.htm">BEGIN...END</a>,
			<a href="../B/BREAK.htm">BREAK</a>,
			<a href="../C/CASE.htm">CASE</a>,
			<a href="../C/CONTINUE.htm">CONTINUE</a>,
			<a href="FOR.htm">FOR</a>,
			<a href="../G/GOTO.htm">GOTO</a>, <a href="../H/HASH.htm">HASH</a>, 
			<a href="../I/IF___THEN___ELSE.htm">IF...THEN...ELSE</a>, <a href="../L/LIST.htm">LIST</a>, 
			<a href="../R/REPEAT___UNTIL.htm">REPEAT...UNTIL</a>,
			<a href="../S/SWITCH.htm">SWITCH</a>,
			<a href="../W/WHILE___DO.htm">WHILE...DO</a></p>
        <p><a href="../../IDL Programming.htm">IDL Programming</a>
        </p>
        <div class="mp_footer">Â© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>