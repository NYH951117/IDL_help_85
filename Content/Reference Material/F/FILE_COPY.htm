<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: F">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>FILE_COPY </title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="F_list.htm">Routines: F</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">FILE_COPY</span>
        </div>
        <h1 class="Routine"><a name="F_848155245_894462"></a><a name="kanchor901"></a><a name="F_848155245_56767"></a>FILE_COPY<a name="kanchor902"></a> <![CDATA[ ]]></h1>
        <p>The FILE_COPY procedure copies files, or directories of files, to a new location.</p>
        <p>FILE_COPY copies files based on their names. To copy data between open files, see the <a href="../C/COPY_LUN.htm#C_854643309_1058915">COPY_LUN</a> procedure.</p>
        <h2 class="API"><a name="F_848155245_894513"></a><a name="F_848155245_894513_PageTOC_FILE_COPY_"></a>Examples</h2>
        <p>Make a backup copy of a file named <code>myroutine.pro</code> in the current working directory:</p>
        <p class="Code">FILE_COPY, 'myroutine.pro', 'myroutine.pro.backup'</p>
        <p>Create a subdirectory named BACKUP in the current working directory and copy all <code>.pro</code> files, <code>makefile</code>, and <code>mydata.dat</code> into it:</p>
        <p class="Code">FILE_MKDIR, 'BACKUP'</p>
        <p class="Code">FILE_COPY, ['*.pro', 'makefile', 'mydata.dat'], 'BACKUP'</p>
        <h2 class="API"><a name="F_848155245_971620"></a><a name="F_848155245_894480_PageTOC_FILE_COPY_"></a>Syntax</h2>
        <p class="Syntax">FILE_COPY, <i>SourcePath</i>, <i>DestPath</i> [,&#160;/<a href="#F_848155245_906390" class="selected">ALLOW_SAME</a>] [,&#160;/<a href="#F_848155245_906399" class="selected">NOEXPAND_PATH</a>] [,&#160;/<a href="#F_848155245_906404" class="selected">OVERWRITE</a>] [,&#160;/<a href="#F_848155245_906406" class="selected">RECURSIVE</a>] [,&#160;/<a href="#F_848155245_906412" class="selected">REQUIRE_DIRECTORY</a>] [,&#160;/<a href="#F_848155245_906414" class="selected">VERBOSE</a>]</p>
        <p class="Syntax"><b>UNIX-Only Keywords:</b> [,&#160;/<a href="#F_848155245_906392" class="selected">COPY_NAMED_PIPE</a>] [,&#160;/<a href="#F_848155245_906394" class="selected">COPY_SYMLINK</a>] [,&#160;/<a href="#F_848155245_906396" class="selected">FORCE</a>]</p>
        <h2 class="API"><a name="F_848155245_894483"></a><a name="F_848155245_894483_PageTOC_FILE_COPY_"></a>Arguments</h2>
        <h3 class="Argument">SourcePath</h3>
        <p>A scalar string or string array containing the names of the files or directories to be copied.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If <i>SourcePath</i> contains a directory, the RECURSIVE keyword must be set.</p>
        <h3 class="Argument">DestPath</h3>
        <p>A scalar string or string array containing the names of the destinations to which the files and directories specified by <i>SourcePath</i> are to be copied. If more than one file is to be copied to a given destination, that destination must exist and be a directory.</p>
        <h2 class="API"><a name="F_848155245_894489"></a><a name="F_848155245_894489_PageTOC_FILE_COPY_"></a>Keywords</h2>
        <h3 class="Keyword"><a name="F_848155245_906390"></a><a name="F_848155245_906390_Keywords_FILE_COPY__"></a>ALLOW_SAME</h3>
        <p>Attempting to copy a file on top of itself by specifying the same file for <i>SourcePath</i> and <i>DestPath</i> is usually considered to be an error. If the ALLOW_SAME keyword is set, no copying is done and the operation is considered successful.</p>
        <h3 class="Keyword"><a name="F_848155245_906392"></a><a name="F_848155245_906392_Keywords_FILE_COPY__"></a>COPY_NAMED_PIPE</h3>
        <p><i>This keyword is only available on UNIX platforms.</i>
        </p>
        <p>When FILE_COPY encounters a UNIX <i>named pipe</i> (also called a <i>fifo</i>) in <i>SourcePath</i>, it usually opens it as a regular file and attempts to copy data from it to the destination file. If COPY_NAMED_PIPE is set, FILE_COPY will instead replicate the pipe, creating a new named pipe at the destination using the system <code>mkfifo()</code> function.</p>
        <h3 class="Keyword"><a name="F_848155245_906394"></a><a name="F_848155245_906394_Keywords_FILE_COPY__"></a>COPY_SYMLINK</h3>
        <p><i>This keyword is only available on UNIX platforms.</i>
        </p>
        <p>When FILE_COPY encounters a UNIX<i> symbolic link</i> in <i>SourcePath</i>, it attempts to copy the file or directory pointed to by the link. If COPY_SYMLINK is set, FILE_COPY will instead create a symbolic link at the destination with the same name as the source symbolic link, and pointing to the same path as the source.</p>
        <h3 class="Keyword"><a name="F_848155245_906396"></a><a name="F_848155245_906396_Keywords_FILE_COPY__"></a>FORCE</h3>
        <p><i>This keyword is only available on UNIX platforms.</i>
        </p>
        <p>Even if the OVERWRITE keyword is set, FILE_COPY does not overwrite files that have their file permissions set to prevent it. If the FORCE keyword is set, such files are quietly removed to make way for the overwrite operation to succeed.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>FORCE does not imply OVERWRITE; both must be specified to overwrite a protected file.</p>
        <h3 class="Keyword"><a name="F_848155245_906399"></a><a name="F_848155245_906399_Keywords_FILE_COPY__"></a>NOEXPAND_PATH</h3>
        <p>Set this keyword to cause FILE_COPY to use <i>SourcePath</i> and <i>DestPath</i> exactly as specified, without expanding any wildcard characters or environment variable names included in the paths. See <a href="FILE_SEARCH.htm#F_848155245_893545">FILE_SEARCH</a> for details on path expansion.</p>
        <h3 class="Keyword"><a name="F_848155245_906404"></a><a name="F_848155245_906404_Keywords_FILE_COPY__"></a>OVERWRITE</h3>
        <p>Set this keyword to allow FILE_COPY to overwrite an existing file.</p>
        <h3 class="Keyword"><a name="F_848155245_906406"></a><a name="F_848155245_906406_Keywords_FILE_COPY__"></a>RECURSIVE</h3>
        <p>Set this keyword to cause directories specified by <i>SourcePath</i> to be copied to <i>DestPath</i> recursively, preserving the hierarchy and names of the files from the source. If <i>SourcePath</i> includes one or more directories, the RECURSIVE keyword <i>must</i> be set.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>On a UNIX system, when performing a recursive copy on a directory hierarchy that includes files that are links to other files, the destination files will be copies, not links. Setting the COPY_SYMLINK keyword will cause files that are <i>symbolic</i> links to be copied as symbolic links, but FILE_COPY does not include a similar facility for copying <i>hard</i> links. See the description of the <a href="FILE_LINK.htm#F_848155245_894186">FILE_LINK</a> for more information on UNIX file links.</p>
        <h3 class="Keyword"><a name="F_848155245_906412"></a><a name="F_848155245_906412_Keywords_FILE_COPY__"></a>REQUIRE_DIRECTORY</h3>
        <p>Set this keyword to cause FILE_COPY to require that <i>DestPath</i> exist and be a directory.</p>
        <h3 class="Keyword"><a name="F_848155245_906414"></a><a name="F_848155245_906414_Keywords_FILE_COPY__"></a>VERBOSE</h3>
        <p>Set this keyword to cause FILE_COPY to issue an informative message for every file copy operation it carries out.</p>
        <h2 class="API"><a name="F_848155245_906420"></a><a name="F_848155245_37480"></a>Rules Used By FILE_COPY</h2>
        <p>The following rules govern how FILE_COPY operates:</p>
        <ul>
            <li value="1">The arguments to FILE_COPY can be scalar or array. If both arguments are arrays, the arrays must contain the same number of elements; in this case, the files are copied pairwise, with each file from <i>SourcePath</i> being copied to the corresponding file in the <i>DestPath</i>. If <i>SourcePath</i> is an array and <i>DestPath</i> is a scalar, all files in <i>SourcePath</i> are copied to the single location given by <i>DestPath</i>, which must exist and be a directory.</li>
            <li value="2">Elements of <i>SourcePath</i> may use wildcard characters (as accepted by the <a href="FILE_SEARCH.htm#F_848155245_893545">FILE_SEARCH</a> function) to specify multiple files. All the files matched for a given element of <i>SourcePath</i> are copied to the location specified by the corresponding element of <i>DestPath</i>. If multiple files are copied to a single element of <i>DestPath</i>, that element must exist and be a directory.</li>
            <li value="3">If a file specified in <i>DestPath</i> does not exist, the corresponding file from <i>SourcePath</i> is copied using the name specified by <i>DestPath</i>. Any parent directories to the file specified by <i>DestPath</i> must already exist. The permission settings of the source file will also be copied, and the destination file will belong to the user that performed the copy.</li>
            <li value="4">If <i>DestPath</i> names an existing regular file, FILE_COPY will not overwrite it, unless the OVERWRITE keyword is specified. If the OVERWRITE keyword is specified, FILE_COPY will attempt to quietly copy the permission settings of the source file, but will not attempt to change the owner.</li>
            <li value="5">If <i>DestPath</i> names an existing directory and <i>SourcePath</i> names a regular (non-directory) file, then FILE_COPY creates a file with the same name as the file given by <i>SourcePath</i> within the <i>DestPath</i> directory.</li>
            <li value="6">If <i>DestPath</i> specifies an existing directory and <i>SourcePath</i> also names a directory, and the RECURSIVE keyword is set, FILE_COPY checks for the existence of a subdirectory of <i>DestPath</i> with the same name as the source directory. If this subdirectory does not exist, it is created using the same permissions as the directory being copied. Then, all the files and directories underneath the source directory are copied to this subdirectory. FILE_COPY will refuse to overwrite existing files within the destination subdirectory unless the OVERWRITE keyword is in effect.</li>
        </ul>
        <h2 class="API"><a name="F_848155245_894519"></a><a name="F_848155245_894519_PageTOC_FILE_COPY_"></a>Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>5.6</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API"><a name="F_848155245_894521"></a><a name="F_848155245_894521_PageTOC_FILE_COPY_"></a>See Also</h2>
        <p><a href="../C/COPY_LUN.htm#C_854643309_1058915">COPY_LUN</a>, <a href="FILE_LINK.htm#F_848155245_894186">FILE_LINK</a>, <a href="FILE_MOVE.htm#F_848155245_894357">FILE_MOVE, <a href="../Functional List of IDL Routines/Input_Output.htm#funclisting_2438760872_1213961">General File Access</a></a></p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>