<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: D">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>DEVICE Procedure</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="D_list.htm">Routines: D</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">DEVICE Procedure</span>
        </div>
        <h1 class="Routine"><a name="dg_routines_3604229493_882302"></a><a name="kanchor495"></a><a name="dg_routines_3604229493_17188"></a><a name="kanchor496"></a>DEVICE Procedure</h1>
        <p><a href="#dg_routines_3604229493_882321" class="selected">Syntax</a> | <a href="#dg_routines_3604229493_882663" class="selected">Examples</a> | <a href="#dg_routines_3604229493_882667" class="selected">Version History</a></p>
        <p>The DEVICE procedure provides device-dependent control over the current graphics device (as set by the SET_PLOT routine). The IDL graphics procedures and functions are device-independent. That is, IDL presents the user with a consistent interface to all devices. However, most devices have extra abilities that are not directly available through this interface. DEVICE is used to access and control such abilities. It is used by specifying various keywords that differ from device to device.</p>
        <p>Each keyword to DEVICE is followed by the device(s) to which it applies. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Most keywords to the DEVICE procedure are sticky — that is, once you set them, they remain in effect until you explicitly change them again, or end your IDL session. The exceptions are keywords used to return a value from the system (GET_FONTNAMES, for example) and those that perform a one-time-only operation (CLOSE_FILE, for example).</p>
        <h2 class="API"><a name="dg_routines_3604229493_882663"></a><a name="dg_routines_3604229493_870739_PageTOC_DEVICE_"></a>Example&#160;</h2>
        <p>The following example retains the name of the current graphics device, sets plotting to the PostScript device, makes a PostScript file, then resets plotting to the original device:</p>
        <p class="Code">; The NAME field of the !D system variable contains the name of the<br />; current plotting device.<br />mydevice = !D.NAME<br /><br />; Set plotting to PostScript:<br />SET_PLOT, 'PS'<br /><br />; Use DEVICE to set some PostScript device options:<br />DEVICE, FILENAME='myfile.ps', /LANDSCAPE<br /><br />; Make a simple plot to the PostScript file:<br />PLOT, FINDGEN(10)<br /><br />; Close the PostScript file:<br />DEVICE, /CLOSE<br /><br />; Return plotting to the original device:<br />SET_PLOT, mydevice<br /></p>
        <h2 class="API"><a name="dg_routines_3604229493_882321"></a><a name="dg_routines_3604229493_870732_PageTOC_DEVICE_"></a>Syntax</h2>
        <p>All keywords:</p>
        <p class="Syntax">DEVICE,&#160;/<a href="#devices_517620971_482989" class="selected">AVANTGARDE</a>, /<a href="#devices_517620971_143940" class="selected">BKMAN</a>, /<a href="#devices_517620971_144503" class="selected">COURIER</a>, /<a href="#devices_517620971_144524" class="selected">HELVETICA</a>, /<a href="#devices_517620971_144322" class="selected">ISOLATIN1</a>, /<a href="#devices_517620971_144366" class="selected">PALATINO</a>, /<a href="#devices_517620971_144551" class="selected">SCHOOLBOOK</a>, /<a href="#devices_517620971_144554" class="selected">SYMBOL</a>, /<a href="#devices_517620971_144557" class="selected">TIMES</a>, /<a href="#devices_517620971_144513" class="selected">ZAPFCHANCERY</a>, /<a href="#devices_517620971_144515" class="selected">ZAPFDINGBATS</a>,<br />/<a href="#devices_517620971_144491" class="selected">AVERAGE_LINES</a>, /<a href="#devices_517620971_144309" class="selected">BINARY</a>, /<a href="#devices_517620971_144157" class="selected">NCAR</a>, /<a href="#devices_517620971_144841" class="selected">TEXT</a>, <a href="#devices_517620971_144308" class="selected">BITS_PER_PIXEL</a>=<i>value</i>, /<a href="#devices_517620971_144497" class="selected">BOLD</a>, /<a href="#devices_517620971_144499" class="selected">BOOK</a>, /<a href="#devices_517620971_144256" class="selected">BYPASS_TRANSLATION</a>, /<a href="#devices_517620971_144712" class="selected">CLOSE</a>, /<a href="#devices_517620971_451438" class="selected">CLOSE_DOCUMENT</a>, /<a href="#devices_517620971_144158" class="selected">CLOSE_FILE</a>, /<a href="#devices_517620971_732196" class="selected">CMYK</a>, /<a href="#devices_517620971_144479" class="selected">COLOR</a>, <a href="#devices_517620971_144313" class="selected">COLORS</a>=<i>value</i>, <a href="#devices_517620971_143954" class="selected">COPY</a>=<i>value</i>, /<a href="#devices_517620971_144502" class="selected">CURSOR_CROSSHAIR</a>, <a href="#devices_517620971_143934" class="selected">CURSOR_IMAGE</a>=<i>value</i>, <a href="#devices_517620971_144824" class="selected">CURSOR_MASK</a>=<i>value</i>, /<a href="#devices_517620971_144828" class="selected">CURSOR_ORIGINAL</a>, <a href="#devices_517620971_144830" class="selected">CURSOR_STANDARD</a>=<i>value</i>, <a href="#devices_517620971_143722" class="selected">CURSOR_XY</a>=<i>[x</i>,<i>y]</i>,<br />/<a href="#devices_517620971_144834" class="selected">DECOMPOSED</a>, /<a href="#devices_517620971_145006" class="selected">DIRECT_COLOR</a>, <a href="#devices_517620971_143752" class="selected">EJECT</a>=<i>value</i>, /<a href="#devices_517620971_143751" class="selected">ENCAPSULATED</a>, <a href="#devices_517620971_144315" class="selected">ENCODING</a>=<i>value</i>, <a href="#devices_517620971_143748" class="selected">FILENAME</a>=<i>string</i>, /<a href="#devices_517620971_144833" class="selected">FLOYD</a>, <a href="#devices_517620971_143943" class="selected">FONT_INDEX</a>=<i>integer</i>, <a href="#devices_517620971_144522" class="selected">FONT_SIZE</a>=<i>value</i>,<br /><a href="#devices_517620971_144518" class="selected">GET_CURRENT_FONT</a>=<i>variable</i>, <a href="#devices_517620971_554681" class="selected">GET_DECOMPOSED</a>=<i>variable</i>, <a href="#devices_517620971_554610" class="selected">GET_FONTNAMES</a>=<i>variable</i>, <a href="#devices_517620971_144326" class="selected">GET_FONTNUM</a>=<i>variable</i>, <a href="#devices_517620971_145007" class="selected">GET_GRAPHICS_FUNCTION</a>=<i>variable</i>, <a href="#devices_517620971_587045" class="selected">GET_PAGE_SIZE</a>=<i>variable</i>, <a href="#devices_517620971_878857" class="selected">GET_PIXEL_DEPTH</a>=<i>variable</i>, <a href="#devices_517620971_149759" class="selected">GET_SCREEN_SIZE</a>=<i>variable</i>, <a href="#devices_517620971_452299" class="selected">GET_VISUAL_DEPTH</a>=<i>variable</i>, <a href="#devices_517620971_551382" class="selected">GET_VISUAL_NAME</a>=<i>variable</i>, <a href="#devices_517620971_143947" class="selected">GET_WINDOW_POSITION</a>=<i>variable</i>, <a href="#devices_517620971_143949" class="selected">GET_WRITE_MASK</a>=<i>variable</i>,<br /><a href="#devices_517620971_143951" class="selected">GIN_CHARS</a>=<i>value</i>, <a href="#devices_517620971_499334" class="selected">GLYPH_CACHE</a>=<i>value</i>, /<a href="#devices_517620971_144166" class="selected">INCHES</a>, /<a href="#devices_517620971_451483" class="selected">INDEX_COLOR</a>, /<a href="#devices_517620971_143723" class="selected">ITALIC</a>, /<a href="#devices_517620971_606950" class="selected">LANDSCAPE</a>, /<a href="#devices_517620971_144170" class="selected">PORTRAIT</a>, <a href="#devices_517620971_144167" class="selected">LANGUAGE_LEVEL</a>=<i>value</i>,<br />/<a href="#devices_517620971_143930" class="selected">DEMI</a>, /<a href="#devices_517620971_618160" class="selected">LIGHT</a>, /<a href="#devices_517620971_144529" class="selected">MEDIUM</a>, /<a href="#devices_517620971_417784" class="selected">NARROW</a>, /<a href="#devices_517620971_562813" class="selected">OBLIQUE</a>,<br /><a href="#devices_517620971_144405" class="selected">OPTIMIZE</a>=<i>value</i>, /<a href="#devices_517620971_143941" class="selected">ORDERED</a>, <a href="#devices_517620971_144538" class="selected">OUTPUT</a>=<i>string</i>, /<a href="#devices_517620971_144468" class="selected">PIXELS</a>, <a href="#devices_517620971_485584" class="selected">PLOT_TO</a>=<i>lun</i>, /<a href="#devices_517620971_144371" class="selected">PLOTTER_ON_OFF</a>, /<a href="#devices_517620971_144368" class="selected">POLYFILL</a>, <a href="#devices_517620971_144169" class="selected">PRE_DEPTH</a>=<i>value</i>, <a href="#devices_517620971_601831" class="selected">PRE_XSIZE</a>=<i>value</i>, <a href="#devices_517620971_597448" class="selected">PRE_YSIZE</a>=<i>value</i>, /<a href="#devices_517620971_601886" class="selected">PREVIEW</a>, <a href="#devices_517620971_556886" class="selected">PRINT_FILE</a>=<i>string</i>, /<a href="#devices_517620971_144688" class="selected">PSEUDO_COLOR</a>, <a href="#devices_517620971_144455" class="selected">RESET_STRING</a>=<i>string</i>, <a href="#devices_517620971_144473" class="selected">RESOLUTION</a>=<i>value</i>,<br /><a href="#devices_517620971_144472" class="selected">RETAIN</a>=<i>value</i>, <a href="#devices_517620971_144547" class="selected">SCALE_FACTOR</a>=<i>value</i>,<br /><a href="#devices_517620971_486143" class="selected">SET_CHARACTER_SIZE</a>=<i>[size</i>, <i>spacing]</i>, <a href="#devices_517620971_161043" class="selected">SET_COLORMAP</a>=<i>value</i>, <a href="#devices_517620971_486222" class="selected">SET_COLORS</a>=<i>value</i>, <a href="#devices_517620971_499045" class="selected">SET_FONT</a>=<i>string</i>, <a href="#devices_517620971_499029" class="selected">SET_GRAPHICS_FUNCTION</a>=<i>code</i>, <a href="#devices_517620971_144941" class="selected">SET_PIXEL_DEPTH</a>=<i>value</i>, <a href="#devices_517620971_878877" class="selected">SET_RESOLUTION</a>=[<i>width</i>, <i>height</i>], <a href="#devices_517620971_144466" class="selected">SET_STRING</a>=<i>string</i>, <a href="#devices_517620971_150093" class="selected">SET_TRANSLATION</a>=<i>variable</i>, <a href="#devices_517620971_143957" class="selected">SET_WRITE_MASK</a>=<i>value</i>,<br /><a href="#devices_517620971_144842" class="selected">STATIC_COLOR</a>=<i>value</i>, <a href="#devices_517620971_144844" class="selected">STATIC_GRAY</a>=<i>value</i>, /<a href="#devices_517620971_144553" class="selected">TEK4014</a>, /<a href="#devices_517620971_144475" class="selected">TEK4100</a>, <a href="#devices_517620971_144376" class="selected">THRESHOLD</a>=<i>value</i>, <a href="#devices_517620971_144556" class="selected">TRANSLATION</a>=<i>variable</i>, <a href="#devices_517620971_883042" class="selected">TRUE_COLOR</a>=<i>value</i>, /<a href="#devices_517620971_542703" class="selected">TT_FONT</a>, /<a href="#devices_517620971_144477" class="selected">TTY</a>,<br />/<a href="#devices_517620971_144174" class="selected">VT240</a>, /<a href="#devices_517620971_868016" class="selected">VT241</a>, /<a href="#devices_517620971_144532" class="selected">VT340</a>, /<a href="#devices_517620971_868020" class="selected">VT341</a>, <a href="#devices_517620971_144546" class="selected">WINDOW_STATE</a>=<i>variable</i>, <a href="#devices_517620971_143719" class="selected">XOFFSET</a>=<i>value</i>, /<a href="#devices_517620971_144379" class="selected">XON_XOFF</a>, <a href="#devices_517620971_144540" class="selected">XSIZE</a>=<i>value</i>, <a href="#devices_517620971_144175" class="selected">YOFFSET</a>=<i>value</i>, <a href="#devices_517620971_144568" class="selected">YSIZE</a>=<i>value</i>, /<a href="#devices_517620971_144512" class="selected">Z_BUFFERING</a></p>
        <p>Keywords per device:</p>
        <p class="Syntax"><i>CGM</i>: BINARY, CLOSE_FILE, COLORS, ENCODING, FILENAME, NCAR, SET_CHARACTER_SIZE, TEXT</p>
        <p class="Syntax"><i>HP</i>: CLOSE_FILE, EJECT, FILENAME, INCHES, LANDSCAPE, OUTPUT, PLOTTER_ON_OFF, POLYFILL, PORTRAIT, SET_CHARACTER_SIZE, XOFFSET, XON_XOFF, XSIZE, YOFFSET, YSIZE</p>
        <p class="Syntax"><i>METAFILE</i>: CLOSE_FILE, FILENAME, GET_CURRENT_FONT, GET_FONT_NAMES, GET_FONTNUM, GLYPH_CACHE, INCHES, INDEX_COLOR, SET_CHARACTER_SIZE, SET_FONT, TRUE_COLOR, TT_FONT, XSIZE, YSIZE</p>
        <p class="Syntax"><i>PCL</i>: CLOSE_FILE, COLOR, FILENAME, FLOYD, INCHES, LANDSCAPE, OPTIMIZE, ORDERED, PIXELS, PORTRAIT, RESOLUTION, SET_CHARACTER_SIZE, SET_COLORMAP, THRESHOLD, XOFFSET, XSIZE, YOFFSET, YSIZE</p>
        <p class="Syntax"><i>PRINTER</i>: CLOSE_DOCUMENT, GET_CURRENT_FONT, GET_FONT_NAMES, GET_FONTNUM, GET_PAGE_SIZE, GLYPH_CACHE, INCHES, INDEX_COLOR, LANDSCAPE, PORTRAIT, SCALE_FACTOR, SET_CHARACTER_SIZE, SET_FONT, RUE_COLOR, TT_FONT, XOFFSET, XSIZE, YOFFSET, YSIZE</p>
        <p class="Syntax"><i>PS</i>: AVANTGARDE, BKMAN, COURIER, HELVETICA, ISOLATIN1, PALATINO, SCHOOLBOOK, SYMBOL, TIMES, ZAPFCHANCERY, ZAPFDINGBATS, BITS_PER_PIXEL, BOLD, BOOK, CLOSE_FILE, CMYK, COLOR, DECOMPOSED, ENCAPSULATED, FILENAME, FONT_INDEX, FONT_SIZE, GET_DECOMPOSED, GLYPH_CACHE, INCHES, ITALIC, LANDSCAPE, PORTRAIT, LANGUAGE_LEVEL, DEMI, LIGHT, MEDIUM, NARROW, OBLIQUE, OUTPUT, PRE_DEPTH, PRE_XSIZE, PRE_YSIZE, PREVIEW, SCALE_FACTOR, SET_CHARACTER_SIZE, SET_FONT, TT_FONT, XOFFSET, XSIZE, YOFFSET, YSIZE</p>
        <p class="Syntax"><i>REGIS</i>: AVERAGE_LINES, CLOSE_FILE, FILENAME, PLOT_TO, SET_CHARACTER_SIZE, TTY, VT240, VT241, VT340, VT341</p>
        <p class="Syntax"><i>TEK</i>: CLOSE_FILE, COLORS, FILENAME, GIN_CHARS, PLOT_TO, RESET_STRING, SET_CHARACTER_SIZE, SET_STRING, TEK4014, TEK4100, TTY</p>
        <p class="Syntax"><i>WIN</i>: BYPASS_TRANSLATION, COPY, CURSOR_CROSSHAIR, CURSOR_IMAGE, CURSOR_MASK, CURSOR_ORIGINAL, CURSOR_STANDARD, CURSOR_XY, DECOMPOSED, GET_CURRENT_FONT, GET_DECOMPOSED, GET_FONTNAMES, GET_FONTNUM, GET_GRAPHICS_FUNCTION, GET_SCREEN_SIZE, GET_VISUAL_DEPTH, GET_VISUAL_NAME, GET_WINDOW_POSITION, GET_WRITE_MASK, GLYPH_CACHE, RETAIN, SET_CHARACTER_SIZE, SET_FONT, SET_GRAPHICS_FUNCTION, SET_WRITE_MASK, TRANSLATION, TT_FONT, WINDOW_STATE</p>
        <p class="Syntax"><i>X</i>: BYPASS_TRANSLATION, COPY, CURSOR_CROSSHAIR, CURSOR_IMAGE, CURSOR_MASK, CURSOR_ORIGINAL, CURSOR_STANDARD, CURSOR_XY, DECOMPOSED, DIRECT_COLOR, FLOYD, GET_CURRENT_FONT, GET_DECOMPOSED, GET_FONTNAMES, GET_FONTNUM, GET_GRAPHICS_FUNCTION, GET_SCREEN_SIZE, GET_VISUAL_DEPTH, GET_VISUAL_NAME, GET_WINDOW_POSITION, GET_WRITE_MASK, ORDERED, PSEUDO_COLOR, RETAIN, SET_CHARACTER_SIZE, SET_FONT, SET_GRAPHICS_FUNCTION, SET_TRANSLATION, SET_WRITE_MASK, STATIC_COLOR, STATIC_GRAY, THRESHOLD, TRANSLATION, TRUE_COLOR, TT_FONT, WINDOW_STATE</p>
        <p class="Syntax"><i>Z</i>: CLOSE, DECOMPOSED, GET_DECOMPOSED, GET_GRAPHICS_FUNCTION, GET_PIXEL_DEPTH, GET_WRITE_MASK, GLYPH_CACHE, SET_CHARACTER_SIZE, SET_COLORS, SET_FONT, SET_GRAPHICS_FUNCTION, SET_PIXEL_DEPTH, SET_RESOLUTION, SET_WRITE_MASK, TT_FONT, Z_BUFFERING</p>
        <h2 class="API"><a name="Keywords"></a>Keywords</h2>
        <p>Keywords accepted by the DEVICE command are described below. A list of devices that accept the keyword is included in parentheses below the keyword name.</p>
        <h3 class="Keyword"><a name="devices_517620971_482989"></a><a name="devices_517620971_68917"></a><a name="kanchor497"></a>AVANTGARDE </h3>
        <p>(PS)</p>
        <p>Set this keyword to select the ITC Avant Garde PostScript font.</p>
        <h3 class="Keyword"><a name="devices_517620971_144491"></a><a name="devices_517620971_49190"></a><a name="kanchor498"></a>AVERAGE_LINES </h3>
        <p>(REGIS)</p>
        <p>Controls the method of writing images to the VT240. If this keyword is set, (default setting), even and odd pairs of image lines are averaged and written to a single line. If clear, each image line is written to the screen. See the discussion below. This keyword has no effect when using a VT300 series terminal.</p>
        <h3 class="Keyword"><a name="devices_517620971_144309"></a><a name="devices_517620971_53447"></a><a name="kanchor499"></a>BINARY</h3>
        <p>(CGM)</p>
        <p>Set this keyword to set the encoding type for the CGM output file to binary.</p>
        <h3 class="Keyword"><a name="devices_517620971_144308"></a><a name="devices_517620971_22650"></a><a name="kanchor500"></a>BITS_PER_PIXEL</h3>
        <p>(PS)</p>
        <p>Set this keyword to an integer that specifies the number of bits used to represent a pixel in a bitmap image included in a <a name="kanchor501"></a>PostScript file. Allowed values are 1, 2, 4, or 8 bits per pixel, representing 2, 4, 16, or 256 shades. By default, BITS_PER_PIXEL is set to 4.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Using more bits per pixel gives higher resolution at the cost of generating larger files.</p>
        <p>When writing TrueColor images to a PostScript file, the BITS_PER_PIXEL value applies to each <i>channel</i> of the image. Thus, to write a 24-bit image, which consists of three 8-bit image planes, set BITS_PER_PIXEL=8.</p>
        <h3 class="Keyword"><a name="devices_517620971_143940"></a><a name="devices_517620971_87785"></a><a name="kanchor502"></a>BKMAN</h3>
        <p>(PS)</p>
        <p>Set this keyword to select the ITC <a name="kanchor503"></a>Bookman PostScript font.</p>
        <h3 class="Keyword"><a name="devices_517620971_144497"></a><a name="devices_517620971_34249"></a><a name="kanchor504"></a>BOLD</h3>
        <p>(PS)</p>
        <p>Set this keyword to specify that the bold version of the current PostScript font should be used.</p>
        <h3 class="Keyword"><a name="devices_517620971_144499"></a><a name="devices_517620971_86622"></a><a name="kanchor505"></a>BOOK</h3>
        <p>(PS)</p>
        <p>Set this keyword to specify that the book version of the current PostScript font should be used.</p>
        <h3 class="Keyword"><a name="devices_517620971_144256"></a><a name="devices_517620971_98623"></a><a name="kanchor506"></a>BYPASS_TRANSLATION</h3>
        <p>(WIN, X)</p>
        <p>Set this keyword to bypass the translation tables, allowing direct specification of color indices. Pixel values read via the TVRD function are not translated if this keyword is set, and the result contains the byte value of the actual pixel values present in the display.</p>
        <p>By default, the color translation tables are bypassed if the visual type is TrueColor or the visual type is DirectColor with a private colormap.</p>
        <p>This keyword is accepted by the WIN device (for compatibility with the X device), but has no effect when set.</p>
        <h3 class="Keyword"><a name="devices_517620971_144712"></a><a name="devices_517620971_23518"></a><a name="kanchor507"></a>CLOSE</h3>
        <p>(Z)</p>
        <p>Set this keyword to deallocate the memory used by the Z-buffer. The Z-buffer device is reinitialized if subsequent graphics operations are directed to the device. See <a href="../../Direct Graphics/Supported_Devices.htm#Z-Buffer">Z-Buffer</a> for information and examples.</p>
        <h3 class="Keyword"><a name="devices_517620971_451438"></a><a name="kanchor508"></a><a name="devices_517620971_14435"></a>CLOSE_DOCUMENT</h3>
        <p>(PRINTER)</p>
        <p>Set this keyword to have IDL send any buffered output to the currently selected printer. This keyword is applicable only when the printer device is selected.</p>
        <h3 class="Keyword"><a name="devices_517620971_144158"></a><a name="devices_517620971_75202"></a><a name="kanchor509"></a>CLOSE_FILE</h3>
        <p>(CGM, HP, METAFILE, PCL, PS, REGIS, TEK)</p>
        <p><a name="kanchor510"></a>Set this keyword to have IDL output any buffered commands and close the current graphics file.</p>
        <p>Caution: If you close the output file and then cause IDL to produce more output (e.g., by executing a new PLOT command), IDL will open the file again, causing the contents of the recently closed file to be lost. To avoid this, use the FILENAME keyword to specify a different file name or use SET_PLOT to disable the graphics driver, or be sure to print the closed output file before creating more output.</p>
        <h3 class="Keyword"><a name="devices_517620971_732196"></a><a name="kanchor511"></a><a name="devices_517620971_88510"></a>CMYK<a name="kanchor512"></a></h3>
        <p>(PS)</p>
        <p>Set this keyword to generate PostScript output using the CMYK (cyan, magenta, yellow, and black) color model. The default PostScript color model is RGB (red, green, blue). PostScript CMYK files require a PostScript Language Level 2 interpreter. Therefore, when this keyword is set, the <a href="#devices_517620971_144167" class="selected">LANGUAGE_LEVEL</a> keyword value is set to 2.</p>
        <h3 class="Keyword"><a name="devices_517620971_144479"></a><a name="devices_517620971_14091"></a><a name="kanchor513"></a>COLOR</h3>
        <p>(PCL, PS)</p>
        <p>Set this keyword to enable color PCL or PostScript output.</p>
        <h3 class="Keyword"><a name="devices_517620971_144313"></a><a name="devices_517620971_83858"></a><a name="kanchor514"></a>COLORS</h3>
        <p>(CGM, TEK)</p>
        <p>This keyword specifies the maximum number of colors and the size of the color table used for output. The value of the system variable fields !D.N_COLORS and !D.TABLE_SIZE are set to this value and !P.COLOR is set to one less than this value.</p>
        <h4>For Tektronix Terminals Only</h4>
        <p>This keyword sets the number of colors supported by a 4100 series terminal. For example, if your terminal has 4-bit planes, the number of colors is 2<sup>4</sup> = 16:</p>
        <p class="Code">DEVICE, COLORS = 16</p>
        <p>Valid values of this parameter are: 2, 4, 8, 16, or 64; other values will cause problems. Some Tektronix terminals will not operate properly if this parameter does not exactly match the number of colors available in the terminal hardware.</p>
        <p>This parameter sets the field !D.N_COLORS, which affects the loading of color tables, the scaling used by the TVSCL procedure, and the number of bits output by the TV procedure to the terminal. It also changes the default color, !P.COLOR to the number of colors minus one.</p>
        <h3 class="Keyword"><a name="devices_517620971_143954"></a><a name="devices_517620971_36137"></a><a name="kanchor515"></a><a name="kanchor516"></a>COPY</h3>
        <p>(WIN, X)</p>
        <p>Use this keyword to copy a rectangular area of pixels from one region of a window to another. COPY should be set a six or seven element array: [<i>X</i><sub class="italic">s</sub>, <i>Y</i><sub class="italic">s</sub>, <i>N</i><sub class="italic">x</sub>, <i>N</i><sub class="italic">y</sub>, <i>X</i><sub class="italic">d</sub>, <i>Y</i><sub class="italic">d</sub>, <i>W</i>], where: (<i>X</i><sub class="italic">s</sub>, <i>Y</i><sub class="italic">s</sub>) is the lower left corner of the source rectangle, (<i>N</i><sub class="italic">x</sub>, <i>N</i><sub class="italic">y</sub>) are the number of columns and rows in the rectangle, and (<i>X</i><sub class="italic">d</sub>, <i>Y</i><sub class="italic">d</sub>) is the coordinate of the destination rectangle. Optionally, <i>W </i>is the index of the window <i>from which the pixels should be copied to the current </i>window. If it is not supplied, the current window is used as both the source and destination.</p>
        <h3 class="Keyword"><a name="devices_517620971_144503"></a><a name="devices_517620971_25680"></a><a name="kanchor517"></a>COURIER</h3>
        <p>(PS)</p>
        <p>Set this keyword to select the Courier PostScript font.</p>
        <h3 class="Keyword"><a name="devices_517620971_144502"></a><a name="devices_517620971_69514"></a><a name="kanchor518"></a>CURSOR_CROSSHAIR</h3>
        <p>(WIN, X)</p>
        <p><a name="kanchor519"></a>Set this keyword to select the crosshair cursor type. This is the IDL default.</p>
        <h3 class="Keyword"><a name="devices_517620971_143934"></a><a name="devices_517620971_38723"></a><a name="kanchor520"></a>CURSOR_IMAGE</h3>
        <p>(WIN, X)</p>
        <p><a name="kanchor521"></a>Specifies the cursor pattern. The value of this keyword must be a 16-line by 16-column bitmap, contained in a 16-element short integer vector. The offset from the upper left pixel to the point that is considered the hot spot can be provided via the CURSOR_XY keyword.</p>
        <h3 class="Keyword"><a name="devices_517620971_144824"></a><a name="devices_517620971_37523"></a>CURSOR_MASK</h3>
        <p>(WIN, X)</p>
        <p>When the CURSOR_IMAGE keyword is used to specify a cursor bitmap, the CURSOR_MASK keyword can be used to simultaneously specify the mask that should be used. In the mask, bits that are set indicate bits in the CURSOR_IMAGE that should be seen and bits that are not set are masked out.</p>
        <p>By default, the CURSOR_IMAGE bitmap is used for both the image and the mask. This can cause the cursor to be invisible on a black background (because only black pixels are allowed to be displayed). </p>
        <h3 class="Keyword"><a name="devices_517620971_144828"></a><a name="devices_517620971_18365"></a>CURSOR_ORIGINAL</h3>
        <p>(WIN, X)</p>
        <p>Set this keyword to select the window system’s default cursor. Under X Windows, it is the cursor in use by the root window when IDL starts. For the Microsoft Windows device, it is the arrow pointer.</p>
        <h3 class="Keyword"><a name="devices_517620971_144830"></a><a name="devices_517620971_23530"></a><a name="kanchor522"></a>CURSOR_STANDARD</h3>
        <p>(WIN, X)</p>
        <p><a name="kanchor523"></a>This keyword can be used to change the cursor appearance in IDL graphics windows. </p>
        <h4>For X Windows</h4>
        <p>This keyword selects one of the predefined cursors provided by the X Window system. The available cursors shapes are defined in the file <code>cursorfont.h</code> in the directory <code>/usr/include/X11</code>. In order to use one of these cursors, you select the number of the cursor and provide it as the value of the CURSOR_STANDARD keyword. For example, the file gives the value of XC_CROSS as being 30. In order to make that the current cursor, use the statement:</p>
        <p class="Code">DEVICE, CURSOR_STANDARD=30</p>
        <h4>For Microsoft Windows</h4>
        <p>The table below shows the values for CURSOR_STANDARD that result in different cursor shapes. For example, to change the cursor to an “I-beam” when the cursor is in an IDL graphics window, use the command:</p>
        <p class="Code">DEVICE, CURSOR_STANDARD = 32513</p>
        <p>&#160;</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Value</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Cursor Shape</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>32512</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Arrow</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>32513</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>I-Beam</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>32514</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Hourglass</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>32515</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Black Crosshair</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>32516</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Up Arrow</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>32640</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Size </p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>32641</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Icon </p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>32642</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Size NW-SE</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>32643</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Size NE-SW</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>32644</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Size E-W</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>32645</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Size N-S</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>32646</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Size All</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>32648</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Not Allowed</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>32649</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Pointing Hand</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>32650</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Arrow Hourglass</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p>32651</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColEnd">
                        <p>Help</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h3 class="Keyword"><a name="devices_517620971_143722"></a><a name="devices_517620971_36139"></a><a name="kanchor524"></a>CURSOR_XY</h3>
        <p>(WIN, X)</p>
        <p>A two element integer vector giving the (X, Y) pixel offset of the cursor hot spot, the point which is considered to be the mouse position, from the lower left corner of the cursor image. This parameter is only applicable if CURSOR_IMAGE is provided. The cursor image is displayed top-down—the first row is displayed at the top.</p>
        <h3 class="Keyword"><a name="devices_517620971_144834"></a><a name="devices_517620971_43305"></a><a name="kanchor525"></a>DECOMPOSED</h3>
        <p>(PS, WIN, X, Z)</p>
        <p>Set this keyword to control how color values are interpreted when using displays with <i>decomposed color</i> (<a name="kanchor526"></a>TrueColor or <a name="kanchor527"></a>DirectColor visuals). This keyword has no effect on indexed-color devices, which generally specify color using 8 bits per pixel.</p>
        <p>Set this keyword to 1 to cause color values to be interpreted as 24-bit color specifications. IDL interprets the specified value as three 8&#8209;bit color values, where the least-significant 8 bits contain the red value, the next 8 bits contain the green value, and the most-significant 8 bits contain the blue value. For example, the following lines draw a plot in purple on a device capable of rendering 24-bit color:</p>
        <p class="Code">DEVICE, DECOMPOSED=1, COLOR=1</p>
        <p class="Code">PLOT, INDGEN(10), COLOR='FF00FF'x</p>
        <p>Here, the color value <code>'FF00FF'x</code> is hexadecimal notation for the RGB triple <code>[255,0,255]</code>.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Unlike IDL object graphics, IDL’s direct graphics devices do not accept RGB triples as color specifications. Hexadecimal notation is generally the easiest way to specify 24-bit color values to direct graphics devices.</p>
        <p>Set this keyword to 0 to cause color values to be interpreted as indices into a color lookup table. IDL interprets the least-significant 8 bits of the color value as the color table index. This setting allows users with decomposed color displays to use IDL programs written for indexed-color displays without modification.</p>
        <p class="Code">DEVICE, DECOMPOSED=0, COLOR=1</p>
        <p class="Code">LOADCT, 7</p>
        <p class="Code">PLOT, INDGEN(10), COLOR=180</p>
        <p>Here, the color value <code>180</code> is interpreted as an index into color table 7 (Red-Purple). Note that specifying <code>COLOR='0000B4'x</code> would produce the same result, since <code>B4</code> is the hexadecimal notation of decimal <code>180</code>.</p>
        <p>In older versions of IDL, <a name="kanchor528"></a>color index values higher than !D.N_COLORS-1 were clipped to !D.N_COLORS-1 in the higher level graphics routines. In some cases, this clipping caused the exclusive-OR graphics mode to malfunction with raster displays. This clipping has been removed. Programs that incorrectly specified color indices higher than !D.N_COLORS-1 will now probably exhibit different behavior.</p>
        <p>The value of the DECOMPOSED keyword remains in effect until changed or until the IDL session ends. Use the <a href="#devices_517620971_554681" class="selected">GET_DECOMPOSED</a> keyword to DEVICE to retrieve the current value.</p>
        <h3 class="Keyword"><a name="devices_517620971_143930"></a><a name="devices_517620971_12204"></a><a name="kanchor529"></a>DEMI</h3>
        <p>(PS)</p>
        <p>Set this keyword to specify that the demi version of the current PostScript font should be used.</p>
        <h3 class="Keyword"><a name="devices_517620971_145006"></a><a name="devices_517620971_92319"></a><a name="kanchor530"></a>DIRECT_COLOR</h3>
        <p>(X)</p>
        <p>Set this keyword to select the <a name="kanchor531"></a>DirectColor visual. The value of the keyword represents the number of bits per pixel. This keyword has effect only if no windows have been created.</p>
        <h3 class="Keyword"><a name="devices_517620971_143752"></a><a name="devices_517620971_61030"></a><a name="kanchor532"></a>EJECT</h3>
        <p>(HP)</p>
        <p>In order to perform an erase operation on a plotter, it is necessary to remove the current sheet of paper and load a fresh sheet. The ability of various plotters to do this varies, so the EJECT keyword allows you to specify what should be done. The following table describes the possible values.</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Value</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Meaning</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>0</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Do nothing. Note that this is likely to cause one page to plot over the previous one, so you should limit yourself to one page of output per file. This is the default.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>1</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Use the sheet feeder to load the next page.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p>2</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p>Put the plotter off-line at the beginning of each page after the first.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>Many HP-GL plotters lack a <a name="kanchor533"></a>sheet feeder, and require the user to load the next page manually. Therefore, the default action is for IDL to not issue any page eject instructions. In this case, you must restrict yourself to generating only a single plot at a time. If your plotter has a sheet feeder, you will want to issue the command:</p>
        <p class="Code">DEVICE, /EJECT</p>
        <p>to tell IDL that it should use the sheet feeder instead of placing the plotter off-line.</p>
        <p>If your plotter does not have a sheet feeder, but it does understand the HP-GL NR command, use the command:</p>
        <p class="Code">DEVICE, EJECT=2</p>
        <p>to place the plotter off-line at the start of every plot except the first one. This causes the plotter to wait between plots for the user to replace the paper. When the user puts the plotter back on-line, the graphics commands for the new page are executed by the plotter. Consult the programming manual for your plotter to determine if this instruction is provided.</p>
        <h3 class="Keyword"><a name="devices_517620971_143751"></a><a name="devices_517620971_38739"></a><a name="kanchor534"></a>ENCAPSULATED</h3>
        <p>(PS)</p>
        <p>Set this keyword to create an encapsulated PostScript file, suitable for <a name="kanchor535"></a>importing into another document (for example, a LaTeX or other word processing application).</p>
        <p>Normally, IDL assumes that its PostScript-generated output will be sent directly to a printer. It therefore includes PostScript commands to position the plot on the page and to eject the page from the printer. These commands are undesirable if the output is going to be inserted into the middle of another PostScript document. If ENCAPSULATED is present and non-zero, IDL does not generate these commands.</p>
        <p>IDL follows the standard PostScript convention for encapsulated files. It assumes the standard PostScript scaling is in effect (72 points per inch), In addition, it declares the size, or <i>bounding box </i>of the plotting region at the top of the output file. This size is determined when the output file is opened (when the first graphics command is given), by multiplying the size of the plotting region (as specified with the XSIZE and YSIZE keywords) by the current scale factor (as specified by the SCALE_FACTOR keyword).</p>
        <p>Changing the size of the plotting region or scale factor once graphics have been output will not be reflected in the declared bounding box, and will confuse programs that attempt to import the resulting graphics. Therefore, when generating encapsulated PostScript, do not change the plot region size or scaling factor once any graphics commands have been issued. If you need to change these parameters, use the FILENAME keyword to start a new file.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>You must explicitly set this keyword to zero to create “regular” PostScript output after creating encapsulated output. (That is, like most keyword settings to the DEVICE procedure, the setting “sticks” until you change it, or until you quit IDL.)</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>IDL uses the value of this keyword to determine what type of output to generate when it starts writing to a file.  Changes to this keyword value will not appear in DEVICE, /HELP until a new file is started.</p>
        <h3 class="Keyword"><a name="devices_517620971_144315"></a><a name="devices_517620971_21711"></a><a name="kanchor536"></a>ENCODING</h3>
        <p>(CGM)</p>
        <p>Set this keyword to set the CGM encoding type for the output file. Valid values are: </p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Value</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Description</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>1</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Binary encoding - the default.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>2</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Text encoding.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p>3</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p>NCAR binary encoding.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>The encoding type can only be changed when no CGM file is open.</p>
        <h3 class="Keyword"><a name="devices_517620971_143748"></a><a name="devices_517620971_35644"></a><a name="kanchor537"></a>FILENAME</h3>
        <p>(CGM, HP, METAFILE, PCL, PS, REGIS, TEK)</p>
        <p><a name="kanchor538"></a>Normally, all generated output is sent to a file named <code>idl.xxx</code>, where <code>xxx</code> is the lowercase name of the device shown in the table under <a href="../../Direct Graphics/Supported_Devices.htm">Supported Devices</a>. The FILENAME keyword can be used to change these defaults. If FILENAME is specified:</p>
        <ol>
            <li value="1">If the file is already open (as happens if plotting commands have been directed to the file since the call to SET_PLOT), then the file is completed and closed as if CLOSE_FILE had been specified.</li>
            <li value="2">The specified file is opened for subsequent graphics output.</li>
        </ol>
        <h4>HP-GL Only</h4>
        <p>Under UNIX, if you wish to send HP-GL output directly to a plotter without generating an intermediate file, you should specify the device special file for the plotter as the argument to FILENAME. For example, if your plotter is connected to a serial input/output port known on your system as <code>/dev/ttya</code>, you would issue the command:</p>
        <p class="Code">DEVICE, FILENAME='/dev/ttya'</p>
        <p>All subsequent HP-GL output is sent directly to the plotter connected to serial port <code>/dev/ttya</code>.</p>
        <h3 class="Keyword"><a name="devices_517620971_144833"></a><a name="devices_517620971_51831"></a><a name="kanchor539"></a>FLOYD</h3>
        <p>(PCL, X)</p>
        <p>Set this keyword to select the Floyd-Steinberg method of dithering. This algorithm distributes the error, due to displaying intermediate shades in either black or white, to surrounding pixels. This method generally gives the most pleasing results but requires the most computer time.</p>
        <h3 class="Keyword"><a name="devices_517620971_143943"></a><a name="devices_517620971_41525"></a><a name="kanchor540"></a>FONT_INDEX</h3>
        <p>(PS)</p>
        <p>An integer representing the font index to be mapped to the current PostScript font.</p>
        <p>Normally the font specification keywords (AVANTGARDE, etc.) take effect immediately to change the current font. The FONT_INDEX keyword alters this behavior. The current font is not changed. Instead, the specified font is mapped to the specified font index. This mapping can then be used within text strings to change the font in the middle of the string.</p>
        <h3 class="Keyword"><a name="devices_517620971_144522"></a><a name="devices_517620971_53799"></a><a name="kanchor541"></a>FONT_SIZE</h3>
        <p>(PS)</p>
        <p>The default height used for displayed text. FONT_SIZE is given in points (a common typesetting unit of measure). The default size is 12 point text.</p>
        <h3 class="Keyword"><a name="devices_517620971_144518"></a><a name="devices_517620971_10442"></a><a name="kanchor542"></a>GET_CURRENT_FONT</h3>
        <p>(METAFILE, PRINTER, WIN, X)</p>
        <p><a name="kanchor543"></a>Set this keyword to a named variable in which the name of the current font is returned as a scalar string. An empty string is returned if the Windows font is the default font. If the current device is PRINTER or METAFILE, the current font is returned.</p>
        <h3 class="Keyword"><a name="devices_517620971_554681"></a><a name="kanchor544"></a><a name="devices_517620971_41973"></a>GET_DECOMPOSED</h3>
        <p>(PS, WIN, X, Z)</p>
        <p>Set this keyword to a named variable in which is returned the current state of the decomposed flag in the current direct graphics device. </p>
        <h3 class="Keyword"><a name="devices_517620971_554610"></a><a name="devices_517620971_99342"></a><a name="kanchor545"></a>GET_FONTNAMES</h3>
        <p>(METAFILE, PRINTER, WIN, X)</p>
        <p><a name="kanchor546"></a>Set this keyword to a named variable in which a string array containing the names of available fonts is returned. If no fonts are found, a null scalar string is returned. This keyword must be used in conjunction with the SET_FONT keyword. Set the SET_FONT keyword to a scalar string containing the name of the desired font or to a wildcard. For example, the following command will return in the variable <code>fnames</code> the names of all available fonts:</p>
        <p class="Code">DEVICE, GET_FONTNAMES=fnames, SET_FONT='*'</p>
        <h3 class="Keyword"><a name="devices_517620971_144326"></a><a name="devices_517620971_68934"></a><a name="kanchor547"></a>GET_FONTNUM</h3>
        <p>(METAFILE, PRINTER, WIN, X)</p>
        <p><a name="kanchor548"></a>Set this keyword to a named variable in which the number of fonts available to your installation is returned. This keyword must be used in conjunction with the SET_FONT keyword. Set the SET_FONT keyword to a scalar string containing the name of the desired font or a wildcard. For example, the following command will return in the variable <code>numfonts</code> the number of available fonts:</p>
        <p class="Code">DEVICE, GET_FONTNUM=numfonts, SET_FONT='*'</p>
        <h3 class="Keyword"><a name="devices_517620971_145007"></a><a name="devices_517620971_29131"></a><a name="kanchor549"></a>GET_GRAPHICS_FUNCTION</h3>
        <p>(WIN, X, Z)</p>
        <p>Set this keyword to a named variable that will contain the value of the current graphics function (which is set with the SET_GRAPHICS_FUNCTION keyword). This can be used to remember the current graphics function, change it temporarily, and then restore it. See the <a href="#devices_517620971_499029" class="selected">SET_GRAPHICS_FUNCTION</a> keyword for an example.</p>
        <h3 class="Keyword"><a name="devices_517620971_587045"></a><a name="kanchor550"></a><a name="devices_517620971_50321"></a>GET_PAGE_SIZE</h3>
        <p>(PRINTER)</p>
        <p>Set this keyword to a named variable that will contain a two-element vector that contains the width and height of the page size in pixels.</p>
        <h3 class="Keyword"><a name="devices_517620971_878857"></a><a name="devices_517620971_93870"></a>GET_PIXEL_DEPTH</h3>
        <p>(Z)</p>
        <p>Set this keyword to a named variable that will contain the current pixel depth of the current direct graphics device.</p>
        <h3 class="Keyword"><a name="devices_517620971_149759"></a><a name="devices_517620971_27263"></a><a name="kanchor551"></a>GET_SCREEN_SIZE</h3>
        <p>(WIN, X)</p>
        <p>Set this keyword to a named variable in which to return a two-word array that contains the width and height of the server’s screen, in pixels.</p>
        <h3 class="Keyword"><a name="devices_517620971_452299"></a><a name="kanchor552"></a><a name="devices_517620971_36687"></a>GET_VISUAL_DEPTH</h3>
        <p>(WIN, X)</p>
        <p>Set this keyword to a named variable into which a long integer is returned containing the depth of the visual associated with this device. Under X, if the X server is not connected when you call the DEVICE procedure with this keyword set, a new connection is made.</p>
        <h3 class="Keyword"><a name="devices_517620971_551382"></a><a name="kanchor553"></a><a name="devices_517620971_11984"></a>GET_VISUAL_NAME</h3>
        <p>(WIN, X)</p>
        <p>Set this keyword equal to a named variable in which a string containing the name of the current visual class IDL is using is returned. Possible return values are:</p>
        <ul>
            <li value="1">StaticGray (X only)</li>
            <li value="2">GrayScale (X only)</li>
            <li value="3">StaticColor (X only)</li>
            <li value="4">PseudoColor</li>
            <li value="5">TrueColor</li>
            <li value="6">DirectColor (X only)</li>
        </ul>
        <p>Under X, if no connection to the X server has been established when the DEVICE procedure is called with this keyword set, a new connection is made.</p>
        <h3 class="Keyword"><a name="devices_517620971_143947"></a><a name="kanchor554"></a><a name="devices_517620971_83739"></a>GET_WINDOW_POSITION</h3>
        <p>(WIN, X)</p>
        <p>Set this keyword to a named variable that returns a two-element array containing the (X,Y) position of the lower left corner of the current <a name="kanchor555"></a>window on the screen. The origin is also in the lower left corner of the screen.</p>
        <h3 class="Keyword"><a name="devices_517620971_143949"></a><a name="devices_517620971_37885"></a><a name="kanchor556"></a>GET_WRITE_MASK</h3>
        <p>(WIN, X, Z)</p>
        <p>Specifies the name of a variable that will contain the current value of the write mask.</p>
        <h3 class="Keyword"><a name="devices_517620971_143951"></a><a name="devices_517620971_84491"></a><a name="kanchor557"></a>GIN_CHARS</h3>
        <p>(TEK)</p>
        <p>The number of characters IDL is to read when accepting a GIN (Graphics INput) report. The default is 5. If your terminal is configured to send a carriage return at the end of each GIN report, set this parameter to 6. If the number of GIN characters is too large, the IDL <a name="kanchor558"></a>CURSOR procedure will not respond until two or more keys are struck. If it is too small, the extra characters sent by the terminal will appear as input to the next IDL prompt.</p>
        <h3 class="Keyword"><a name="devices_517620971_499334"></a><a name="devices_517620971_GLYPH_CACHE_keyword"></a>GLYPH_CACHE </h3>
        <p>(METAFILE, PRINTER, PS, WIN, Z)</p>
        <p>Set this keyword to a scalar specifying the maximum number of glyphs to cache at any given time. The first time a glyph from a TrueType font is used, it is tessellated into triangles. These triangles are cached so that the tessellation step is not repeated for each use of that glyph. If the glyph cache fills, the least used glyph will be released before a new glyph is generated and cached. The default is 256.</p>
        <h3 class="Keyword"><a name="devices_517620971_144524"></a><a name="devices_517620971_14967"></a><a name="kanchor559"></a>HELVETICA</h3>
        <p>(PS)</p>
        <p>Set this keyword to select the Helvetica PostScript font.</p>
        <h3 class="Keyword"><a name="devices_517620971_144166"></a><a name="devices_517620971_41095"></a><a name="kanchor560"></a>INCHES</h3>
        <p>(HP, METAFILE, PCL, PRINTER, PS)</p>
        <p>Normally, the XOFFSET, XSIZE, YOFFSET, and YSIZE keywords are specified in centimeters. However, if INCHES is present and non-zero, they are taken to be in inches instead.</p>
        <h3 class="Keyword"><a name="devices_517620971_451483"></a><a name="kanchor561"></a><a name="devices_517620971_23154"></a>INDEX_COLOR</h3>
        <p>(METAFILE, PRINTER)</p>
        <p>Set this keyword to place the printer or MetaFile device in index color mode. This is the default. This keyword is applicable only when the printer or MetaFile device is selected.</p>
        <h3 class="Keyword"><a name="devices_517620971_144322"></a><a name="devices_517620971_61695"></a><a name="kanchor562"></a>ISOLATIN1</h3>
        <p>(PS)</p>
        <p>Set this keyword to use Adobe ISO Latin 1 font encoding with any font that supports such coding. Use of this keyword allows access to many commonly-used foreign characters.</p>
        <h3 class="Keyword"><a name="devices_517620971_143723"></a><a name="devices_517620971_98010"></a><a name="kanchor563"></a>ITALIC</h3>
        <p>(PS)</p>
        <p>Set this keyword to specify that the italic version of the current PostScript font should be used.</p>
        <h3 class="Keyword"><a name="devices_517620971_606950"></a><a name="devices_517620971_10843"></a><a name="kanchor564"></a>LANDSCAPE</h3>
        <p>(HP, PCL, PRINTER, PS)</p>
        <p><a name="kanchor565"></a>IDL normally generates plots with portrait orientation (the abscissa is along the short dimension of the page). If the LANDSCAPE keyword is set, landscape orientation (abscissa along the long dimension of the page) is used instead. Note that explicitly setting LANDSCAPE=0 is the same as setting the <a href="#devices_517620971_144170" class="selected">PORTRAIT</a> keyword.</p>
        <p>If the current device is PRINTER, and a page is open in the printer, it is closed and a new page set to landscape layout is started.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The ability to set a printer to landscape mode is printer-driver dependent. Your printer may not support this functionality; use the system native print setup dialog to set the orientation of the print job.</p>
        <h3 class="Keyword"><a name="devices_517620971_144167"></a><a name="devices_517620971_16495"></a>LANGUAGE_LEVEL</h3>
        <p>(PS)</p>
        <p>Set this keyword to indicate the language level of the <a name="kanchor566"></a>PostScript output that is to be generated by the device. Valid values include 1 (the default) and 2 (required for some features, such as filled patterns for polygons).</p>
        <h3 class="Keyword"><a name="devices_517620971_618160"></a><a name="devices_517620971_33991"></a><a name="kanchor567"></a>LIGHT</h3>
        <p>(PS)</p>
        <p>Set this keyword to specify that the light version of the current PostScript font should be used.</p>
        <h3 class="Keyword"><a name="devices_517620971_144529"></a><a name="devices_517620971_84105"></a><a name="kanchor568"></a>MEDIUM</h3>
        <p>(PS)</p>
        <p>Set this keyword to specify that the medium version of the current PostScript font should be used.</p>
        <h3 class="Keyword"><a name="devices_517620971_417784"></a><a name="devices_517620971_72954"></a><a name="kanchor569"></a>NARROW</h3>
        <p>(PS)</p>
        <p>Set this keyword to specify that the narrow version of the current PostScript font should be used.</p>
        <h3 class="Keyword"><a name="devices_517620971_144157"></a><a name="devices_517620971_10275"></a><a name="kanchor570"></a>NCAR</h3>
        <p>(CGM)</p>
        <p>Set this keyword to set the encoding type for the CGM output file to NCAR binary.</p>
        <h4>The <a name="kanchor571"></a>NCAR Binary Encoding</h4>
        <p>The NCAR binary encoding is used exclusively by the NCAR graphics package. Version 3.01 of NCAR View (<code>ctrans</code>, <code>ictrans</code>, and <code>cgm2ncgm</code>) does not correctly handle the following graphic elements:</p>
        <ul>
            <li value="1">Cell arrays (raster images) with an odd number of pixels in the X dimension. Solution: specify an even number of pixels for the X dimension or make the image one column wider and fill with zeros.</li>
            <li value="2">Raster images drawn in top down order. Solution: invert the image prior to using TV or TVSCL and do not use the /ORDER keyword. For example:</li>
        </ul>
        <p class="Code_Indented">TV, image</p>
        <p class="Code_Indented">; Draw image top to bottom:</p>
        <p class="Code_Indented">TV, ROTATE(image, 7)</p>
        <h3 class="Keyword"><a name="devices_517620971_562813"></a><a name="devices_517620971_50254"></a><a name="kanchor572"></a>OBLIQUE</h3>
        <p>(PS)</p>
        <p>Set this keyword to specify that the oblique version of the current PostScript font should be used.</p>
        <h3 class="Keyword"><a name="devices_517620971_144405"></a><a name="devices_517620971_14011"></a><a name="kanchor573"></a>OPTIMIZE</h3>
        <p>(PCL)</p>
        <p>It is desirable, though not always possible, to compress the size of the PCL output file. Such optimization reduces the size of the output file, and improves I/O speed to the printer. There are three levels of optimization: </p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Value </p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Description</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>0</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>No optimization is performed. This is the default because it will work with any PCL device. However, users of devices which can support optimization should use one of the other optimization levels.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>1</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Optimization is performed using PCL optimization primitives. This gives the best output compression and printing speed. Unfortunately, not all PCL devices support it. On those that can’t, the result will be garbage printed on the page. Consult the programmers manual for your printer to determine if it supports the required escape sequences. The required sequences are: <code>&lt;ESC&gt;*b0M</code> (select full graphics mode), <code>&lt;ESC&gt;*b1M</code> (select compacted graphics mode 1), and <code>&lt;ESC&gt;*b2M</code> (select compacted graphics mode 2). The HP LaserJet II does not support this optimization level. The DeskJet PLUS does.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p>2</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p>IDL attempts to optimize the output by explicitly moving the left margin and then outputting non-blank sections of the page. This is primarily intended for use with the LaserJet II, which does not support optimization level 1. Note: This optimization can be very slow on some devices (such as the DeskJet PLUS). On such devices, it is best to avoid this optimization level.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h3 class="Keyword"><a name="devices_517620971_143941"></a><a name="devices_517620971_17648"></a><a name="kanchor574"></a>ORDERED</h3>
        <p>(PCL, X)</p>
        <p>Set this keyword to select the ordered dither method. This introduces a pseudo-random error into the display by using a 4 by 4 “dither” matrix, yielding 16 apparent intensities. This is the default method.</p>
        <h3 class="Keyword"><a name="devices_517620971_144538"></a><a name="devices_517620971_47101"></a><a name="kanchor575"></a>OUTPUT</h3>
        <p>(HP, PS)</p>
        <p>Specifies a scalar string that is sent directly to the graphics output file without any processing, allowing the user to send arbitrary commands to the file. Since IDL does not examine the string, it is the user’s responsibility to ensure that the string is correct for the target device.</p>
        <h3 class="Keyword"><a name="devices_517620971_144366"></a><a name="devices_517620971_30232"></a><a name="kanchor576"></a>PALATINO</h3>
        <p>(PS)</p>
        <p>Set this keyword to select the Palatino PostScript font.</p>
        <h3 class="Keyword"><a name="devices_517620971_144468"></a><a name="devices_517620971_56239"></a><a name="kanchor577"></a>PIXELS</h3>
        <p>(PCL)</p>
        <p>Normally, the XOFFSET, XSIZE, YOFFSET, and YSIZE keywords are specified in centimeters. However, if the PIXELS keyword is set, they are taken to be in pixels instead. Note that the selected resolution will determine how large a region is actually written on the page.</p>
        <h3 class="Keyword"><a name="devices_517620971_485584"></a><a name="devices_517620971_86126"></a><a name="kanchor578"></a>PLOT_TO</h3>
        <p>(REGIS, TEK)</p>
        <p>Directs the Tektronix graphic output that would normally go to the user’s terminal to the specified I/O unit. The logical unit specified should be open with write access to a device or file. Graphic output may be saved in files for later playback, redirected to other terminals, or to devices that can accept Textronix graphic commands.</p>
        <p>Do not use the interactive graphics cursor when graphic output is not directed to your terminal.</p>
        <p>To direct the graphic data to both the terminal and the file, set the unit to the negative of the actual unit number. Alternatively, you can use the TTY keyword, described below.</p>
        <p>If the specified unit number is zero then Tektronix output to the file is stopped.</p>
        <h3 class="Keyword"><a name="devices_517620971_144371"></a><a name="devices_517620971_28324"></a><a name="kanchor579"></a>PLOTTER_ON_OFF</h3>
        <p>(HP)</p>
        <p>There are some configurations in which a HP-GL plotter is connected between the computer and a terminal. In this mode (known as eavesdrop mode), the plotter ignores everything it is sent and passes it through to the terminal—the plotter is logically off. This state continues until an escape sequence is sent that turns the plotter logically on. At this point the plotter interprets and executes all input as HP-GL commands. Another escape sequence is sent at the end of the HP-GL commands to return the plotter to the logically off state.</p>
        <p>Most configurations do not use eavesdrop mode, and the plotter is always logically on. However, if you are using this style of connection, you must use PLOTTER_ON_OFF to instruct IDL to generate the necessary on/off commands. If present and non-zero, PLOTTER_ON_OFF causes each output page to be bracketed by device control commands that turn the plotter logically on and off. Specifying a value of zero stops the issuing of such commands. You should only use this keyword before any output has been generated.</p>
        <h3 class="Keyword"><a name="devices_517620971_144368"></a><a name="devices_517620971_90310"></a><a name="kanchor580"></a>POLYFILL</h3>
        <p>(HP)</p>
        <p>Some plotters (e.g., HP7550A) can perform polygon filling in hardware, while others (e.g., HP7475) cannot. IDL therefore assumes that the plotter cannot, and generates all polygon operations in software using line drawing. Specifying a non-zero value for the POLYFILL keyword causes IDL to use the hardware polygon filling. Setting it to zero reverts to software filling.</p>
        <p>Different implementations of HP-GL plotters may have different limits for the number of vertices that can be specified for a polygon region before the plotter runs out of internal memory. Since this limit can vary, the HP-GL driver cannot check for calls to POLYFILL that specify too many points. Therefore, it is possible for the user to produce HP-GL output that causes an error when sent to the plotter. To avoid this situation, minimize the number of points used. On the HP7550A, the limit is about 127 points. If you do generate output that exceeds the limit imposed by your plotter, you will have to break that polygon filling operation into multiple smaller operations.</p>
        <h3 class="Keyword"><a name="devices_517620971_144170"></a><a name="devices_517620971_29147"></a><a name="kanchor581"></a>PORTRAIT</h3>
        <p>(HP, PCL, PRINTER, PS)</p>
        <p><a name="kanchor582"></a>Set the PORTRAIT keyword to generate plots using portrait orientation. Portrait orientation is the default. Note that explicitly setting PORTRAIT=0 is the same as setting the <a href="#devices_517620971_606950" class="selected">LANDSCAPE</a> keyword.</p>
        <p>If the current device is PRINTER, and a page is open in the printer, it is closed and a new page set to portrait layout is started.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The ability to set a printer to portrait mode is printer-driver dependent. Your printer may not support this functionality; use the system native print setup dialog to set the orientation of the print job.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This keyword is ignored when generating Encapsulated PostScript output. See <a href="#devices_517620971_143751" class="selected">ENCAPSULATED</a> for details.</p>
        <h3 class="Keyword"><a name="devices_517620971_144169"></a><a name="devices_517620971_33288"></a>PRE_DEPTH</h3>
        <p>(PS)</p>
        <p>Set this keyword to a value indicating the bit depth to be used for the preview in the PostScript file. Valid values are 1 (for black and white preview) and 8 (for 8-bit grayscale preview). This keyword applies only if the PREVIEW keyword is nonzero. The default depth is 8.</p>
        <h3 class="Keyword"><a name="devices_517620971_601831"></a><a name="devices_517620971_12300"></a>PRE_XSIZE</h3>
        <p>(PS)</p>
        <p>Set this keyword to the width to be used for the preview in the PostScript file. PRE_XSIZE is specified in centimeters, unless the INCHES keyword is set. This keyword applies only if the PREVIEW keyword value is nonzero. The default is 1.77778 inches (128 pixels at 72dpi).</p>
        <p>Also see the note below, <a href="#devices_517620971_601940" class="selected">A Note About Preview Dimensions</a>.</p>
        <h3 class="Keyword"><a name="devices_517620971_597448"></a><a name="devices_517620971_26449"></a>PRE_YSIZE</h3>
        <p>(PS)</p>
        <p>Set this keyword to the height to be used for the preview in the PostScript file. PRE_YSIZE is specified in centimeters, unless the INCHES keyword is set. This keyword applies only if the PREVIEW keyword value is nonzero. The default is 1.77778 inches (128 pixels at 72dpi).</p>
        <p>Also see the note below, <a href="#devices_517620971_601940" class="selected">A Note About Preview Dimensions</a>.</p>
        <h3 class="Keyword"><a name="devices_517620971_601886"></a><a name="devices_517620971_13498"></a><a name="kanchor583"></a>PREVIEW</h3>
        <p>(PS)</p>
        <p>Set this keyword to 1 to add a platform-independent preview to the PostScript output file in encapsulated PostScript interchange format (EPSI). EPSI is an ASCII format. Set this keyword to 2 to write the EPS file in EPSF format, including an on-screen preview that is supported by many Windows applications, e.g. MSWord. The default (0) is to not include a preview.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>EPSF is not an ASCII format and cannot be sent directly to a Postscript printer, unlike the EPSI format. It must be imported into an application for printing.</p>
        <h4><a name="devices_517620971_601940"></a><a name="devices_517620971_22356"></a>A Note About Preview Dimensions</h4>
        <p>Different applications may utilize the information within a PostScript file in different ways when displaying a screen preview. Some applications will ignore the preview contents entirely, and simply use the primary PostScript contents to generate a screen preview. Other applications will use the preview data and its corresponding dimensions for screen display. Still others will use the preview data and stretch it to the dimensions of the primary PostScript contents. It is therefore recommended that the target application (into which the encapsulated PostScript file is to be loaded) be considered when selecting an appropriate XSIZE, YSIZE, PRE_XSIZE, and PRE_YSIZE.</p>
        <h3 class="Keyword"><a name="devices_517620971_556886"></a><a name="devices_517620971_86758"></a>PRINT_FILE</h3><a name="kanchor584"></a>
        <p>(WIN)</p>
        <p>Set this keyword to the name of a file (e.g., PostScript or PCL) to be sent to the currently-selected Windows printer. IDL performs no type checking on this file before sending it to the printer. Therefore, if you have a PostScript printer selected and you send a file that contains no valid PostScript information, you’ll simply get text output.</p>
        <p>To send the file <code>myfile.ps</code> to the currently-selected Windows printer, enter:</p>
        <p class="Code">DEVICE, PRINT_FILE='myfile.ps'</p>
        <h3 class="Keyword"><a name="devices_517620971_144688"></a><a name="devices_517620971_20501"></a><a name="kanchor585"></a>PSEUDO_COLOR</h3>
        <p>(X)</p>
        <p>If this keyword is present, the <a name="kanchor586"></a>PseudoColor visual is used. The value of the keyword represents the number of bits per pixel to be used. This keyword has effect only if no windows have been created.</p>
        <h3 class="Keyword"><a name="devices_517620971_144455"></a><a name="devices_517620971_51443"></a><a name="kanchor587"></a>RESET_STRING</h3>
        <p>(TEK)</p>
        <p>The string used to place the terminal back into the normal interactive mode after drawing graphics. Use this parameter, in conjunction with the SET_STRING keyword, to control the mode switching of your terminal.</p>
        <p>For example, the GraphON 200 series terminals require the string <code>&lt;ESC&gt;2</code> to activate the alphanumeric window after drawing graphics. The call to set this is:</p>
        <p class="Code">DEVICE, RESET = string(27b) + '2'</p>
        <p>If the 4100 series mode switch is set, using the keyword TEK4100, the default mode resetting string is <code>&lt;ESC&gt;%!1</code>, which selects the ANSI code mode.</p>
        <h3 class="Keyword"><a name="devices_517620971_144473"></a><a name="devices_517620971_75184"></a><a name="kanchor588"></a>RESOLUTION</h3>
        <p>(PCL)</p>
        <h4>PCL Only</h4>
        <p>The resolution at which the PCL printer will work. PCL supports resolutions of 75, 100, 150, and 300 dots per inch. The default is 300 dpi. Lower resolution gives smaller output files, while higher resolution gives superior quality.</p>
        <h3 class="Keyword"><a name="devices_517620971_144472"></a><a name="devices_517620971_88341"></a><a name="kanchor589"></a>RETAIN</h3>
        <p>(WIN, X)</p>
        <p>Use this keyword to specify the default method used for backing store when creating new windows. This is the method used when the RETAIN keyword is not specified with the WINDOW procedure. If RETAIN is not used to specify the default method, method 1 (server-supplied backing store) is used.</p>
        <p>The initial value of this parameter is taken from the <a href="../../Creating IDL Programs/Appendices/prefs_gr_win.htm#preferences_2247882535_15675">IDL_GR_WIN_RETAIN</a> preference (Microsoft Windows) or the <a href="../../Creating IDL Programs/Appendices/prefs_gr_x.htm#preferences_2247882535_20550">IDL_GR_X_RETAIN</a> preference (UNIX). </p>
        <h4>A Note on Reading Data from Windows</h4>
        <p>On some systems, when backing store is provided by the window system (RETAIN=1), reading data from a window using TVRD may cause unexpected results. For example, data may be improperly read from the window even when the image displayed on screen is correct. Having IDL provide the backing store (RETAIN=2) ensures that the window contents will be read properly. These types of problems are described in more detail in the documentation for TVRD. See <a href="../T/TVRD.htm#dg_routines_3604229493_888970">Unexpected Results Using TVRD with X Windows</a>.</p>
        <h3 class="Keyword"><a name="devices_517620971_144547"></a><a name="devices_517620971_31237"></a><a name="kanchor590"></a>SCALE_FACTOR</h3>
        <p>(PRINTER, PS)</p>
        <p>Specifies a scale factor applied to the entire plot. The default value is 1.0, allowing output to appear at its normal size. SCALE_FACTOR is used to magnify or shrink the resulting output.</p>
        <p>The SCALE_FACTOR keyword behaves slightly differently in the context of the PRINTER device than it does in the context of the PS device.</p>
        <p>When the current device is PRINTER, the SCALE_FACTOR keyword is designed to emulate a scalable resolution setting on the printer. For example, if you have a 300 x 300 pixel image—stored in the variable <i>image</i>—the following IDL commands will print <i>image</i> in a 0.5 inch square on a 600 dpi printer: </p>
        <p class="Code">SET_PLOT, 'printer'</p>
        <p class="Code">TV, image</p>
        <p>Setting SCALE_FACTOR to 2 will scale the image to a 1 inch square on the same 600 dpi printer:</p>
        <p class="Code">SET_PLOT, 'printer'</p>
        <p class="Code">DEVICE, SCALE_FACTOR=2</p>
        <p class="Code">TV, image</p>
        <p>The output of IDL’s Direct Graphics routines (CONTOUR, PLOT, SURFACE, etc.) is automatically scaled to fill the available drawing area. As a result, the following IDL commands will produce two identical copies of the same output on any printer:</p>
        <p class="Code">SET_PLOT, 'printer'</p>
        <p class="Code">PLOT, data</p>
        <p class="Code">DEVICE, SCALE_FACTOR=2</p>
        <p class="Code">PLOT, data</p>
        <h3 class="Keyword"><a name="devices_517620971_144551"></a><a name="devices_517620971_59101"></a><a name="kanchor591"></a>SCHOOLBOOK</h3>
        <p>(PS)</p>
        <p>Set this keyword to select the New Century Schoolbook PostScript font.</p>
        <h3 class="Keyword"><a name="devices_517620971_486143"></a><a name="devices_517620971_92172"></a><a name="kanchor592"></a>SET_CHARACTER_SIZE</h3>
        <p>(CGM, HP, METAFILE, PCL, PRINTER, PS, REGIS, TEK, WIN, X, Z)</p>
        <p>Set this keyword equal to a two-element vector to specify the font size and line spacing (leading) of vector and TrueType fonts, and the line spacing of device fonts. The way that the value of this vector determines character size is not completely intuitive.</p>
        <p>The vector specified to the SET_CHARACTER_SIZE keyword sets the values of the X_CH_SIZE and Y_CH_SIZE fields in the !D structure. These values describe the size of the rectangle that contains the “average” character in the current font. (It is not important what the “average” character is; it is used only to calculate a scaling factor that will be applied to all of the characters in the font.) The first element specifies the width of the rectangle in device units (usually pixels), and the second element specifies the height.</p>
        <p>For vector and TrueType fonts, the height of the “average” character is determined by the <i>width</i> of the rectangle. The aspect ratio of the “average” character remains fixed; the character is scaled so that its width fits in the specified rectangle. The resulting scale factor is then applied to all of the characters in the font. The amount of spacing between lines (baseline to baseline) is determined explicitly by the height of the rectangle.</p>
        <p>For device fonts, the character size is fixed. When the device font system is in use, the first element of the vector specified to SET_CHARACTER_SIZE is silently ignored, and only the line-spacing value is used.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Changing between font systems (and sometimes changing from one font to another within the same font system) can also change the !D structure, so do not assume that the character size you have set is preserved when you change fonts.</p>
        <h3 class="Keyword"><a name="devices_517620971_161043"></a><a name="devices_517620971_94171"></a><a name="kanchor593"></a>SET_COLORMAP</h3>
        <p>(PCL)</p>
        <p>Set this keyword to a 14,739 (= 3 • 17<sup>3</sup>) element byte vector containing the RGB-to-printer color translation table for a color PCL printer. The default table is for an HP Deskjet 500C printer.</p>
        <p>The translation table is divided into red, green, and blue planes of 4913 (=17<sup>3</sup>) elements each. For a given RGB triple, the offset into each plane is calculated as follows:</p>
        <p class="Code">Offset = (Red/16)*289 + (Green/16)*17 + (Blue/16)</p>
        <p>Thus, if the RGB triple is [16,32,160], the offset into each plane is 333. The printer will use the value at element 332 of the translation table as the red value, the value at element 5245 (=4913+332) as the green value, and the value at element 10158 (=9826+332) as the blue value.</p>
        <p>The following example shows how to scale an existing colortable for use by a PCL printer.</p>
        <p class="Code">; Set the plot window to the X device:</p>
        <p class="Code">SET_PLOT, 'X'</p>
        <p class="Code">; Create a window:</p>
        <p class="Code">WINDOW,0,XS=300,YS=300</p>
        <p class="Code">; Load a color table:</p>
        <p class="Code">LOADCT,13</p>
        <p class="Code">; Read color table values into variables:</p>
        <p class="Code">TVLCT,r,g,b,/GET</p>
        <p class="Code">; Re-size color table variables:</p>
        <p class="Code">r2=CONGRID(r,4913)</p>
        <p class="Code">g2=CONGRID(g,4913)</p>
        <p class="Code">b2=CONGRID(b,4913)</p>
        <p class="Code">; Create 14,739-element color map:</p>
        <p class="Code">colormap=[r2,g2,b2]</p>
        <p class="Code">; Change to the PCL device:</p>
        <p class="Code">SET_PLOT, 'PCL'</p>
        <p class="Code">; Set file name, resolution, color, and color map:</p>
        <p class="Code">DEVICE, FILE = 'pcl.pcl', RESOLUTION = 300, $</p>
        <p class="Code">&#160;&#160;&#160;&#160;/COLOR, SET_COLORMAP = colormap</p>
        <p class="Code">; Display an image:</p>
        <p class="Code">TVSCL,DIST(900)</p>
        <p class="Code">; Close the device:</p>
        <p class="Code">DEVICE,/CLOSE</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The color table used need not be one of IDL’s predefined tables.</p>
        <h3 class="Keyword"><a name="devices_517620971_486222"></a><a name="devices_517620971_67838"></a>SET_COLORS</h3>
        <p>(Z)</p>
        <p>Sets the number of pixel values, !D.N_COLORS and !D.TABLE_SIZE. This value is used by a number of IDL routines to determine the scaling of pixel data and the default drawing index. Allowable values range from 2 to 256, and the default value is 256. Use this parameter to make the Z-buffer device compatible with devices with fewer than 256 colors indices. See <a href="../../Direct Graphics/Supported_Devices.htm#Z-Buffer">Z-Buffer</a> for information and examples.</p>
        <h3 class="Keyword"><a name="devices_517620971_499045"></a><a name="devices_517620971_25218"></a><a name="kanchor594"></a>SET_FONT</h3>
        <p>(METAFILE, PRINTER, PS, WIN, X, Z)</p>
        <p>Set this keyword to a scalar string specifying the name of the font used when a hardware or TrueType font is selected. Note that hardware fonts cannot be rotated, scaled, or projected, and that the “!” commands for formatting may not work. When generating three-dimensional plots, it is best to use the vector-drawn or TrueType characters.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>On some platforms, GET_FONT returns an empty string. When SET_FONT is passed an empty string, the first font that can be successfully loaded will be used. This is the first available font found in the user's resource file (<code>$HOME/.Xdefaults</code>) or the app-defaults file (<code><i>$IDL_DIR</i></code><code>/resource/X11/lib/app-defaults/Idl</code>). </p>
        <h4>Note on the FONT Keyword</h4>
        <p>The SET_FONT keyword was introduced with IDL version 5.1 and replaces the FONT and USER_FONT keywords used in previous versions.</p>
        <h4>Using TrueType Fonts</h4>
        <p>For TrueType fonts, the specified font name must exactly match one of the names in the first column of the <code>ttfont.map</code> file in the <code>resource/fonts/tt</code> directory or (on Windows platforms) the name of an installed font. Note that you must include the TT_FONT keyword to indicate that the font specified is a TrueType font. For example, the following sets the font to the font to the TrueType font Helvetica Bold Italic:</p>
        <p class="Code">DEVICE, SET_FONT='Helvetica Bold Italic', /TT_FONT</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>You can append additional TrueType fonts to the <code>ttfont.map</code> file if desired; on Windows platforms, additional fonts can also be added via the normal font installation procedures for your system. There is no guarantee that TrueType fonts you add will be satisfactorily tessellated or displayed.</p>
        <h4>Using Hardware Fonts</h4>
        <p>Because device fonts are specified differently on different platforms, the syntax of the <i>fontname</i> string depends on which platform you are using.</p>
        <h4>UNIX</h4>
        <p>Usually, the window system provides a directory of font files that can be used by all applications. List the contents of that directory to find the fonts available on your system. The size of the font selected also affects the size of vector drawn text. X Windows users can use the <code>xlsfonts</code> command to list available X Windows fonts.</p>
        <p>On some machines, fonts are kept in subdirectories of <code>/usr/lib/X11/fonts</code>.</p>
        <p>For example, to select the font 8X13:</p>
        <p class="Code">!P.FONT = 0</p>
        <p class="Code">DEVICE, SET_FONT = '8X13'</p>
        <h4>Microsoft Windows</h4>
        <p>The SET_FONT keyword should be set to a string with the following form:</p>
        <p class="Code">DEVICE, SET_FONT='<i>font</i>*<i>modifier</i><sub>1</sub>*<i>modifier</i><sub>2</sub>*...<i>modifier</i><sub>n</sub>'</p>
        <p>where the asterisk (*) acts as a delimiter between the font’s name (<i>font</i>) and any modifiers. The string is <i>not </i>case sensitive. Modifiers are simply “keywords” that change aspects of the selected font. Valid modifiers are:</p>
        <ul>
            <li value="1">For font weight: THIN, LIGHT, BOLD, HEAVY</li>
            <li value="2">For font quality: DRAFT, PROOF</li>
            <li value="3">For font pitch: FIXED, VARIABLE</li>
            <li value="4">For font angle: ITALIC</li>
            <li value="5">For strikeout text: STRIKEOUT</li>
            <li value="6">For underlined text: UNDERLINE</li>
            <li value="7">For font size: Any number is interpreted as the font height in pixels.</li>
        </ul>
        <p>For example, if you have Garamond installed as one of your Windows fonts, you could select 24-pixel cell height Garamond italic as the font to use in plotting. The following commands tell IDL to use hardware fonts, change the font, and then make a simple plot:</p>
        <p class="Code">!P.FONT = 0</p>
        <p class="Code">DEVICE, SET_FONT = 'GARAMOND*ITALIC*24'</p>
        <p class="Code">PLOT, FINDGEN(10), TITLE = 'IDL Plot'</p>
        <p>This feature is compatible with <a name="kanchor595"></a>TrueType and <a name="kanchor596"></a>Adobe Type Manager (and, possibly, other type scaling programs for Windows). If you have TrueType or ATM installed, the TrueType or PostScript outline fonts are used so that text looks good at any size.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If you set the output device to PostScript (<code>SET_PLOT, 'PS')</code>, attempting to use the (*) delimiter with SET_PLOT will cause an error. You must use SET_PLOT with specific PostScript font strings. </p>
        <h3 class="Keyword"><a name="devices_517620971_499029"></a><a name="devices_517620971_78342"></a><a name="kanchor597"></a>SET_GRAPHICS_FUNCTION</h3>
        <p>(WIN, X, Z)</p>
        <p>Most window systems allow applications to specify the graphics function. This is a logical function which specifies how the source pixel values generated by a graphics operation are combined with the pixel values already present on the screen. The complete list of possible values is given in the following table:</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');margin-left: 0;margin-right: auto;caption-side: bottom;" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Logical Function</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Code</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Definition</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>GXclear</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>0</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>0</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>GXand</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>1</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>source AND destination</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>GXandReverse</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>2</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>source AND (NOT destination)</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>GXcopy</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>3</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>source</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>GXandInverted</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>4</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>(NOT source) AND destination</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>GXnoop</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>5</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>destination</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>GXxor</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>6</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>source XOR destination</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>GXor</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>7</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>source OR destination</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>GXnor</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>8</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>(NOT source) AND (NOT destination)</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>GXequiv</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>9</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>(NOT source) XOR destination</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>GXinvert</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>10</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>(NOT destination)</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>GXorReverse</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>11</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>source OR (NOT destination)</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>GXcopyInverted</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>12</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>(NOT source)</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>GXorInverted</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>13</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>(NOT source) OR destination</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>GXnand</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>14</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>(NOT source) OR (NOT destination)</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p>GXset</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p>15</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColEnd">
                        <p>1</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>The default graphics function is GXcopy, which causes new pixels to completely overwrite any previous pixels. Not all functions are available on all window systems.</p>
        <p>For example, the following code segment inverts the bottom bit in the rectangle defined by its diagonal corners (x<sub>0</sub>, y<sub>0</sub>) and (x<sub>1</sub>, y<sub>1</sub>):</p>
        <p class="Code">; Set graphics function to exclusive or (GXor), and save the </p>
        <p class="Code">; old function:</p>
        <p class="Code">DEVICE, GET_GRAPHICS_FUNCTION = oldg, SET_GRAPHICS_FUNCTION = 6</p>
        <p class="Code">; Use POLYFILL to select the area to be inverted. The source </p>
        <p class="Code">; pixel value is 1:</p>
        <p class="Code">POLYFILL, [[x0,y0], [x0,y1], [x1,y1], [x1,y0]], $</p>
        <p class="Code">&#160;&#160;&#160;/DEVICE, COLOR=1</p>
        <p class="Code">; Restore the previous graphics function:</p>
        <p class="Code">DEVICE, SET_GRAPHICS_FUNCTION=oldg</p>
        <h3 class="Keyword"><a name="devices_517620971_144941"></a><a name="devices_517620971_57178"></a>SET_PIXEL_DEPTH</h3>
        <p>(Z)</p>
        <p>Set this keyword equal to a value specifying the desired pixel depth. Allowed values are 8 (the default) and 24. IDL clears the frame and depth buffers when the value of this keyword changes.</p>
        <h3 class="Keyword"><a name="devices_517620971_878877"></a><a name="devices_517620971_40567"></a><a name="kanchor598"></a>SET_RESOLUTION</h3>
        <p>(Z)</p>
        <p>Set this keyword to a two-element vector that specifies the width and height of the Z-buffers. The default size is 640 by 480. If this size is not the same as the existing buffers, the current buffers are destroyed and the device is reinitialized. See <a href="../../Direct Graphics/Supported_Devices.htm#Z-Buffer">Z-Buffer</a> for information and examples.</p>
        <h3 class="Keyword"><a name="devices_517620971_144466"></a><a name="devices_517620971_57044"></a><a name="kanchor599"></a>SET_STRING</h3>
        <p>(TEK)</p>
        <p>The string used to place the terminal into the graphics mode from the normal interactive terminal mode. If the 4100 series mode switch is set, using the keyword TEK4100, the default graphic mode setting string is <code>&lt;ESC&gt;%!0</code>, which selects the Tektronix code mode.</p>
        <h3 class="Keyword"><a name="devices_517620971_150093"></a><a name="kanchor600"></a><a name="devices_517620971_53542"></a>SET_TRANSLATION</h3>
        <p>(X)</p>
        <p>This keyword can be used to allow multiple, simultaneous IDL sessions to use the same colors from a shared colormap. Use this keyword before the X connection is established (i.e., before a window is created), IDL will use the<a name="kanchor601"></a> shared color map without allocating any additional colors, and will not load a grayscale ramp as is usually done when the X server starts up. The following example shows two cooperating IDL processes sharing the same colormap:</p>
        <p>Execute the following commands in the first IDL session:</p>
        <p class="Code">WINDOW, GET_X_ID = a<br />DEVICE, TRANSLATION = t<br />OPENW, 1, 'junk.dat'<br />WRITEU, 1, a, !D.N_COLORS, t[0:!D.N_COLORS-1]<br />CLOSE, 1<br />LOADCT, 3</p>
        <p>Execute the following commands in the second IDL session:</p>
        <p class="Code">OPENR, 1, 'junk.dat'<br />a=0L<br />n=0L<br />READU,1, a, n<br />t = BYTARR(n)<br />READU, 1, t<br />CLOSE, 1<br />DEVICE, SET_TRANSLATION = t<br />WINDOW, COLORS=n, SET_X_ID=a<br />TV, DIST(256)</p>
        <h3 class="Keyword"><a name="devices_517620971_143957"></a><a name="devices_517620971_32946"></a><a name="kanchor602"></a>SET_WRITE_MASK</h3>
        <p>(WIN, X, Z)</p>
        <p>Sets the write mask to the specified value. For an <i>n</i>-bit system, the write mask can range from 0 to 2<i>n</i>-1.</p>
        <h3 class="Keyword"><a name="devices_517620971_144842"></a><a name="devices_517620971_52885"></a><a name="kanchor603"></a>STATIC_COLOR</h3>
        <p>(X)</p>
        <p>Use this keyword to select the X Windows <a name="kanchor604"></a>StaticColor visual. The value of the keyword represents the number of bits per pixel to be used. This keyword has effect only if no windows have been created.</p>
        <h3 class="Keyword"><a name="devices_517620971_144844"></a><a name="devices_517620971_15579"></a><a name="kanchor605"></a>STATIC_GRAY</h3>
        <p>(X)</p>
        <p>Use this keyword to select the X Windows <a name="kanchor606"></a>StaticGray visual. The value of the keyword represents the number of bits per pixel to be used. This keyword has effect only if no windows have been created.</p>
        <h3 class="Keyword"><a name="devices_517620971_144554"></a><a name="devices_517620971_69272"></a><a name="kanchor607"></a>SYMBOL</h3>
        <p>(PS)</p>
        <p>Set this keyword to select the Symbol PostScript font.</p>
        <h3 class="Keyword"><a name="devices_517620971_144553"></a><a name="devices_517620971_76301"></a><a name="kanchor608"></a>TEK4014</h3>
        <p>(TEK)</p>
        <p>Set this keyword to specify that coordinates are to be output with full 12-bit resolution. If this keyword is not present or is zero, 10-bit coordinates are output. Normally, IDL sends 10-bit coordinates. 12-bit coordinates are compatible with most terminals, even those without the full resolution, but require more characters to send. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The 4014 and the 4100 modes can be used together. The coordinate system IDL uses for the Tektronix is 0 to 4095 in the X direction and 0 to 3120 in the Y direction, even when not in the 4014 mode. In the 10-bit case the internal coordinates are divided by 4 prior to output.</p>
        <h3 class="Keyword"><a name="devices_517620971_144475"></a><a name="devices_517620971_58847"></a><a name="kanchor609"></a>TEK4100</h3>
        <p>(TEK)</p>
        <p>Set this keyword to indicate that the terminal is a 4100 or 4200 series terminal. The use of color, ANSI and Tektronix mode switching, hardware line styles, and pixel output with the TV procedure is supported with these terminals. Also, text is output differently.</p>
        <h3 class="Keyword"><a name="devices_517620971_144841"></a><a name="devices_517620971_42952"></a>TEXT</h3>
        <p>(CGM)</p>
        <p>Set this keyword to set the encoding type for the CGM output file to text.</p>
        <h3 class="Keyword"><a name="devices_517620971_144376"></a><a name="devices_517620971_72570"></a><a name="kanchor610"></a>THRESHOLD</h3>
        <p>(PCL, X)</p>
        <p>Set this keyword to select the threshold algorithm—the simplest dithering method. The value of this keyword is the threshold to be used. This algorithm simply compares each pixel against the given threshold, usually 128. If the pixel equals or exceeds the threshold the display pixel is set to white, otherwise it is black.</p>
        <h3 class="Keyword"><a name="devices_517620971_144557"></a><a name="devices_517620971_31392"></a><a name="kanchor611"></a>TIMES</h3>
        <p>(PS)</p>
        <p>Set this keyword to select the Times-Roman PostScript font.</p>
        <h3 class="Keyword"><a name="devices_517620971_144556"></a><a name="devices_517620971_49580"></a><a name="kanchor612"></a>TRANSLATION</h3>
        <p>(WIN, X)</p>
        <p>Using the <a name="kanchor613"></a>shared colormap (normally recommended) causes IDL to translate between IDL color indices (which always start with zero and are contiguous) and the pixel values actually present in the display. The TRANSLATION keyword specifies the name of a variable to receive the translation vector. To read the translation table, use the command:</p>
        <p class="Code">DEVICE, TRANSLATION=TRANSARR</p>
        <p>where TRANSARR is a named variable into which the translation array is stored. The result is a 256-element byte vector. Element zero of the vector contains the pixel value allocated for the first color in the IDL colormap, and so forth.</p>
        <h4>Microsoft Windows Only</h4>
        <p>This keyword is accepted by the WIN device, for compatibility with the X Windows driver, but simply returns a 256-element vector where each element has the value of its subscript (0 to 255).</p>
        <h3 class="Keyword"><a name="devices_517620971_883042"></a><a name="devices_517620971_29176"></a><a name="kanchor614"></a>TRUE_COLOR</h3>
        <p>(METAFILE, PRINTER, X)</p>
        <p>Use this keyword to select <a name="kanchor615"></a>TrueColor visuals for the output device.</p>
        <h4>For the METAFILE and PRINTER Devices:</h4>
        <p>Set this keyword to a value greater than zero to place the output device in in RGB or 24-bit TrueColor mode. The number of bits per pixel specified is ignored.</p>
        <h4>For the X Device:</h4>
        <p>Set this keyword equal to the number of bits per pixel to be used. This keyword has effect only if no windows have been created. </p>
        <h3 class="Keyword"><a name="devices_517620971_542703"></a><a name="kanchor616"></a><a name="devices_517620971_40504"></a>TT_FONT </h3>
        <p>(METAFILE, PRINTER, PS, WIN, X, Z)</p>
        <p>Set this keyword to indicate that the font set via the <a href="#devices_517620971_499045" class="selected">SET_FONT</a> keyword (either to set the fontname or to retrieve fontnames in conjunction with the <a href="#devices_517620971_554610" class="selected">GET_FONTNAMES</a> or <a href="#devices_517620971_144326" class="selected">GET_FONTNUM</a> keywords) should be treated as a TrueType font.</p>
        <h3 class="Keyword"><a name="devices_517620971_144477"></a><a name="devices_517620971_55523"></a><a name="kanchor617"></a>TTY</h3>
        <p>(REGIS, TEK)</p>
        <p>Set this keyword to specify that output should be sent to the terminal at the same time that it is being sent to a file due to </p>
        <p>..the FILENAME or PLOT_TO keywords. A zero value causes output to go only to the file. If no output file is in use, this keyword has no effect.</p>
        <h3 class="Keyword"><a name="devices_517620971_574550"></a><a name="devices_517620971_59943"></a><a name="kanchor618"></a>USER_FONT</h3>
        <p>(PS)</p>
        <p>This keyword is now obsolete and has been replaced by the <a href="#devices_517620971_499045" class="selected">SET_FONT</a> keyword. Code that uses the USER_FONT keyword will continue to function as before, but we suggest that all new code use SET_FONT.</p>
        <h3 class="Keyword"><a name="devices_517620971_144174"></a><a name="devices_517620971_43177"></a><a name="kanchor619"></a>VT240</h3>
        <h3 class="Keyword"><a name="devices_517620971_868016"></a><a name="devices_517620971_59656"></a>VT241</h3>
        <p>(REGIS)</p>
        <p>Set this keyword to configure the REGIS device for VT240 series terminals.</p>
        <h3 class="Keyword"><a name="devices_517620971_144532"></a><a name="devices_517620971_98977"></a><a name="kanchor620"></a>VT340</h3>
        <h3 class="Keyword"><a name="devices_517620971_868020"></a><a name="devices_517620971_80317"></a>VT341</h3>
        <p>(REGIS)</p>
        <p>Set this keyword to configure the REGIS device for VT340 series terminals.</p>
        <h3 class="Keyword"><a name="devices_517620971_144546"></a><a name="devices_517620971_86528"></a><a name="kanchor621"></a>WINDOW_STATE</h3>
        <p>(WIN, X)</p>
        <p>Set this keyword to a named variable that returns an array containing one element for each possible window. Array element <i>i</i> contains a 1 if window <i>i</i> is open, otherwise it contains a 0.</p>
        <h3 class="Keyword"><a name="devices_517620971_143719"></a><a name="devices_517620971_37651"></a><a name="kanchor622"></a>XOFFSET</h3>
        <p>(HP, PCL, PRINTER, PS)</p>
        <p>Specifies the X position, on the page, of the lower left corner of output generated by IDL. XOFFSET is specified in centimeters, unless INCHES is specified.</p>
        <h4>PostScript Only</h4>
        <p>SCALE does not affect the value of XOFFSET.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This keyword is ignored when generating Encapsulated PostScript output. See <a href="#devices_517620971_143751" class="selected">ENCAPSULATED</a> for details.</p>
        <h3 class="Keyword"><a name="devices_517620971_144379"></a><a name="devices_517620971_89416"></a><a name="kanchor623"></a>XON_XOFF</h3>
        <p>(HP)</p>
        <p>If present and non-zero, XON_XOFF causes each output page to start with device control commands that instruct the plotter to obey xon/xoff (^S/^Q) style <a name="kanchor624"></a>flow control. Specifying a value of zero stops the issuing of such commands. You should only use this keyword before any output has been generated.</p>
        <p>Such handshaking is the default. To turn it off, use the command</p>
        <p class="Code">DEVICE, XON_XOFF=0</p>
        <p>Often, it is not necessary to tell the plotter to obey flow control because the printing facilities on the system handle such details for you, but it is usually harmless.</p>
        <h3 class="Keyword"><a name="devices_517620971_144540"></a><a name="devices_517620971_19057"></a><a name="kanchor625"></a>XSIZE</h3>
        <p>(HP, METAFILE, PCL, PRINTER, PS)</p>
        <p>Specifies the width of output generated by IDL. XSIZE is specified in centimeters, unless INCHES is specified.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>For PCL and PS devices, this keyword’s value is effectively limited to a maximum of 11 inches due to the size of the memory map employed to render the graphics information.</p>
        <h4>PostScript Only</h4>
        <p>SCALE modifies the value of XSIZE. Hence, the following statement:</p>
        <p class="Code">DEVICE,/INCHES,XSIZE=7.0,SCALE_FACTOR=0.5</p>
        <p>results in a real width of 3.5 inches.</p>
        <p>Also see <a href="#devices_517620971_601940" class="selected">A Note About Preview Dimensions</a>.</p>
        <h3 class="Keyword"><a name="devices_517620971_144175"></a><a name="devices_517620971_89972"></a><a name="kanchor626"></a>YOFFSET</h3>
        <p>(HP, PCL, PRINTER, PS)</p>
        <p>Specifies the Y position, on the page, of the lower left corner of output generated by IDL. YOFFSET is specified in centimeters, unless INCHES is specified.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The corner of the page from which the Y offset is measured (lower or upper left) differs on various devices. Read the device specific information in the following sections to determine how this is handled for your device.</p>
        <h4>PostScript Only</h4>
        <p>SCALE does not affect the value of YOFFSET.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This keyword is ignored when generating Encapsulated PostScript output. See <a href="#devices_517620971_143751" class="selected">ENCAPSULATED</a> for details.</p>
        <h3 class="Keyword"><a name="devices_517620971_144568"></a><a name="devices_517620971_60607"></a><a name="kanchor627"></a>YSIZE</h3>
        <p>(HP, METAFILE, PCL, PRINTER, PS)</p>
        <p>Specifies the height of output generated by IDL. YSIZE is specified in centimeters, unless INCHES is specified.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>For PCL and PS devices, this keyword’s value is effectively limited to a maximum of 11 inches due to the size of the memory map employed to render the graphics information.</p>
        <h4>PostScript Only</h4>
        <p>SCALE modifies the value of YSIZE. Hence, the following statement:</p>
        <p class="Code">DEVICE,/INCHES,YSIZE=5.0,SCALE_FACTOR=0.5</p>
        <p>results in a real width of 2.5 inches.</p>
        <p>Also see <a href="#devices_517620971_601940" class="selected">A Note About Preview Dimensions</a>.</p>
        <h3 class="Keyword"><a name="devices_517620971_144513"></a><a name="devices_517620971_33653"></a><a name="kanchor628"></a>ZAPFCHANCERY</h3>
        <p>(PS)</p>
        <p>Set this keyword to select the ITC Zapf Chancery PostScript font.</p>
        <h3 class="Keyword"><a name="devices_517620971_144515"></a><a name="devices_517620971_76838"></a><a name="kanchor629"></a>ZAPFDINGBATS</h3>
        <p>(PS)</p>
        <p>Set this keyword to select the ITC Zapf Dingbats PostScript font.</p>
        <h3 class="Keyword"><a name="devices_517620971_144512"></a><a name="devices_517620971_92914"></a>Z_BUFFERING</h3>
        <p>(Z)</p>
        <p>This keyword enables and disables the Z-buffering. If this keyword is specified with a zero value, the driver operates as a standard 2-D device, the Z-buffering is disabled, and the Z-buffer (if any) is deallocated. Setting this keyword to one (the default value), enables the Z-buffering.</p>
        <p>To disable Z-buffering enter:</p>
        <p class="Code">DEVICE, Z_BUFFERING = 0</p>
        <p class="Code">&#160;</p>
        <p>See <a href="../../Direct Graphics/Supported_Devices.htm#Z-Buffer">Z-Buffer</a> for information and examples.</p>
        <h2 class="API"><a name="dg_routines_3604229493_882667"></a><a name="dg_routines_3604229493_997320_PageTOC_DEVICE_"></a>Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>Original</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowSep_ColSep">
                        <p>6.1</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowSep_ColEnd">
                        <p>Added CMYK keyword</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>Pre 6.1</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Deprecated DEPTH and FONT keywords</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>