<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: S">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>SVDFIT</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="S_list.htm">Routines: S</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">SVDFIT</span>
        </div>
        <h1 class="Routine"><a name="S_820040301_154010"></a><a name="kanchor2491"></a><a name="S_820040301_70302"></a>SVDFIT</h1>
        <p><a name="kanchor2492"></a><a name="kanchor2493"></a>The SVDFIT function performs a least squares fit with optional error estimates. Either a user-supplied function written in the IDL language or a built-in polynomial can be used to fit the data.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>SVDFIT only works for functions whose parameters are linearly independent. To perform a fit for a function whose parameters are linearly dependent, use either <a href="../C/CURVEFIT.htm#C_854643309_749660">CURVEFIT</a> or <a href="../L/LMFIT.htm#L_826528365_831031">LMFIT</a>.</p>
        <h2 class="API"><a name="S_820040301_754148"></a><a name="S_820040301_754148_PageTOC_SVDFIT_"></a>Syntax</h2>
        <p class="Syntax"><i>Result</i> = SVDFIT( <i>X</i>, <i>Y</i> [,&#160;<i>M</i>] [,&#160;<a href="#S_820040301_845481" class="selected">A</a>=<i>vector</i>] [,&#160;<a href="#S_820040301_845501" class="selected">CHISQ</a>=<i>variable</i>] [,&#160;<a href="#S_820040301_845503" class="selected">COVAR</a>=<i>variable</i>] [,&#160;/<a href="#S_820040301_845488" class="selected">DOUBLE</a>] [,&#160;<a href="#S_820040301_754160" class="selected">FUNCTION_NAME</a>=<i>string</i>] [,&#160;/<a href="#S_820040301_1093586" class="selected">LEGENDRE</a>] [,&#160;<a href="#S_820040301_1094756" class="selected">MEASURE_ERRORS</a>=<i>vector</i>] [,&#160;<a href="#S_820040301_1093549" class="selected">SIGMA</a>=<i>variable</i>] [,&#160;<a href="#S_820040301_1144017" class="selected">SING_VALUES</a>=<i>variable</i>] [,&#160;<a href="#S_820040301_845513" class="selected">SINGULAR</a>=<i>variable</i>] [,&#160;<a href="#S_820040301_1143910" class="selected">STATUS</a>=<i>variable</i>] [,&#160;<a href="#S_820040301_1144024" class="selected">TOL</a>=<i>value</i>] [,&#160;<a href="#S_820040301_845515" class="selected">VARIANCE</a>=<i>variable</i>] [,&#160;<a href="#S_820040301_754165" class="selected">YFIT</a>=<i>variable</i>] )</p>
        <h2 class="API"><a name="S_820040301_1135532"></a><a name="S_820040301_28472"></a>Return Value</h2>
        <p>Returns a vector of coefficients.</p>
        <h2 class="API"><a name="S_820040301_754150"></a><a name="S_820040301_754150_PageTOC_SVDFIT_"></a>Arguments</h2>
        <h3 class="Argument">X</h3>
        <p>An <i>n</i>-element vector containing the independent variable values. <i>X</i> may be of type integer, floating point, or double-precision floating-point. </p>
        <h3 class="Argument">Y</h3>
        <p>A vector of dependent variables, the same length as <i>X</i>.</p>
        <h3 class="Argument">M</h3>
        <p>The number of coefficients in the fitting function. For polynomials, <i>M</i> is equal to the degree of the polynomial + 1. If the <i>M</i> argument is not specified, you must supply initial coefficient estimates using the A keyword. In this case, <i>M</i> is set equal to the number of elements of the array specified by the A keyword.</p>
        <h2 class="API"><a name="S_820040301_754157"></a><a name="S_820040301_754157_PageTOC_SVDFIT_"></a>Keywords</h2>
        <h3 class="Keyword"><a name="S_820040301_845481"></a><a name="S_820040301_845481_Keywords_SVDFIT__"></a>A</h3>
        <p>This keyword is both an input and output keyword. Set this keyword equal to a variable containing a vector of initial estimates for the fitted function parameters. On exit, SVDFIT returns in this variable a vector of coefficients that are improvements of the initial estimates. If A is supplied, the <i>M</i> argument will be set equal to the number of elements in the vector specified by A.</p>
        <h3 class="Keyword"><a name="S_820040301_845501"></a><a name="S_820040301_845501_Keywords_SVDFIT__"></a>CHISQ</h3>
        <p>Set this keyword equal to a named variable that will contain the value of the unreduced chi&#8209;square goodness-of-fit.</p>
        <h3 class="Keyword"><a name="S_820040301_845503"></a><a name="S_820040301_845503_Keywords_SVDFIT__"></a>COVAR</h3>
        <p>Set this keyword equal to a named variable that will contain the covariance matrix of the fitted coefficients.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The COVAR matrix depends only upon the independent variable X and (optionally) the MEASURE_ERRORS. The values do not depend upon Y. See section 15.4 of <i>Numerical Recipes in C</i> (Second Edition) for details.</p>
        <h3 class="Keyword"><a name="S_820040301_845488"></a><a name="S_820040301_845488_Keywords_SVDFIT__"></a>DOUBLE</h3>
        <p>Set this keyword to force the computation to be done in double-precision arithmetic.</p>
        <h3 class="Keyword"><a name="S_820040301_754160"></a><a name="S_820040301_754160_Keywords_SVDFIT__"></a>FUNCTION_NAME</h3>
        <p>Set this keyword equal to a string containing the name of a user-supplied IDL basis function with <i>M</i> coefficients. If this keyword is omitted, and the LEGENDRE keyword is not set, IDL assumes that the IDL procedure SVDFUNCT, found in the file <code>svdfunct.pro</code>, located in the <code>lib</code> subdirectory of the IDL distribution, is to be used. SVDFUNCT uses the basis functions for the fitting polynomial: </p>
        <p>
            <img src="../../images/25_25.jpg" />
        </p>
        <p>The function to be fit must be written as an IDL function and compiled prior to calling SVDFIT. The function must accept values of <i>X</i> (a scalar), and <i>M</i> (a scalar). It must return an <i>M</i>-element vector containing the basis functions.</p>
        <p>See the <a href="#S_820040301_754175" class="selected">Examples</a> section below for an example function.</p>
        <h3 class="Keyword"><a name="S_820040301_1093586"></a><a name="S_820040301_1093586_Keywords_SVDFIT__"></a>LEGENDRE</h3>
        <p>Set this keyword to use Legendre polynomials instead of the function specified by the FUNCTION_NAME keyword. If the LEGENDRE keyword is set, the IDL uses the function SVDLEG found in the file <code>svdleg.pro</code>, located in the <code>lib</code> subdirectory of the IDL distribution.</p>
        <h3 class="Keyword"><a name="S_820040301_1094756"></a><a name="S_820040301_1094756_Keywords_SVDFIT__"></a><a name="S_820040301_28431"></a>MEASURE_ERRORS</h3>
        <p>Set this keyword to a vector containing standard measurement errors for each point <i>Y</i>[<i>i</i>]. This vector must be the same length as <i>X</i> and <i>Y</i>.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>For Gaussian errors (e.g., instrumental uncertainties), MEASURE_ERRORS should be set to the standard deviations of each point in <i>Y</i>. For Poisson or statistical weighting, MEASURE_ERRORS should be set to SQRT(<i>Y</i>).</p>
        <h3 class="Keyword"><a name="S_820040301_1093549"></a><a name="S_820040301_1093549_Keywords_SVDFIT__"></a>SIGMA</h3>
        <p>Set this keyword to a named variable that will contain the 1-sigma uncertainty estimates for the returned parameters.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If MEASURE_ERRORS is omitted, then you are assuming that the polynomial (or your user-supplied model) is the correct model for your data, and therefore, no independent goodness-of-fit test is possible. In this case, the values returned in SIGMA are multiplied by SQRT(CHISQ/(<i>N</i>–<i>M</i>)), where <i>N</i> is the number of points in <i>X</i>, and <i>M</i> is the number of coefficients. See section 15.2 of <i>Numerical Recipes in C</i> (Second Edition) for details.</p>
        <h3 class="Keyword"><a name="S_820040301_1144017"></a><a name="S_820040301_1144017_Keywords_SVDFIT__"></a>SING_VALUES</h3>
        <p>Set this keyword to a named variable in which to return the singular values from the SVD. Singular values which have been removed will be set to zero.</p>
        <h3 class="Keyword"><a name="S_820040301_845513"></a><a name="S_820040301_845513_Keywords_SVDFIT__"></a>SINGULAR</h3>
        <p>Set this keyword equal to a named variable that will contain the number of singular values returned. This value should be 0. If not, the basis functions do not accurately characterize the data.</p>
        <h3 class="Keyword"><a name="S_820040301_1143910"></a><a name="S_820040301_1143910_Keywords_SVDFIT__"></a>STATUS</h3>
        <p>Set this keyword to a named variable that will contain the status of the computation. Possible values are:</p>
        <ul>
            <li value="1">STATUS = 0: The computation was successful.</li>
            <li value="2">STATUS &gt; 0: Singular values were found and were removed. STATUS contains the number of singular values.</li>
        </ul>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If STATUS is not specified, any error messages will be output to the screen.</p>
        <h3 class="Keyword"><a name="S_820040301_1144024"></a><a name="S_820040301_1144024_Keywords_SVDFIT__"></a>TOL</h3>
        <p>Set this keyword to the tolerance used when removing singular values. The default is 10<sup>-5</sup> for single precision, and 2x10<sup>-12</sup> for double precision (these defaults are approximately 100 and 10000 times the machine precisions for single and double precision, respectively).</p>
        <p>Setting TOL to a larger value may remove coefficients that do not contribute to the solution, which may reduce the errors on the remaining coefficients.</p>
        <h3 class="Keyword"><a name="S_820040301_845515"></a><a name="S_820040301_845515_Keywords_SVDFIT__"></a>VARIANCE</h3>
        <p>Set this keyword equal to a named variable that will contain the variance (sigma squared) of each coefficient <i>M</i>.</p>
        <h3 class="Keyword"><a name="S_820040301_754165"></a><a name="S_820040301_754165_Keywords_SVDFIT__"></a>YFIT</h3>
        <p>Set this keyword equal to a named variable that will contain the vector of calculated <i>Y</i> values.</p>
        <h2 class="API"><a name="S_820040301_754175"></a><a name="S_820040301_754175_PageTOC_SVDFIT_"></a><a name="S_820040301_17197"></a>Examples</h2>
        <p>This example fits a function of the following form:</p>
        <p>
            <img src="../../images/25_26.jpg" />
        </p>
        <p>First, create the function in IDL:</p>
        <p class="Code">FUNCTION svdfit_funct, X ,M<br />   RETURN,[ [1.0], [SIN(2*X)/X], [COS(4.*X)^2.] ]<br />END</p>
        <p>&#160;</p>
        <p>Then create a procedure to perform the fit. Create the following file called <code>svdfit_doc.pro</code>:</p>
        <p class="Code">PRO svdfit_doc<br /><br />; Provide an array of coefficients:<br />C = [7.77, 8.88, -9.99]<br />X = FINDGEN(100)/15.0 + 0.1<br />Y = C[0] + C[1] * SIN(2*X)/X + C[2] * COS(4.*X)^2.<br /><br />; Set uncertainties to 5%:<br />measure_errors = 0.05 * Y<br /><br />; Provide an initial guess:<br />A=[1,1,1]<br />result_a = SVDFIT(X, Y, A=A, MEASURE_ERRORS=measure_errors, $<br />   FUNCTION_NAME='svdfit_funct', SIGMA=SIGMA, YFIT=YFIT)<br /><br />; Plot the results:<br />PLOT, X, YFIT<br />FOR I = 0, N_ELEMENTS(A)-1 DO $<br />   PRINT, I, result_a[I], SIGMA[I], C[I],$<br />   FORMAT = $<br />   '(" result_a ( ",I1," ) = ",F7.4," +- ",F7.4," VS. ",F7.4)'<br />END</p>
        <p class="Code">&#160;</p>
        <p>Place the file <code>example_svdfit.pro</code> in a directory in the IDL search path, and enter <code>example_svdfit</code> at the command prompt to create the plot. </p>
        <p>
            <img src="../../images/svdfit2.gif" style="margin-left: 5.99976px;margin-right: 5.999767px;margin-bottom: 5.999771px;" />
        </p>
        <p>In addition to creating the above plot, IDL prints:</p>
        <p class="Code">result_a ( 0 ) =  7.7700 +-  0.0390 VS.  7.7700</p>
        <p class="Code">result_a ( 1 ) =  8.8800 +-  0.0468 VS.  8.8800</p>
        <p class="Code">result_a ( 2 ) = -9.9900 +-  0.0506 VS. -9.9900</p>
        <h2 class="API"><a name="S_820040301_34942"></a><a name="S_820040301_34942_PageTOC_SVDFIT_"></a>Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>Original</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowSep_ColSep">
                        <p>5.4</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowSep_ColEnd">
                        <p>Deprecated the WEIGHTS keyword.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>5.6</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Added SING_VALUES, STATUS, and TOL keywords</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API">Resources and References</h2>
        <p>SVDFIT is based on the routine <code>svdfit</code> described in section 15.4 of <i>Numerical Recipes in C: The Art of Scientific Computing</i> (Second Edition), published by Cambridge University Press, and is used by permission.</p>
        <h2 class="API"><a name="S_820040301_1110546"></a><a name="S_820040301_1110546_PageTOC_SVDFIT_"></a>See Also</h2>
        <p><a href="../C/CURVEFIT.htm#C_854643309_749660">CURVEFIT</a>, <a href="../G/GAUSSFIT.htm#G_845992557_749954">GAUSSFIT</a>, <a href="../L/LINFIT.htm#L_826528365_53763">LINFIT</a>, <a href="../L/LMFIT.htm#L_826528365_831031">LMFIT</a>, <a href="../P/POLY_FIT.htm#P_817877613_753815">POLY_FIT</a>, <a href="../R/REGRESS.htm#R_822202989_1102676">REGRESS</a>, <a href="SFIT.htm#S_820040301_36073">SFIT</a></p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>