<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: S">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>SVDC </title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="S_list.htm">Routines: S</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">SVDC</span>
        </div>
        <h1 class="Routine"><a name="S_820040301_52094"></a><a name="S_820040301_67678"></a>SVDC </h1>
        <p><a name="kanchor2488"></a><a name="kanchor2489"></a><a name="kanchor2490"></a>The SVDC procedure computes the Singular Value Decomposition (SVD) of a square (<i>n</i>&#160;x<i>&#160;n</i>) or non-square (<i>n</i>&#160;x&#160;<i>m</i>) array as the product of orthogonal and diagonal arrays. SVD is a very powerful tool for the solution of linear systems, and is often used when a solution cannot be determined by other numerical algorithms.</p>
        <p>The SVD of an (<i>n</i> x <i>m</i>) non-square array <i>A</i> is computed as the product of an (<i>n</i>&#160;x<i>&#160;m</i>) column orthogonal array <i>U</i>, an (<i>n</i> x <i>n</i>) diagonal array <i>SV</i>, composed of the singular values, and the transpose of an (<i>n</i> x <i>n</i>) orthogonal array V: A = U&#160;&#160;SV&#160;&#160;V<sup>T</sup></p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If you are working with complex inputs, use the LA_SVD procedure instead.</p>
        <h2 class="API"><a name="S_820040301_52117"></a><a name="S_820040301_52117_PageTOC_SVDC_"></a>Examples</h2>
        <p>To find the singular values of an array A:</p>
        <p class="Code">; Define the array A:<br />A&#160;=&#160;[[1.0, 2.0, -1.0, 2.5], $<br />&#160;&#160;&#160;&#160;&#160;[1.5, 3.3, -0.5, 2.0], $<br />&#160;&#160;&#160;&#160;&#160;[3.1, 0.7, &#160;2.2, 0.0], $<br />&#160;&#160;&#160;&#160;&#160;[0.0, 0.3, -2.0, 5.3], $<br />&#160;&#160;&#160;&#160;&#160;[2.1, 1.0, &#160;4.3, 2.2], $<br />&#160;&#160;&#160;&#160;&#160;[0.0, 5.5, &#160;3.8, 0.2]]<br /><br />; Compute the Singular Value Decomposition:<br />SVDC, A, W, U, V<br /><br />; Print the singular values:<br />PRINT, W</p>
        <p>IDL prints: </p>
        <p class="Code">8.81973      2.65502      4.30598      6.84484</p>
        <p>To verify the decomposition, use the relationship A = U ## SV ## TRANSPOSE(V), where SV is a diagonal array created from the output vector W:</p>
        <p class="Code">sv = FLTARR(4, 4)<br />FOR K = 0, 3 DO sv[K,K] = W[K]<br />result = U ## sv ## TRANSPOSE(V)<br />PRINT, result</p>
        <p>IDL prints:</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;1.00000      2.00000     -1.00000      2.50000</p>
        <p class="Code">      1.50000      3.30000    -0.500001      2.00000</p>
        <p class="Code">      3.10000     0.700000      2.20000      0.00000</p>
        <p class="Code">  2.23517e-08     0.300000     -2.00000      5.30000</p>
        <p class="Code">      2.10000     0.999999      4.30000      2.20000</p>
        <p class="Code"> -3.91155e-07      5.50000      3.80000     0.200000</p>
        <p>This is the input array, to within machine precision.</p>
        <h2 class="API"><a name="S_820040301_52102"></a><a name="S_820040301_52102_PageTOC_SVDC_"></a>Syntax</h2>
        <p class="Syntax">SVDC, <i>A</i>, <i>W</i>, <i>U</i>, <i>V</i> [,&#160;/<a href="#S_820040301_58767" class="selected">COLUMN</a>] [,&#160;/<a href="#S_820040301_52115" class="selected">DOUBLE</a>] [,&#160;<a href="#S_820040301_1095860" class="selected">ITMAX</a>=<i>value</i>]</p>
        <h2 class="API"><a name="S_820040301_52104"></a><a name="S_820040301_52104_PageTOC_SVDC_"></a>Arguments</h2>
        <h3 class="Argument">A</h3>
        <p>The square (<i>n</i> x <i>n</i>) or non-square (<i>n</i> x <i>m</i>) single- or double-precision floating-point array to decompose.</p>
        <h3 class="Argument">W</h3>
        <p>On output, <i>W</i> is an <i>n</i>-element output vector containing the “singular values.”</p>
        <h3 class="Argument">U</h3>
        <p>On output, <i>U</i> is an <i>n</i>-column, <i>m</i>-row orthogonal array used in the decomposition of <i>A</i>.</p>
        <h3 class="Argument">V</h3>
        <p>On output, <i>V</i> is an <i>n</i>-column, <i>n</i>-row orthogonal array used in the decomposition of <i>A</i>.</p>
        <h2 class="API"><a name="S_820040301_52113"></a><a name="S_820040301_52113_PageTOC_SVDC_"></a>Keywords</h2>
        <h3 class="Keyword"><a name="S_820040301_58767"></a><a name="S_820040301_58767_Keywords_SVDC__"></a>COLUMN</h3>
        <p>Set this keyword if the input array <i>A</i> is in column-major format (composed of column vectors) rather than in row-major format (composed of row vectors).</p>
        <h3 class="Keyword"><a name="S_820040301_52115"></a><a name="S_820040301_52115_Keywords_SVDC__"></a>DOUBLE</h3>
        <p>Set this keyword to force the computation to be done in double-precision arithmetic.</p>
        <h3 class="Keyword"><a name="S_820040301_1095860"></a><a name="S_820040301_1095860_Keywords_SVDC__"></a>ITMAX</h3>
        <p>Set this keyword to specify the maximum number of iterations. The default value is 30.</p>
        <h2 class="API"><a name="S_820040301_59067"></a><a name="S_820040301_59067_PageTOC_SVDC_"></a>Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>4.0</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API">Resources and References</h2>
        <p>SVDC is based on the routine <code>svdcmp</code> described in section 2.6 of <i>Numerical Recipes in C: The Art of Scientific Computing</i> (Second Edition), published by Cambridge University Press, and is used by permission.</p>
        <h2 class="API"><a name="S_820040301_1110542"></a><a name="S_820040301_1110542_PageTOC_SVDC_"></a>See Also</h2>
        <p><a href="../C/CHOLDC.htm#C_854643309_50336">CHOLDC</a>, <a href="../L/LA_SVD.htm#L_826528365_960032">LA_SVD</a>, <a href="../L/LUDC.htm#L_826528365_968672">LUDC</a>, <a href="SVSOL.htm#S_820040301_52130">SVSOL</a></p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>