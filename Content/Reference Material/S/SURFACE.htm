<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: S">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>SURFACE</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="S_list.htm">Routines: S</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">SURFACE</span>
        </div>
        <h1 class="ClassRoutine"><a name="kanchor2479"></a>SURFACE</h1>
        <p>The SURFACE&#160;function draws a three-dimensional surface for a two-dimensional array of data.</p>
        <p>Instead of data, you can also input an equation of <i>X</i> and <i>Y</i> using either the input argument or the EQUATION property. In this case IDL will automatically generate the independent <i>X</i> and <i>Y</i> values and use your equation to compute the dependent <i>Z</i> data.</p>
        <p>
            <img src="../images/surface_ex.png" />
        </p>
        <h2 class="API">Example
		</h2>
        <p>The following lines create the graphic shown at the top of this topic.</p>
        <p class="Code">; Read in a 2D array of surface heights</p>
        <p class="Code">dir = FILEPATH('',SUBDIR=['examples', 'data'])</p>
        <p class="Code">z = READ_BINARY(dir+'elevbin.dat', DATA_DIMS=[64,64])</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Read in a texture image to overlay</p>
        <p class="Code">READ_JPEG, dir+'elev_t.jpg', image</p>
        <p class="Code">s = SURFACE(z, TEXTURE_IMAGE=image, YSTYLE=1)</p>
        <h3>Additional Examples</h3>
        <p>See <a href="../../GUInavigation/visualize.htm#Surface">Surface, contour, and vector examples</a> for additional examples using the SURFACE&#160;function.</p>
        <h2 class="API">Syntax</h2>
        <p class="Syntax"><i>graphic</i> = SURFACE(<i>Data</i> [, <i>X</i>, <i>Y</i>] [, <i>Keywords</i>=<i>value</i>]  [, <i>Properties</i>=<i>value</i>]) </p>
        <h3>Keywords</h3>
        <p>Keywords are applied <i>only</i> during the initial creation of the graphic.</p>
        <p><a href="#AXIS_STYLE" class="selected">AXIS_STYLE</a>=<i>value</i></p>
        <p>/<a href="#BUFFER" class="selected">BUFFER</a>, /<a href="#CURRENT" class="selected">CURRENT</a>, /<a href="#DEVICE" class="selected">DEVICE</a>, <a href="#DIMENSIO" class="selected">DIMENSIONS</a>=[<i>width</i>, <i>height</i>], <a href="#LAYOUT" class="selected">LAYOUT</a>=<i>array</i>, <a href="#LOCATION" class="selected">LOCATION</a>=[<i>x</i>, <i>y</i>], <a href="#MARGIN" class="selected">MARGIN</a>=<i>scalar</i> or [<i>left</i>, <i>bottom</i>, <i>right</i>, <i>top</i>], /<a href="#NOTOOLBAR" class="selected">NO_TOOLBAR</a>, /<a href="#NODATA" class="selected">NODATA</a>, /<a href="#OVERPLOT" class="selected">OVERPLOT</a>, /<a href="#WIDGETS" class="selected">WIDGETS</a></p>
        <p>/<a href="#IRREGULAR" class="selected">IRREGULAR</a></p>
        <p><a href="#TEXTURE_" class="selected">TEXTURE_IMAGE</a>=<i>array</i></p>
        <h3>Properties</h3>
        <p>Properties can be set as keywords to the function during creation, or retrieved or changed using the "." notation after creation.</p>
        <p><a href="#ANTIALIA" class="selected">ANTIALIAS</a>, <a href="#ASPECT_R" class="selected">ASPECT_RATIO</a>, <a href="#ASPECT_Z" class="selected">ASPECT_Z</a>, <a href="#AXES" class="selected">AXES</a>, <a href="#BACKGROU" class="selected">BACKGROUND_COLOR</a>, <a href="#BACKTRANS" class="selected">BACKGROUND_TRANSPARENCY</a>, <a href="#BOTTOM_C" class="selected">BOTTOM_COLOR</a>, <a href="#CLIP" class="selected">CLIP</a>, <a href="#COLOR" class="selected">COLOR</a>, <a href="#CROSSHAIR" class="selected">CROSSHAIR</a>, <a href="#DEPTH_CU" class="selected">DEPTH_CUE</a>, <a href="#EQN_SAMPLES" class="selected">EQN_SAMPLES</a>, <a href="#EQN_USERDATA" class="selected">EQN_USERDATA</a>, <a href="#EQUATION" class="selected">EQUATION</a>, <a href="#EYE" class="selected">EYE</a>, <a href="#FONT_COL" class="selected">FONT_COLOR</a>, <a href="#FONT_NAM" class="selected">FONT_NAME</a>, <a href="#FONT_SIZ" class="selected">FONT_SIZE</a>, <a href="#FONT_STY" class="selected">FONT_STYLE</a>, <a href="#GRID_UNI" class="selected">GRID_UNITS</a>, <a href="#HIDDEN_L" class="selected">HIDDEN_LINES</a>, <a href="#HIDE" class="selected">HIDE</a>, <a href="#LINESTYL" class="selected">LINESTYLE</a>, <a href="#MAX_VALU" class="selected">MAX_VALUE</a>, <a href="#MIN_VALU" class="selected">MIN_VALUE</a>, <a href="#NAME" class="selected">NAME</a>, <a href="#PERSPECT" class="selected">PERSPECTIVE</a>, <a href="#POSITION" class="selected">POSITION</a>, <a href="#RGB_TABL" class="selected">RGB_TABLE</a>, <a href="#SHADING" class="selected">SHADING</a>, <a href="#SHOW_SKI" class="selected">SHOW_SKIRT</a>, <a href="#SKIRT" class="selected">SKIRT</a>, <a href="#STYLE" class="selected">STYLE</a>, <a href="#TEXTURE_2" class="selected">TEXTURE_INTERP</a>, <a href="#THICK" class="selected">THICK</a>, <a href="#TITLE" class="selected">TITLE</a>, <a href="#TRANSPAR" class="selected">TRANSPARENCY</a>, <a href="#UVALUE" class="selected">UVALUE</a>, <a href="#VERT_COL" class="selected">VERT_COLORS</a>, <a href="#WINDOW" class="selected">WINDOW</a>, <a href="#WINDOW_T2" class="selected">WINDOW_TITLE</a>, <a href="#XRANGE" class="selected">XRANGE</a>, <a href="#YRANGE" class="selected">YRANGE</a>, <a href="#ZCLIP" class="selected">ZCLIP</a>, <a href="#ZRANGE" class="selected">ZRANGE</a></p>
        <h2 class="API">Methods</h2>
        <p class="Method"><a href="../../IDL Graphics/Close Method.htm">Close</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/ConvertCoord Method.htm">ConvertCoord</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/CopyWindow Method.htm">CopyWindow</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/Delete Method.htm">Delete</a>
        </p>
        <p><a href="../../IDL Graphics/Erase Method.htm">Erase</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/GenerateCode Method.htm">GenerateCode</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/GetData Method.htm">GetData</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/GetValueAtLocation Method.htm">GetValueAtLocation</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/MapForward Method.htm">MapForward</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/MapInverse Method.htm">MapInverse</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/Order Method.htm">Order</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/Print Method.htm">Print</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/Refresh Method.htm">Refresh</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/Rotate Method.htm">Rotate</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/Save Method.htm">Save</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/Scale Method.htm">Scale</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/Select Method.htm">Select</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/SetData Method.htm">SetData</a>
        </p>
        <p class="Method"><a href="../../IDL Graphics/Translate Method.htm">Translate</a>
        </p>
        <h2 class="API">Return Value</h2>
        <p>The SURFACE&#160;function returns a reference to the created graphic. Use the returned reference to manipulate the graphic after creation by changing properties or calling methods.</p>
        <h2 class="API">Arguments</h2>
        <h3 class="Argument">Data</h3>
        <p>A vector or two-dimensional array containing the surface heights. If <i>Data</i> is a vector, then <i>X</i> and <i>Y</i> should also be vectors of the same length, containing the x and y coordinate of the corresponding points.</p>
        <h3 class="Argument">X</h3>
        <p>A vector or 2D array containing the x-coordinates of the data.
			If <i>Data</i> is a 2D array and <i>X</i> is a vector, then each element of <i>X</i> specifies the x-coordinate for a column of <i>Data</i>.
		If <i>X</i> is a two-dimensional array, then each element specifies the x-coordinate of the corresponding point in <i>Data</i>.</p>
        <h3 class="Argument">Y</h3>
        <p>A vector or 2D array containing the y-coordinates of the data.
			
			If <i>Data</i> is a 2D array and <i>Y</i> is a vector, then each element of <i>Y</i> specifies the y-coordinate for a row of <i>Data</i>.
		If <i>Y</i> is a two-dimensional array, then each element specifies the y-coordinate of the corresponding point in <i>Data</i>.</p>
        <h3>Automatic Gridding</h3>
        <p>If <i>Data</i>, <i>X</i>, and <i>Y</i> are vectors with the same number of elements, then the data is assumed to be irregularly spaced. If <i>Data</i>, <i>X</i>, and <i>Y</i> are two-dimensional arrays with the same number of elements, then the <i>X</i> and <i>Y</i> coordinates will be tested to determine if the points are regularly or irregularly spaced.</p>
        <p>In either case, if the data are irregularly spaced, then IDL will automatically grid the data so that the points lie on a regular grid. The gridding is done using the following steps:</p>
        <ol>
            <li value="1">IDL calls the <a href="../Q/QHULL.htm">QHULL</a> procedure to construct the Delaunay triangulation. If GRID_UNITS="degrees" then the data is assumed to lie on a sphere, and the SPHERE keyword is passed into QHULL.</li>
            <li value="2">The graphics function then constructs an output grid. The number of points in the X and Y dimensions is automatically determined from the average number of points in the original X and Y data. IDL then evenly distributes these points across the corresponding range of the X and Y coordinates.</li>
            <li value="3">IDL calls the <a href="../G/GRIDDATA.htm">GRIDDATA</a> function, using the Delaunay triangulation and the regular grid. For speed, the Natural Neighbor method is used.</li>
            <li value="4">For non-spherical data, we then compare the interpolated data to the minimum and maximum of the original data. Data points are assumed to be "poorly" interpolated if they lie outside of 10% below the minimum or 10% above the maximum of the original data. If more than 10% of the points are poorly interpolated then IDL throws an error and halts execution. Otherwise, IDL&#160;passes the bad data points back into GRIDDATA and uses the Linear method, which is slower but more accurate.</li>
        </ol>
        <h4>Notes</h4>
        <ul>
            <li value="1">You can pass in a named variable to the IRREGULAR keyword to determine if automatic gridding was performed.</li>
            <li value="2">You can retrieve the gridded results using the ::<a href="../../IDL Graphics/GetData Method.htm">GetData</a> method.</li>
            <li value="3">Depending upon the dataset, the automatic gridding may fail or may produce displeasing results. In this case you should do the gridding yourself, perhaps using a different gridding method to <a href="../G/GRIDDATA.htm">GRIDDATA</a>.</li>
        </ul>
        <h3 class="Argument"> Equation </h3>
        <p> If the first argument is a string, then it is assumed to represent either an equation of <i>X</i> or the name of an IDL function that accepts an input argument <i>X</i>. Setting this argument is the same as setting the EQUATION property. See <a href="#EQUATION" class="selected">EQUATION</a> for details.</p>
        <h2 class="API">Keywords</h2>
        <p>Keywords are applied <i>only</i> during the initial creation of the graphic.</p>
        <h3 class="Keyword"><a name="AXIS_STYLE"></a>AXIS_STYLE</h3>
        <p>Set this keyword to one of the following values:</p>
        <ul>
            <li value="1">0 - No axes. Decrease the margins so the graphic almost fills the window. This is the default for images.</li>
            <li value="2">1 - Single X, Y (and Z if 3D) axes located at the minimum data value.  The margins will be adjusted to leave space for the axes. This is the default for 3D graphics.</li>
            <li value="3">2 - Box axes - multiple axes located at both the minimum and maximum data values. The margins will be adjusted to leave space for the axes. This is the default for 2D graphics.</li>
            <li value="4">3 - Crosshair-style axes - located at the midpoint of each data dimension. Since the axes are in the middle, decrease the margins so the graphic almost fills the window. This is the default for polar plots.</li>
            <li value="5">4 - No axes, but use the same margins as if axes were there. This is useful if you want to later add another graphic that does have axes, and you want the two visualizations to be aligned properly.</li>
        </ul>
        <p>You can set the following properties on the axes:</p>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/Description.css');" class="TableStyle_Description" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Property</p>
                    </th>
                    <th class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Description</p>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]COLOR</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>A string or RGB vector containing the axis color.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>[XYZ]GRIDSTYLE</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>A string, integer, or 2-element vector giving the linestyle for tickmarks.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]LOG</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Set to 1 if the axis is logarithmic. The minimum value of the axis range must be greater than zero.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>[XYZ]MAJOR</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>The number of major tick marks. Set to -1 to auto-compute, set to 0 to suppress.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]MINOR</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>The number of minor tick marks. Set to -1 to auto-compute, set to 0 to suppress.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>[XYZ]SUBGRIDSTYLE</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>A string, integer, or 2-element vector giving the linestyle for the minor tickmarks. The default is 0, for solid lines. Set to -1 to force minor ticks to have the same linestyle as major ticks.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]SHOWTEXT</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Set to 1 to show text labels or 0 to hide the text labels.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>[XYZ]STYLE</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>The axis range style. The valid values are:</p>
                        <p>(0) Nice range. Default for all graphics except Image, Barplot, and Map.</p>
                        <p>(1) Force the exact data range. Default for Image, Barplot, and Map.</p>
                        <p>(2) Pad the axes slightly beyond the nice range.</p>
                        <p>(3) Pad the axes slightly beyond the exact data range.</p>
                        <p>The [XYZ]RANGE takes precedence over this property.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]SUBTICKLEN</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>The ratio of the minor tick length to the major tick length. The default is 0.5.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>[XYZ]TEXT_COLOR</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>A string or RGB vector containing the axis text color.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]TEXT_ORIENTATION</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>The angle (in degrees) of the tick mark labels.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>[XYZ]TEXTPOS</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Set to 1 to position text above the axis. The default is 0, below the axis.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]THICK</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Set to a floating-point value between 0 and 10 to specify the line thickness for tickmarks. A thickness of 0 gives a thin hairline. The default is 1.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>[XYZ]TICKDIR</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Set to 1 to draw the tickmarks facing outwards. The default is 0, facing inwards.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]TICKFONT_NAME</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>A string containing the font name for the axis text.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>[XYZ]TICKFONT_SIZE</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>The axis text size in points.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]TICKFONT_STYLE</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>A string or integer containing the font style: normal (0), <b>bold</b> (1), <i>italic</i> (2), or <b style="font-style: italic;">bold italic</b> (3).</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>[XYZ]TICKFORMAT</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>A string or string array of tick label formats. See <a href="../../Creating IDL Programs/Components of the IDL Language/Format_Codes.htm">Format Codes</a> for more information.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]TICKINTERVAL</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>The interval between major tick marks.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>[XYZ]TICKLAYOUT</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Set to 1 to suppress tick marks; set to 2 to draw a box around the tick labels.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]TICKLEN</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>The length of each major tick mark, normalized to the width or height of the graphic. The default value is automatically calculated based upon the aspect ratio of the graphic.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>[XYZ]TICKNAME</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>A string array containing the tick labels.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]TICKUNITS</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>A string giving the tick units. Valid values are: null (the default, signified by empty quotes), Years, Months, Days, Hours, Minutes, Seconds, Time, exponent for exponential notation, or scientific for scientific notation. </p>
                        <p>If any of the time units are utilized, then the tick values are interpreted as Julian date/time values. If more than one unit is provided, the axis will be drawn with multiple levels.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>[XYZ]TICKVALUES</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>An array of tick mark locations.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>[XYZ]TITLE</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>A string giving the axis title.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p>[XYZ]TRANSPARENCY</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColEnd">
                        <p>An integer from 0-100 giving the percent transparency.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>For more detailed explanations of these properties, see the <a href="../A/AXIS.htm">AXIS</a> function.</p>
        <p class="Tip" data-mc-autonum="&lt;b&gt;Tip: &lt;/b&gt;"><span class="autonumber"><span><b>Tip: </b></span></span>You can also use the <a href="../A/AXIS.htm">AXIS</a> function to insert additional axes after the graphic has been created.</p>
        <h3 class="Keyword"><a name="BUFFER"></a>BUFFER</h3>
        <p>Set this keyword to 1 to direct the graphics to an off-screen buffer instead of creating a window.</p>
        <h3 class="Keyword"><a name="CURRENT"></a>CURRENT</h3>
        <p>Set this keyword to create the graphic in the current window with a new set of axes. If no window exists, a new window is created. The WINDOW's <a href="../../IDL Graphics/SetCurrent Method.htm">SetCurrent</a> method may be used to set the current window.</p>
        <p>Or, set this keyword to an existing IDL Graphic reference to make that window be the current window and direct the new graphic to that window.</p>
        <p class="Tip" data-mc-autonum="&lt;b&gt;Tip: &lt;/b&gt;"><span class="autonumber"><span><b>Tip: </b></span></span>The CURRENT&#160;keyword is usually used with the LAYOUT keyword or POSITION property to produce a window which has multiple graphics in different locations.</p>
        <p class="Tip" data-mc-autonum="&lt;b&gt;Tip: &lt;/b&gt;"><span class="autonumber"><span><b>Tip: </b></span></span>If you want your graphic to share the <i>same</i> axes as an existing graphic, you should use the OVERPLOT keyword instead.</p>
        <h3 class="Keyword"><a name="DEVICE"></a>DEVICE</h3>
        <p>Set this keyword if values are specified in device coordinates (pixels) for the MARGIN and POSITION keywords. (Normalized coordinates are the default for these keywords.)</p>
        <h3 class="Keyword"><a name="DIMENSIO"></a>DIMENSIONS</h3>
        <p>Set this keyword to a two-element vector of the form [<i>width</i>, <i>height</i>] to specify the window dimensions in pixels. If you do not specify a value for DIMENSIONS, IDL&#160;by default uses the values of the IDL_GR_WIN_HEIGHT and IDL_GR_WIN_WIDTH preferences for Windows platforms or the IDL_GR_X_HEIGHT and IDL_GR_X_WIDTH preferences for X Windows systems on UNIX.</p>
        <p class="Tip" data-mc-autonum="&lt;b&gt;Tip: &lt;/b&gt;"><span class="autonumber"><span><b>Tip: </b></span></span>The minimum <i>width</i> is set by the toolbar in the window, usually around 400 pixels. If you want to create a smaller graphics window, you can use the NO_TOOLBAR keyword.</p>
        <h3 class="Keyword"><a name="LAYOUT"></a>LAYOUT</h3>
        <p>Set this keyword to a three-element vector [<i>ncol</i>, <i>nrow</i>, <i>index</i>] that arranges graphics in a grid. The first dimension <i>ncol </i>is the number of columns in the grid, <i>nrow </i>is the number of rows, and <i>index </i>is the grid position at which to place the graphic (starting at element 1). This keyword is ignored if either OVERPLOT or POSITION is specified.</p>
        <h3 class="Keyword"><a name="LOCATION"></a>LOCATION</h3>
        <p>Set this keyword to a two-element vector [<i>X offset</i>, <i>Y offset</i>] giving the window's screen offset in pixels.</p>
        <h3 class="Keyword"><a name="MARGIN"></a>MARGIN</h3>
        <p>Set this keyword to the current graphic’s margin values in the layout specified by the LAYOUT property. Use a scalar value to set the same margin on all sides, or use a four-element vector [<i>left</i>, <i>bottom</i>, <i>right</i>, <i>top</i>] to specify different margins on each side.</p>
        <p>By default, margin values are expressed in normalized units ranging from 0.0 to 0.5. If the DEVICE keyword is set, the values are given in device units (pixels).</p>
        <p>This keyword is ignored if either OVERPLOT or POSITION is specified.</p>
        <h3 class="Keyword"><a name="NOTOOLBAR"></a>NO_TOOLBAR</h3>
        <p>By default the graphics window will have a toolbar containing some common tools such as Print and Save. Set this keyword to remove the toolbar. This keyword has no effect if the window is already created.</p>
        <p class="Tip" data-mc-autonum="&lt;b&gt;Tip: &lt;/b&gt;"><span class="autonumber"><span><b>Tip: </b></span></span>When the toolbar exists, the minimum window <i>width</i> is set to the toolbar's width, usually around 400 pixels. If you want to create a smaller graphics window, you can use the NO_TOOLBAR keyword.</p>
        <h3 class="Keyword"><a name="NODATA"></a>NODATA</h3>
        <p>Set this keyword to 1 to create the graphic, but without any data attached to it. The axes and title (if present) are also created and displayed. If the OVERPLOT keyword is specified, axis ranges will not change.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>You must still provide valid input arguments. The data range of the input arguments are used to automatically set the range of the axes. The [XYZ]RANGE properties may be used to override these default ranges.</p>
        <h3 class="Keyword"><a name="OVERPLOT"></a>OVERPLOT</h3>
        <p>Set this keyword to 1 (one) to place the graphic on top of the currently-selected graphic within the current window. The two graphics items will then share the same set of axes. If no current window exists, then this keyword is ignored and a new window is created.</p>
        <p>If you have a graphic in another window that is not currently selected, you can also set this keyword to that graphic's reference to overplot on top of that graphic.</p>
        <p class="Tip" data-mc-autonum="&lt;b&gt;Tip: &lt;/b&gt;"><span class="autonumber"><span><b>Tip: </b></span></span>If you want your graphic to have a <i>new</i> set of axes, you should use the CURRENT keyword instead.</p>
        <h3 class="Keyword"><a name="WIDGETS"></a>WIDGETS</h3>
        <p>By default, when running from the IDL Workbench, the graphics window will use the native widgets for your platform. Set this keyword to instead use IDL widgets for the graphics window. This keyword is ignored when running from the IDL command line, since IDL&#160;widgets are always used in that case.</p>
        <h3 class="Keyword"><a name="IRREGULAR"></a>IRREGULAR</h3>
        <p>Set this keyword to 1 to force the data to be gridded onto a regular grid. Set this keyword to 0 to disable automatic gridding. By default, if this keyword is not specified, then IDL will automatically grid the data if the <i>X</i> and <i>Y</i> locations are not on a 2D evenly-spaced grid.</p>
        <h3 class="Keyword"><a name="TEXTURE_"></a>TEXTURE_IMAGE</h3>
        <p>Set this keyword to an array containing an image to be texture mapped onto the surface. If this property is omitted, no texture map is applied and the surface is filled with the color specified by the COLOR or VERTEX_COLORS property. The image array can be a two-dimensional array of color indexes or a three-dimensional array specifying RGB values (3 x n x m, n x 3 x m, or n x m x 3) or RGBA values (4 x n x m, n x 4 x m, or n x m x 4).</p>
        <h2 class="API">Properties</h2>
        <h3 class="Property"><a name="ANTIALIA"></a>ANTIALIAS</h3>
        <p>By default anti-aliasing is used when drawing lines for mesh or ruled style. Set this property to 0 to disable anti-aliasing.</p>
        <h3 class="Property"><a name="ASPECT_R"></a>ASPECT_RATIO</h3>
        <p>A floating point value indicating the ratio of the Y dimension to the X dimension in data units. If this property is set to a nonzero value, the aspect ratio will be preserved as the graphic is stretched or shrunk. The default value is 0, meaning that the aspect ratio is not fixed, but is allowed to change as the graphic is stretched or shrunk.</p>
        <h3 class="Property"><a name="ASPECT_Z"></a>ASPECT_Z</h3>
        <p>A floating point value indicating the ratio of the Z dimension to the X and Y dimensions, in data units. If this is a nonzero value, the aspect ratio will be preserved as the graphic is stretched or shrunk. The default value is 0, meaning that the aspect ratio is not fixed, but is allowed to change as the graphic is stretched or shrunk.</p>
        <h3 class="Property"><a name="AXES"></a>AXES (Get Only)</h3>
        <p>This property retrieves an array that contains all of the AXIS objects within the visualization. For example, for a plot visualization:</p>
        <p class="Code">p = PLOT(/TEST)</p>
        <p class="Code"> ax = p.AXES</p>
        <p class="Code">ax[0].TITLE = 'X axis'</p>
        <p class="Code">ax[1].TITLE = 'Y axis'</p>
        <p class="Code">ax[2].HIDE = 1  ; hide top X axis</p>
        <p class="Code">ax[3].HIDE = 1  ; hide right Y axis</p>
        <p>See <a href="../A/AXIS.htm">AXIS</a> for a list of the available properties.</p>
        <h3 class="Property"><a name="BACKGROU"></a>BACKGROUND_COLOR</h3>
        <p>Set this property to a <a href="../../IDL Graphics/FormattingSymsAndLines.htm#Color">string or RGB vector</a> indicating the graphic's background color. The default value is [255, 255, 255] (white). Set this property to a scalar value to remove the background color.</p>
        <p class="Tip" data-mc-autonum="&lt;b&gt;Tip: &lt;/b&gt;"><span class="autonumber"><span><b>Tip: </b></span></span>To set the background color of the entire window, retrieve the window object using the WINDOW property, and set the BACKGROUND_COLOR on the window object.</p>
        <h3 class="Property"><a name="BACKTRANS"></a>BACKGROUND_TRANSPARENCY</h3>
        <p>Set this property to an integer between 0 and 100 giving the percent transparency of the background color. The default is 100 (completely transparent).</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If the BACKGROUND_COLOR property is changed, and the current background transparency is 100, then the BACKGROUND_TRANSPARENCY will be automatically set to 0 (opaque) so that you can see the new color.</p>
        <h3 class="Property"><a name="BOTTOM_C"></a>BOTTOM_COLOR&#160;</h3>
        <p>Set this property to a <a href="../../IDL Graphics/FormattingSymsAndLines.htm#Color">string or RGB vector</a> that specifies the surface bottom color. The default behavior is to make the bottom color match the COLOR property.</p>
        <h3 class="Property"><a name="CLIP"></a>CLIP</h3>
        <p>Set this property to 1 to clip portions of the graphic that lie  outside of the dataspace range, or to 0 to disable clipping. The default is 1.</p>
        <h3 class="Property"><a name="COLOR"></a>COLOR&#160;</h3>
        <p>Set this property to a <a href="../../IDL Graphics/FormattingSymsAndLines.htm#Color">string or RGB vector</a> that specifies the surface color.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>When you retrieve the COLOR property, the returned value will always be a three-element RGB vector, regardless of how the color was initially specified.</p>
        <h3 class="Property"><a name="CROSSHAIR"></a>CROSSHAIR (Get Only)</h3>
        <p>Use this property to retrieve a reference to the Crosshair graphic. All graphics objects within the same set of axes share a single Crosshair graphic. For Plot graphics the default behavior is to display the crosshair when a Mouse_Down event is received. For other graphics the crosshair is disabled. The STYLE property may be used to automatically draw the crosshair, while the LOCATION property may be used to manually draw the crosshair.</p>
        <p>You can get and set the following properties on the retrieved crosshair:</p>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/Description.css');" class="TableStyle_Description" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <thead>
                <tr class="Head-Header1">
                    <th class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Property</p>
                    </th>
                    <th class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Description</p>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>ANTIALIAS</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Set to 1 to enable anti-aliasing for the lines.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>COLOR</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>A string or RGB vector containing the color.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>HIDE</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Set to 1 to hide the crosshair, 0 to show.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>INTERPOLATE</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Set to 1 to force interpolation between Plot data points when SNAP is active. For other graphics this property is ignored. The default is&#160;0.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>LINESTYLE</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>An integer or string giving the line style. The default is 'dot'. See <a href="../../IDL Graphics/FormattingSymsAndLines.htm#LinestyleValues">Linestyle Values</a> for additional options.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>LOCATION</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>The location at which to draw the crosshair. For Plot graphics, if SNAP is enabled, then only the X coordinate needs to be supplied. Otherwise, LOCATION should be set to a two-element vector [X,&#160;Y] for two-dimensional graphics or [X,&#160;Y,&#160;Z] for three-dimensional graphics. If STYLE is currently "None", then setting the LOCATION will automatically set the STYLE to "Manual".</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>NAME</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>The name of the graphic.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>SNAP</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Set to 1 to snap the crosshair to the nearest Plot data point. For other graphics this property is ignored. The default is&#160;1.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>STYLE</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>An integer or string giving the crosshair style. Possible values are:<br />                    0 - "None" - never draw the crosshair. This is the default for all graphics except 2D plots.<br />                    1 - "Manual" - draw the crosshair using the LOCATION property.<br />                    2 - "Auto" - automatically draw the crosshair. This is the default for 2D plots.
                </p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>THICK</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>The thickness of the lines. The default is 1.</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>TRANSPARENCY</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>The percent transparency of the lines. The default is 50.</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p>UVALUE</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColEnd">
                        <p>An IDL variable of any data type.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>For example, use the CROSSHAIR property to draw a crosshair on an image:</p>
        <p class="Code">im = IMAGE(/TEST, TRANSPARENCY=50, AXIS_STYLE=2)</p>
        <p class="Code">c = im.CROSSHAIR</p>
        <p class="Code">c.COLOR = 'red'</p>
        <p class="Code">c.THICK = 2</p>
        <p class="Code">c.LOCATION = [300, 200]</p>
        <p>See&#160;<a href="../../GuideMe/MouseEventFunctions.htm">Creating Functions to Control Mouse Events</a> for a more detailed crosshair example.</p>
        <h3 class="Property"><a name="DEPTH_CU"></a>DEPTH_CUE</h3>
        <p>Set this property to a two-element vector [<i>bright</i>, <i>dim</i>] specifying the near and far planes for depth cueing, in normalized units. Depth cueing causes graphics objects that are further away to fade into the background.&#160;The first element is where the fade starts to take effect, while the second element is where the objects are completely transparent. Negative values are closer to the eye, while positive values are farther from the eye. The default value is [0, 0] which disables depth cueing. A typical value would be [0, 1], which would cause objects to start to fade at the mid-plane of the window, and completely fade out at a normalized eye distance of 1.</p>
        <h3 class="Property"><a name="EQN_SAMPLES"></a>EQN_SAMPLES</h3>
        <p>Set this property to a scalar or two-element array giving the number of samples to use in the <i>X</i> and <i>Y</i> dimensions with the <a href="#EQUATION" class="selected">EQUATION</a> property. If a scalar is specified then the same value is used for both dimensions. A higher value will give a smoother surface but will be slower to compute. The default is 200 points in each dimension. This property has no effect if EQUATION is not set.</p>
        <h3 class="Property"><a name="EQN_USERDATA"></a>EQN_USERDATA</h3>
        <p>Set this property to an expression containing data of any type. If <a href="#EQUATION" class="selected">EQUATION</a> is set to a function and EQN_USERDATA is set, then the value of EQN_USERDATA will be passed in as the third argument to the function. If EQUATION is not set, or if EQUATION is set to an expression of <i>X</i> and <i>Y</i>, then this property will have no effect.</p>
        <h3 class="Property"><a name="EQUATION"></a>EQUATION</h3>
        <p>Set this property to a string that contains an equation. The equation can either be a valid IDL statement that has variables named "<i>x</i>" and "<i>y</i>", or the name of a function that accepts two arguments, <i>X</i> and <i>Y</i>. Note that your IDL statement (or function) must be able to handle two-dimensional arrays of X and Y values. In other words, all of the X and Y values are passed in at once, not individually. The result of evaluating the equation with <i>X</i> and <i>Y</i> should be another two-dimensional array containing the surface height data.</p>
        <ul>
            <li value="1">When the surface is displayed, IDL will automatically construct two-dimensional arrays <i>X</i> and <i>Y</i> that span the current axis ranges.</li>
            <li value="2">The initial range is [-10, 10] in both <i>X</i> and <i>Y</i>.</li>
            <li value="3">If EQUATION is an expression, then IDL calls the <a href="../E/EXECUTE.htm">EXECUTE</a> function  once with the <i>X</i> and <i>Y</i> arrays. Note that in certain circumstances (such as the IDL Virtual Machine), you may not be able to use the EXECUTE function.</li>
            <li value="4">If EQUATION is a function name, then <a href="../C/CALL_FUNCTION.htm">CALL_FUNCTION</a> is called once with the <i>X</i> and <i>Y</i> arrays as input arguments. The function should return a two-dimensional result array.</li>
            <li value="5">Once the equation is evaluated, IDL examines the result for any NaN values, and then the <i>X</i> and <i>Y</i> ranges are clipped to only cover valid regions.</li>
            <li value="6">The equation should be a "single" IDL statement (the "&amp;" can not be used). If you need multiple statements, you should construct a function that accepts two arguments, <i>X</i> and <i>Y</i>, and put all of your code within the function.</li>
            <li value="7">If you change the <i>X</i> and <i>Y</i> axis ranges  using the <a href="#XRANGE" class="selected">XRANGE</a> or <a href="#YRANGE" class="selected">YRANGE</a> properties, then a new set of <i>X</i> and <i>Y</i> values is constructed and IDL calls your equation again with the new values.</li>
            <li value="8">You can use <a href="#EQN_SAMPLES" class="selected">EQN_SAMPLES</a> to control the number of sampled points in each dimension.</li>
            <li value="9">You can use <a href="#EQN_USERDATA" class="selected">EQN_USERDATA</a> to pass in user-defined data to your function.</li>
        </ul>
        <h4>Example of EQUATION Property with an Expression</h4>
        <p>The following code will produce a surface with a given equation:</p>
        <p class="Code">s1 = SURFACE('Real_Part(LambertW(x + !const.I*y))', COLOR='blue', STYLE=0)</p>
        <p class="Code">s2 = SURFACE('Imaginary(LambertW(x + !const.I*y))', /OVERPLOT, STYLE=0)</p>
        <h4>Example of EQUATION Property with a Function</h4>
        <p>To use the EQUATION property with a function, first create the function and save it into a file named <code>ex_surfaceequation.pro</code> somewhere on IDL's current path:</p>
        <p class="Code">FUNCTION ex_surfaceequation, x, y, userdata</p>
        <p class="Code_Indented">result = LambertW(x + !const.I*y)</p>
        <p class="Code_Indented">RETURN, userdata ? Imaginary(result) : Real_Part(result)</p>
        <p class="Code">END</p>
        <p>Then run the following code to use the equation:</p>
        <p class="Code">s1 = SURFACE('ex_surfaceequation', COLOR='blue', STYLE=0, EQN_USERDATA=0)</p>
        <p class="Code">s2 = SURFACE('ex_surfaceequation', /OVERPLOT, STYLE=0, EQN_USERDATA=1)</p>
        <p>For a more detailed example see <a href="../../GuideMe/LongExamples/DynamicVisualizations/DynamicVis_Splash.htm">Dynamic Visualizations</a>.</p>
        <h3 class="Property"><a name="EYE"></a>EYE</h3>
        <p>A floating-point value that specifies the distance from the eyepoint to the viewplane (Z=0). The default is 4.0. The eyepoint is always centered within the viewplane rectangle. IDL converts, maintains, and returns this data as double-precision floating-point.</p>
        <h3 class="Property"><a name="FONT_COL"></a>FONT_COLOR</h3>
        <p>Set this property to a <a href="../../IDL Graphics/FormattingSymsAndLines.htm#Color">string or RGB vector</a> that specifies the text color for the title and axes (if present). The default value is "black".</p>
        <h3 class="Property"><a name="FONT_NAM"></a>FONT_NAME</h3>
        <p>Set this property equal to a string specifying the IDL or system font for the title and axes (if present). The default value is “Helvetica”.</p>
        <h3 class="Property"><a name="FONT_SIZ"></a>FONT_SIZE</h3>
        <p>Set this property equal to an integer specifying the font size for the title and axes (if present). The default value is 16 points.</p>
        <h3 class="Property"><a name="FONT_STY"></a>FONT_STYLE</h3>
        <p>Set this property equal to an integer or a string specifying the font style for the title and axes (if present). Allowed values are:</p>
        <table style="margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/Description.css');" class="TableStyle_Description" cellspacing="0">
            <col />
            <col />
            <col />
            <thead>
                <tr>
                    <th class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Integer</p>
                    </th>
                    <th class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>String</p>
                    </th>
                    <th class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Resulting Style</p>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>0</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>"Normal" or "rm"</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Default (roman)</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>1</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>"Bold" or "bf"</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Bold</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>2</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>"Italic" or "it"</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Italic</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p>3</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p>"Bold italic" or "bi"</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColEnd">
                        <p>Bold italic</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h3 class="Property"><a name="GRID_UNI"></a>GRID_UNITS</h3>
        <p>Set this property to an integer or string specifying the units for the surface grid. The GRID_UNITS property applies only when you are inputting data that is irregularly spaced and you want the SURFACE function to automatically grid the data using either a regular grid or a spherical grid. GRID_UNITS has the following possible values:</p>
        <ul>
            <li value="1">
                <p><b>0 or ""</b> - None. The surface coordinates are in arbitrary units that are not tied to a map projection. The units will have no effect on the automatic grid.</p>
            </li>
            <li value="2">
                <p><b>1 or "m" or "meters"</b> - Meters. The surface coordinates are in meters. Just like GRID_UNITS=0, the units will have no effect on the automatic grid.</p>
            </li>
            <li value="3">
                <p><b>2 or "deg" or "degrees"</b> - Degrees. The surface coordinates are in degrees longitude/latitude on a sphere. In this case, when gridding irregularly-spaced data, IDL&#160;will assume a spherical grid.</p>
            </li>
        </ul>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The GRID_UNITS property only determines whether the data is treated as lying on a sphere when IDL computes the regularly-gridded data. Once the data has been interpolated to a regular grid, the GRID_UNITS property has no other effect.</p>
        <h3 class="Property"><a name="HIDDEN_L"></a>HIDDEN_LINES</h3>
        <p>Set this property to draw point and wireframe surfaces using hidden line (point) removal. By default, hidden line removal is disabled.</p>
        <h3 class="Property"><a name="HIDE"></a>HIDE</h3>
        <p>Set this property to 1 to hide the graphic. Set HIDE to 0 to show the graphic.</p>
        <h3 class="Property"><a name="LINESTYL"></a>LINESTYLE</h3>
        <p>An integer or string specifying the line style for the surface if the surface style is set to "Mesh", "RuledXZ", "RuledYZ", or "Lego". The allowed values are:</p>
        <table class="TableStyle_Description" cellspacing="0" style="margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/Description.css');">
            <col />
            <col />
            <thead>
                <tr>
                    <th class="TableStyle_Description_Head_0_0_RowSep_ColSep">Index</th>
                    <th class="TableStyle_Description_Head_0_0_RowSep_ColEnd">String (case insensitive)</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>0</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>'solid' or '-'(dash)</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>1</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>'dot' or ':'(colon)</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>2</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>'dash' or '--' (double dashes)</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>3</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>'dash dot' or '-.'</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>4</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>'dash dot dot dot' or '-:'</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>5</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>'long dash' or '__' (double underscores)</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p>6</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p>'none' or ' ' (space)</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h3 class="Property"><a name="MAX_VALU"></a>MAX_VALUE</h3>
        <p>The maximum value to be plotted. If this property is set, data values greater than the value of MAX_VALUE are treated as missing data and are not plotted.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The IEEE floating point value NaN is also treated as missing data.</p>
        <h3 class="Property"><a name="MIN_VALU"></a>MIN_VALUE</h3>
        <p>The minimum value to be plotted. If this property is set, data values less than the value of MIN_VALUE are treated as missing data and are not plotted.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>The IEEE floating point value NaN is also treated as missing data.</p>
        <h3 class="Property"><a name="NAME"></a>NAME</h3>
        <p>A string that specifies the name of the graphic. The name can be used to retrieve the graphic using the brackets array notation.  If NAME is not set then a default name is chosen based on the graphic type.</p>
        <h3 class="Property"><a name="PERSPECT"></a>PERSPECTIVE</h3>
        <p>Set this property to 1 to enable a perspective graphics projection. In the perspective projection, objects that are further away will appear smaller. The default is 0, which is the orthogonal perspective.&#160;</p>
        <h3 class="Property"><a name="POSITION"></a>POSITION</h3>
        <p>Set this property to a four-element vector that determines the position of the graphic within the window. The coordinates [X<sub>1</sub>, Y<sub>1</sub>, X<sub>2</sub>, Y<sub>2</sub>] define the lower left and upper right corners of the graphic. Coordinates are expressed in normalized units ranging from 0.0 to 1.0. On creation,  if the DEVICE keyword is set, the units are given in device units (pixels).</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>After creation, you can set the POSITION to either a two or four-element vector. If two elements are provided, the center of the graphic will be translated to that position. If four elements are provided, the graphics will be translated and scaled to fit the position.</p>
        <h3 class="Property"><a name="RGB_TABL"></a>RGB_TABLE</h3>
        <p>The number of the <a href="../../LoadingDefaultColorTables.htm">predefined IDL color table</a>, or a 3 x 256 or 256 x 3 byte array containing color values to use for vertex colors. If the values supplied are not of type byte, they are scaled to the byte range using BYTSCL. Use the VERT_COLORS property to specify indices that select colors from the values specified with RGB_TABLE.</p>
        <h3 class="Property"><a name="SHADING"></a>SHADING</h3>
        <p>Set this property to 1 to use Gouraud shading, or to 0 (the default) to use flat shading. In flat shading the color has a constant intensity for each face of the surface, based on the normal vector.
In Gouraud shading the colors are interpolated between vertices, and then along scanlines from each of the edge intensities.
Gouraud shading may be slower than flat shading, but results in a smoother appearance.</p>
        <h3 class="Property"><a name="SHOW_SKI"></a>SHOW_SKIRT</h3>
        <p>Set this property to 1 to draw a skirt around the edges of the surface, at the given SKIRT value. Set to 0 (the default) to disable drawing the skirt.</p>
        <h3 class="Property"><a name="SKIRT"></a>SKIRT</h3>
        <p>Set this property to the Z value of the bottom of the skirt. On creation, if SKIRT is set, then SHOW_SKIRT will automatically be set to 1.</p>
        <h3 class="Property"><a name="STYLE"></a>STYLE</h3>
        <p>Set this property equal to an integer or a case-insensitive string specifying the surface style. Allowed values are:</p>
        <table class="TableStyle_Description" cellspacing="0" style="margin-left: 0;margin-right: auto;mc-table-style: url('../../Resources/TableStyles/Description.css');">
            <col />
            <col />
            <thead>
                <tr>
                    <th class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Integer</p>
                    </th>
                    <th class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>String</p>
                    </th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>0</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>"Points"</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>1</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>"Mesh"</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>2</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>"Filled" (the default)</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>3</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>"RuledXZ"</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>4</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>"RuledYZ"</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>5</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>"Lego"</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p>6</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p>"LegoFilled"</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h3 class="Property"><a name="TEXTURE_2"></a>TEXTURE_INTERP</h3>
        <p>Set this property to a nonzero value to indicate that bilinear sampling is to be used with texture mapping. The default method is nearest-neighbor sampling.</p>
        <h3 class="Property"><a name="THICK"></a>THICK</h3>
        <p>Set this property to a value between 0 and 10 that specifies the line thickness of the surface lines. A thickness of 0 displays a thin hairline on the chosen device. The default value is 1.</p>
        <h3 class="Property"><a name="TITLE"></a>TITLE</h3>
        <p>Set this property to a string specifying a title. The title properties may be modified using FONT_COLOR, FONT_NAME, FONT_SIZE, and FONT_STYLE. After creation the TITLE property may be used to retrieve a reference to the title text object, and the <a href="../T/TEXT.htm">TEXT</a> properties may be used to modify the title object.</p>
        <p>You can also add Greek letters and mathematical symbols using a TeX-like syntax. These symbols need to be enclosed within a pair of "$" characters. See <a href="../T/TEXT.htm#Adding" class="Heading">Adding Mathematical Symbols and Greek Letters to the Text String</a> for details on the available symbols.</p>
        <h3 class="Property"><a name="TRANSPAR"></a>TRANSPARENCY</h3>
        <p>An integer between 0 and 100 that specifies the percent transparency of the surface. The default value is 0.</p>
        <h3 class="Property"><a name="UVALUE"></a>UVALUE</h3>
        <p>Set this property to an IDL variable of any data type.</p>
        <h3 class="Property"><a name="VERT_COL"></a>VERT_COLORS</h3>
        <p>A vector of colors to be used to specify the color of a surface vertex. The vector may be of the form [n*m] or [n, m] where each entry is a color index, or of the form [3,n*m] where each 3-element row is an RGB color, or of the form [4,n*m] where each 4-element row is an RGBA color. To remove vertex colors after they have been set, set VERT_COLORS to a scalar. 

If VERT_COLORS is not specified, the entire surface is drawn in the single color provided by the COLOR property, which is the default action.  If this keyword is set to a vector or a two-dimensional array of equal size to the data, these values are indices into a color table that can be specified by the RGB_TABLE keyword. If more vertices exist than elements in VERT_COLORS, the elements of VERT_COLORS are cyclically repeated.</p>
        <h3 class="Property"><a name="WINDOW"></a>WINDOW (Get Only)</h3>
        <p>This property retrieves a reference to the <a href="../W/WINDOW.htm">WINDOW</a> object which contains the graphic.</p>
        <h3 class="Property"><a name="WINDOW_T2"></a>WINDOW_TITLE</h3>
        <p>Set this property to the title of the IDL Graphic window. The title is displayed in the window's title bar.</p>
        <h3 class="Property"><a name="WINDOW_T"></a><a name="XRANGE"></a>XRANGE</h3>
        <p>A two-element vector giving the X data range to plot. The default behavior is to plot the entire data range.</p>
        <h3 class="Property"><a name="YRANGE"></a>YRANGE</h3>
        <p>A two-element vector giving the Y data range to plot. The default behavior is to plot the entire data range.</p>
        <h3 class="Property"><a name="ZCLIP"></a>ZCLIP</h3>
        <p>A two element floating-point vector representing the near and far clipping planes to be applied to the objects in this view. The vector should take the form [<i>near</i>, <i>far</i>]. By default, these values are [1, -1]. IDL converts, maintains, and returns this data as double-precision floating-point.</p>
        <h3 class="Property"><a name="ZRANGE"></a>ZRANGE</h3>
        <p>A two-element vector giving the Z data range to plot. The default behavior is to plot the entire data range.</p>
        <h2 class="API">Version History</h2>
        <table style="mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" class="TableStyle_VersionTable" cellspacing="0">
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>8.0</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowSep_ColSep">
                        <p>8.1</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowSep_ColEnd">
                        <p>Added the following properties: CROSSHAIR, UVALUE, WINDOW, [XYZ]SHOWTEXT, [XYZ]STYLE</p>
                        <p>Added the following methods: Delete, GetData, GetValueAtLocation, SetData</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>8.2</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Added AXES, BACKGROUND_COLOR, BACKGROUND_TRANSPARENCY, CLIP properties.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowSep_ColSep">
                        <p>8.2.1</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowSep_ColEnd">
                        <p>[XYZ]TICKUNITS accepts exponent as a value.</p>
                        <p>Added ANTIALIAS property.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>8.2.2</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Change POSITION from a keyword to a property.</p>
                        <p>Added EYE property.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowSep_ColSep">
                        <p>8.2.3</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowSep_ColEnd">
                        <p>Added automatic gridding of irregularly-spaced data, the IRREGULAR keyword, and the GRID_UNITS property.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>8.3</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Added Equation argument, and EQUATION, EQN_SAMPLES, and EQN_USERDATA properties.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API">See Also</h2>
        <p><a href="../../Creating IDL Programs/Appendices/Constant_System_Variable.htm">!COLOR</a>, <a href="../C/CONTOUR.htm">CONTOUR</a>, <a href="../P/PLOT.htm" class="Heading">PLOT</a>, <a href="../../IDL Graphics/FormattingSymsAndLines.htm">Formatting IDL&#160;Graphics Symbols and Lines</a>, <a href="../../GuideMe/Using IDL Graphics.htm" class="Heading">Using IDL graphics</a></p>
        <p class="Hiddenp>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>