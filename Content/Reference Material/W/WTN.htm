<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: W">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>WTN </title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="W_list.htm">Routines: W</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">WTN</span>
        </div>
        <h1 class="Routine"><a name="W_811389549_52399"></a><a name="kanchor2954"></a><a name="W_811389549_14361"></a>WTN </h1>
        <p><a name="kanchor2955"></a><a name="kanchor2956"></a>The WTN function returns a multi-dimensional discrete wavelet transform of the input array <i>A</i>. The transform is based on a Daubechies wavelet filter.</p>
        <p>WTN is based on the routine <code>wtn</code> described in section 13.10 of <i>Numerical Recipes in C: The Art of Scientific Computing</i> (Second Edition), published by Cambridge University Press, and is used by permission.</p>
        <h2 class="API"><a name="W_811389549_52406"></a><a name="W_811389549_52406_PageTOC_WTN_"></a>Syntax</h2>
        <p class="Syntax"><i>Result</i> = WTN( <i>A</i>, <i>Coef</i> [,&#160;/<a href="#W_811389549_58787" class="selected">COLUMN</a>] [,&#160;/<a href="#W_811389549_52415" class="selected">DOUBLE</a>] [,&#160;/<a href="#W_811389549_52418" class="selected">INVERSE</a>] [,&#160;/<a href="#W_811389549_52421" class="selected">OVERWRITE</a>] )</p>
        <h2 class="API">Return Value</h2>
        <p>Returns an output array of the same dimensions as <i>A</i>, containing the discrete wavelet transform over each dimension.</p>
        <h2 class="API"><a name="W_811389549_1084213"></a><a name="W_811389549_52408_PageTOC_WTN_"></a>Arguments</h2>
        <h3 class="Argument">A</h3>
        <p>The input vector or array. The dimensions of <i>A</i> must all be powers of 2.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If  WTN is complex then only the real part is used for the computation.</p>
        <h3 class="Argument">Coef</h3>
        <p>An integer that specifies the number of wavelet filter coefficients. The allowed values are 4, 12, or 20. When <i>Coef</i> is 4, the <code>daub4()</code> function (see <i>Numerical Recipes</i>, section 13.10) is used. When <i>Coef</i> is 12 or 20, <code>pwt()</code> is called, preceded by <code>pwtset()</code> (see <i>Numerical Recipes</i>, section 13.10).</p>
        <h2 class="API"><a name="W_811389549_52413"></a><a name="W_811389549_52413_PageTOC_WTN_"></a>Keywords</h2>
        <h3 class="Keyword"><a name="W_811389549_58787"></a><a name="W_811389549_58787_Keywords_WTN__"></a>COLUMN</h3>
        <p>Set this keyword if the input array <i>A</i> is in column-major format (composed of column vectors) rather than in row-major format (composed of row vectors).</p>
        <h3 class="Keyword"><a name="W_811389549_52415"></a><a name="W_811389549_52415_Keywords_WTN__"></a>DOUBLE</h3>
        <p>Set this keyword to force the computation to be done in double-precision arithmetic.</p>
        <h3 class="Keyword"><a name="W_811389549_52418"></a><a name="W_811389549_52418_Keywords_WTN__"></a>INVERSE</h3>
        <p>If the INVERSE keyword is set, the inverse transform is computed. By default, WTN performs the forward wavelet transform.</p>
        <h3 class="Keyword"><a name="W_811389549_52421"></a><a name="W_811389549_52421_Keywords_WTN__"></a>OVERWRITE</h3>
        <p>Set the OVERWRITE keyword to perform the transform “in place.” The result overwrites the original contents of the array.</p>
        <h2 class="API"><a name="W_811389549_52423"></a><a name="W_811389549_52423_PageTOC_WTN_"></a>Examples</h2>
        <p>This example demonstrates the use of IDL’s discrete wavelet transform and sparse array storage format to compress and store an 8-bit gray-scale digital image. First, an image selected from the <code>people.dat</code> data file is transformed into its wavelet representation and written to a separate data file using the WRITEU procedure.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;" data-mc-conditions="Reference Material.Online_Help_Only"><span class="autonumber"><span><b>Note: </b></span></span>
            <MadCap:conditionalText data-mc-conditions="Reference Material.Online_Help_Only">If you are viewing this topic from within the IDL Workbench, you can click on each code block in turn to execute the example.</MadCap:conditionalText>
        </p>
        <p class="Code">; Begin by choosing the number of wavelet coefficients to use and a<br />; threshold value:<br />coeffs = 12 &amp; thres = 10.0<br /><br />; Open the people.dat data file, read an image using associated<br />; variables, and close the file:<br />OPENR, 1, FILEPATH('people.dat', SUBDIR = ['examples','data'])<br />images = ASSOC(1, BYTARR(192, 192, /NOZERO))<br />image_1 = images[0]<br />CLOSE, 1<br /><br />; Expand the image to the nearest power of two using cubic<br />; convolution, and transform the image into its wavelet<br />; representation using the WTN function:<br />pwr = 256<br />image_1 = CONGRID(image_1, pwr, pwr, /CUBIC)<br />wtn_image = WTN(image_1, coeffs)<br /><br />; Write the image to a file using the WRITEU procedure and check<br />; the size of the file (in bytes) using the FSTAT function:<br />OPENW, 1, 'original.dat'<br />WRITEU, 1, wtn_image<br />status = FSTAT(1)<br />CLOSE, 1<br />PRINT, 'Size of the file is ', status.size, ' bytes.'</p>
        <p>Next, the transformed image is converted, using the SPRSIN function, to row-indexed sparse storage format retaining only elements with an absolute magnitude greater than or equal to a specified threshold. The sparse image is written to a data file using the WRITE_SPR procedure. </p>
        <p class="Code">; Now, we convert the wavelet representation of the image to a<br />; row-indexed sparse storage format using the SPRSIN function,<br />; write the data to a file using the WRITE_SPR procedure, and check<br />; the size of the "compressed" file:<br />sprs_image = SPRSIN(wtn_image, THRES = thres)<br />WRITE_SPR, sprs_image, 'sparse.dat'<br />OPENR, 1, 'sparse.dat'<br />status = FSTAT(1)<br />CLOSE, 1<br />PRINT, 'Size of the compressed file is ', status.size, ' bytes.'<br /><br />; Determine the number of elements (as a percentage of total<br />; elements) whose absolute magnitude is less than the specified<br />; threshold. These elements are not retained in the row-indexed<br />; sparse storage format:<br />PRINT, 'Percentage of elements under threshold: ',$<br />&#160;&#160;&#160;100.*N_ELEMENTS(WHERE(ABS(wtn_image) LT thres, $<br />&#160;&#160;&#160;count)) / N_ELEMENTS(image_1)</p>
        <p>Finally, the transformed image is reconstructed from the storage file and displayed alongside the original.</p>
        <p class="Code">; Next, read the row-indexed sparse data back from the file<br />; sparse.dat using the READ_SPR function and reconstruct the<br />; image from the non-zero data using the FULSTR function:<br />sprs_image = READ_SPR('sparse.dat')<br />wtn_image = FULSTR(sprs_image)<br /><br />; Apply the inverse wavelet transform to the image:<br />image_2 = WTN(wtn_image, COEFFS, /INVERSE)<br /><br />; Finally, display the original and reconstructed <br />; images side by side:<br />WINDOW, 1, XSIZE = pwr*2, YSIZE = pwr, $<br />&#160;&#160;&#160;TITLE = 'Wavelet Image Compression and File I/O'<br />TV, image_1, 0, 0<br />TV, image_2, pwr - 1, 0<br /><br />; Calculate and print the amount of data used in </p>
        <p class="Code">; reconstruction of the image:<br />PRINT, 'The image on the right is reconstructed from:', $<br />&#160;&#160;&#160;100.0 - (100.* count/N_ELEMENTS(image_1)),$<br />&#160;&#160;&#160;'% of original image data.'</p>
        <h4>IDL Output</h4>
        <p class="Code">Size of the file is &#160;&#160;262144 bytes.</p>
        <p class="Code">Size of the compressed file is &#160;&#160;69600 bytes.</p>
        <p class="Code">Percentage of elements under threshold: &#160;&#160;87.0331</p>
        <p class="Code">The image on the right is reconstructed from: 12.9669% of original image data.</p>
        <p>The sparse array contains only 13% of the elements contained in the original array. The following figure is created from this example. The image on the left is the original 256 by 256 image. The image on the right was compressed by the above process and was reconstructed from 13% of the original data. The size of the compressed image’s data file is 26.6% of the size of the original image’s data file. Note that due to limitations in the printing process, differences between the images may not be as evident as they would be on a high-resolution printer or monitor. The following shows the original image (left) and image reconstructed from 13% of the data (right).</p>
        <p>
            <img src="../../images/wtn.gif" style="margin-left: 5.99976px;margin-top: 5.99976px;margin-right: 5.999752px;margin-bottom: 6.000484px;" />
        </p>
        <h2 class="API"><a name="W_811389549_52487"></a><a name="W_811389549_52487_PageTOC_WTN_"></a>Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>4.0</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API"><a name="W_811389549_983566"></a><a name="W_811389549_983566_PageTOC_WTN_"></a>See Also</h2>
        <p><a href="../F/FFT.htm#F_848155245_676828">FFT</a>
        </p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>