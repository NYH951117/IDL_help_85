<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: W">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>WIDGET_PROPERTYSHEET</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="W_list.htm">Routines: W</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">WIDGET_PROPERTYSHEET</span>
        </div>
        <h1 class="Routine"><a name="W_811389549_WIDGET_PROPERTYSHEET_ref"><a name="W_811389549_1020327"></a><a name="W_811389549_13372"></a>WIDGET_PROPERTYSHEET</a>
        </h1>
        <p><a name="kanchor2869"></a><a name="kanchor2870"></a>The WIDGET_PROPERTYSHEET function creates a property sheet widget, which exposes the <i>properties</i> of an IDL object subclassed from the IDLitComponent class in a graphical interface. The property sheet widget must be a child of a base or tab widget, and it cannot be the parent of any other widget.</p>
        <p>The IDLitComponent class was designed for use by the IDL iTools system. As a result, all IDLit* objects subclass from IDLitComponent, so properties of object classes written for the IDL iTools system can be displayed in a property sheet. In addition, most IDLgr* objects (some do not such as IDLgrFont, IDLgrPrinter, IDLgrPattern, and so on) subclass from IDLitComponent, which means that properties of standard IDL graphics objects can be displayed in a property sheet even if the rest of the iTools framework is not in use.</p>
        <p>In order to be shown in a property sheet, object properties must be <i>registered</i> and <i>visible</i>. In addition, in order for property values shown in a property sheet to be editable by the user, the property must be <i>sensitive</i>. </p>
        <p>The name of the changed property is placed into an IDL event, and the object is updated when this event is processed. An existing property sheet can also be assigned a new component, causing it to reload with the new list of properties and their values.</p>
        <h3>Property Sheet Widget Data Types and Controls</h3>
        <p>The following controls are available for the corresponding data types in property sheet widgets:</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');margin-left: 0;margin-right: auto;caption-side: bottom;" class="TableStyle_Description" cellspacing="0">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Data Type</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Control</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>Boolean</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Droplist with two choices: True or False</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>Number</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>One of the following:</p>
                        <p>Edit control that accepts +, -, 0123456789, plus decimal points, e, E, d and D for floating point numbers.</p>
                        <p>Slider</p>
                        <p>Spinner</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p><b>String</b>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Text box, expandable when string length exceeds visible area.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>Color</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Color picker.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>Line Style</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Droplist displaying seven line style choices:</p>
                        <p>
                            <img src="../../images/linestyle.gif" />
                        </p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>Line Thickness</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Droplist displaying ten line thickness choices:</p>
                        <p>
                            <img src="../../images/thickness.gif" />
                        </p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>Symbol</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Droplist displaying the symbol choices:</p>
                        <p>
                            <img src="../../images/symbol.gif" />
                        </p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>String list</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Droplist displaying a list of strings.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p>User-Defined</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p><b>Edit</b> button linked to user-defined control (see <a href="../../Creating IDL Programs/Creating Applications in IDL/User_defined_Properties.htm#widget_propertysheet_3756481120_128293">User-defined Properties</a>).</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API"><a name="W_811389549_1036780"></a><a name="W_811389549_86951"></a>Syntax</h2>
        <p class="Syntax"><i>Result</i> = WIDGET_PROPERTYSHEET(<i>Parent </i>[,&#160;/<a href="#W_811389549_1036791" class="selected">ALIGN_BOTTOM</a> |,&#160;/<a href="#W_811389549_1036794" class="selected">ALIGN_CENTER</a> |,&#160;/<a href="#W_811389549_1036796" class="selected">ALIGN_LEFT</a> |,&#160;/<a href="#W_811389549_1036798" class="selected">ALIGN_RIGHT</a>&#160;|,&#160;/<a href="#W_811389549_1036800" class="selected">ALIGN_TOP</a>] [,&#160;/<a href="#W_811389549_1036802" class="selected">CONTEXT_EVENTS</a>] [,&#160;/<a href="#W_811389549_1078422" class="selected">EDITABLE</a>] [,&#160;<a href="#W_811389549_1036806" class="selected">EVENT_FUNC</a>=<i style="text-transform: lowercase;">STRING</i>] [,&#160;<a href="#W_811389549_1036808" class="selected">EVENT_PRO</a>=<i style="text-transform: lowercase;">STRING</i>] [,&#160;<a href="#W_811389549_1036810" class="selected">FONT</a>=<i style="text-transform: lowercase;">STRING</i>] [,&#160;<a href="#W_811389549_1070614" class="selected">FRAME</a>=<i style="text-transform: lowercase;">width</i>] [,&#160;<a href="#W_811389549_1036813" class="selected">FUNC_GET_VALUE</a>=<i style="text-transform: lowercase;">STRING</i>] [,&#160;/<a href="#W_811389549_1036813" class="selected">HIDE_ADVANCED_ONLY</a>] [,&#160;<a href="#W_811389549_1097821" class="selected">IGNORE_ACCELERATORS</a>=<i>value</i>] [,&#160;<a href="#W_811389549_1036815" class="selected">KILL_NOTIFY</a>=<i style="text-transform: lowercase;">STRING</i>] [,&#160;/<a href="#W_811389549_1100848" class="selected">MULTIPLE_PROPERTIES</a>] [,&#160;/<a href="#W_811389549_1036819" class="selected">NO_COPY</a>] [,&#160;<a href="#W_811389549_1036822" class="selected">NOTIFY_REALIZE</a>=<i style="text-transform: lowercase;">STRING</i>] [,&#160;<a href="#W_811389549_1036824" class="selected">PRO_SET_VALUE</a>=<i style="text-transform: lowercase;">STRING</i>] [,&#160;<a href="#W_811389549_1036826" class="selected">SCR_XSIZE</a>=<i>width</i>] [,&#160;<a href="#W_811389549_1036828" class="selected">SCR_YSIZE</a>=<i>height</i>] [,&#160;/<a href="#W_811389549_1036830" class="selected">SENSITIVE</a>] [,&#160;/<a href="#W_811389549_1070660" class="selected">SUNKEN_FRAME</a>] [,&#160;/<a href="#W_811389549_1036836" class="selected">TRACKING_EVENTS</a>] [,&#160;<a href="#W_811389549_1036838" class="selected">UNAME</a>=<i style="text-transform: lowercase;">STRING</i>] [,<a href="#W_811389549_1036841" class="selected">UNITS</a>={0 | 1 | 2}] [,&#160;<a href="#W_811389549_1036843" class="selected">UVALUE</a>=<i style="text-transform: lowercase;">VALUE</i>] [, <a href="#W_811389549_1036847" class="selected">VALUE</a>=<i style="text-transform: lowercase;">VALUE</i>] [,&#160;<a href="#W_811389549_1036853" class="selected">XOFFSET</a>=<i style="text-transform: lowercase;">VALUE</i>] [,&#160;<a href="#W_811389549_1036856" class="selected">XSIZE</a>=<i style="text-transform: lowercase;">VALUE</i>] [,&#160;<a href="#W_811389549_1036858" class="selected">YOFFSET</a>=<i style="text-transform: lowercase;">VALUE</i>] [,&#160;<a href="#W_811389549_1036861" class="selected">YSIZE</a>=<i style="text-transform: lowercase;">VALUE</i>])</p>
        <h2 class="API"><a name="W_811389549_1036783"></a><a name="W_811389549_44199"></a>Return Value</h2>
        <p>The returned value of this function is the widget ID of the newly-created property sheet widget.</p>
        <h2 class="API"><a name="W_811389549_1036786"></a><a name="W_811389549_41248"></a>Arguments</h2>
        <h3 class="Argument">Parent</h3>
        <p>The widget ID of the parent for the new property sheet widget. <i>Parent</i> must be a base or tab widget.</p>
        <h2 class="API"><a name="W_811389549_1036790"></a><a name="W_811389549_58062"></a>Keywords</h2>
        <h3 class="Keyword"><a name="W_811389549_1036791"></a><a name="W_811389549_1036791_Keywords_WIDGET_PROPERTYSHEET_"></a>ALIGN_BOTTOM</h3>
        <p>Set this keyword to align the new widget with the bottom of its parent base. To take effect, the parent must be a ROW base.</p>
        <h3 class="Keyword"><a name="W_811389549_1036794"></a><a name="W_811389549_1036794_Keywords_WIDGET_PROPERTYSHEET_"></a>ALIGN_CENTER</h3>
        <p>Set this keyword to align the new widget with the center of its parent base. To take effect, the parent must be a ROW or COLUMN base. In ROW bases, the new widget will be vertically centered. In COLUMN bases, the new widget will be horizontally centered.</p>
        <h3 class="Keyword"><a name="W_811389549_1036796"></a><a name="W_811389549_1036796_Keywords_WIDGET_PROPERTYSHEET_"></a>ALIGN_LEFT</h3>
        <p>Set this keyword to align the new widget with the left side of its parent base. To take effect, the parent must be a COLUMN base.</p>
        <h3 class="Keyword"><a name="W_811389549_1036798"></a><a name="W_811389549_1036798_Keywords_WIDGET_PROPERTYSHEET_"></a>ALIGN_RIGHT</h3>
        <p>Set this keyword to align the new widget with the right side of its parent base. To take effect, the parent must be a COLUMN base.</p>
        <h3 class="Keyword"><a name="W_811389549_1036800"></a><a name="W_811389549_1036800_Keywords_WIDGET_PROPERTYSHEET_"></a>ALIGN_TOP</h3>
        <p>Set this keyword to align the new widget with the top of its parent base. To take effect, the parent must be a ROW base.</p>
        <h3 class="Keyword"><a name="W_811389549_1036802"></a><a name="W_811389549_1036802_Keywords_WIDGET_PROPERTYSHEET_"></a>CONTEXT_EVENTS</h3>
        <p>Set this keyword to cause <i>context menu events</i> (or simply <i>context events</i>) to be issued when the user clicks the right mouse button over the widget. Set the keyword to 0 (zero) to disable such events. Context events are intended for use with context-sensitive menus (also known as pop-up or shortcut menus); pass the context event ID to the WIDGET_DISPLAYCONTEXTMENU procedure within your widget program’s event handler to display the context menu.</p>
        <p>For more on detecting and handling context menu events, see <a href="../../Creating IDL Programs/Creating Applications in IDL/Creating_Menus.htm#widget_techniques_4218446668_95574">Context-Sensitive&gt;Menus</a>.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>With regard to /CONTEXT_EVENTS, the Motif and Windows version of the property sheet differ very slightly. In the Motif version, individually desensitized cells cannot generate context events, though their row label can.</p>
        <h3 class="Keyword"><a name="W_811389549_1078422"></a><a name="W_811389549_79558"></a>EDITABLE</h3>
        <p><a name="kanchor2871"></a>Set this keyword to 0 (zero) to mark a property sheet as read-only. Property sheet widgets are editable by default (EDITABLE=1). In this default mode, property values can be modified. When a property sheet is marked as read-only (EDITABLE=0), you can select properties and use any scrollbars, but cannot change any values. Setting this keyword to 0 is roughly equivalent to desensitizing all properties by setting the SENSITIVE attribute of <i>every</i> property on the property sheet equal to 0.</p>
        <p>Three things that determine the appearance of a property sheet data cells are, in order of greatest to least precedence:</p>
        <ol>
            <li value="1">Sensitivity of the entire widget — If SENSITIVE=0 for WIDGET_PROPERTYSHEET then no selection or scrolling is possible.</li>
            <li value="2">Editability of the entire widget — If EDITABLE=0 for the property sheet (meaning it is marked as read-only), cells can be selected but cannot be changed. If EDITABLE=1 (the default value meaning properties can be selected and modified), then the editability of individual properties is controlled by their individual sensitivity values.</li>
            <li value="3">Sensitivity of an individual property — If SENSITIVE=0 for an individual property (set using the RegisterProperty or SetPropertyAttribute methods of IDLitComponent), then the individual property cannot be selected or changed. </li>
        </ol>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>To set the SENSITIVE attribute of individual properties within a property sheet, use <a href="../../Object Classes/Miscellaneous/IDLitComponent__Register.htm">IDLitComponent::RegisterProperty</a> or <a href="../../Object Classes/Miscellaneous/IDLitComponent__SetPrope1.htm">IDLitComponent::SetPropertyAttribute</a>. </p>
        <h3 class="Keyword"><a name="W_811389549_1036806"></a><a name="W_811389549_1036806_Keywords_WIDGET_PROPERTYSHEET_"></a>EVENT_FUNC</h3>
        <p>A string containing the name of a function to be called by the WIDGET_EVENT function when an event arrives from a widget in the widget hierarchy rooted at the newly-created widget.</p>
        <h3 class="Keyword"><a name="W_811389549_1036808"></a><a name="W_811389549_1036808_Keywords_WIDGET_PROPERTYSHEET_"></a>EVENT_PRO</h3>
        <p>A string containing the name of a procedure to be called by the WIDGET_EVENT function when an event arrives from a widget in the widget hierarchy rooted at the newly-created widget.</p>
        <h3 class="Keyword"><a name="W_811389549_1036810"></a><a name="W_811389549_1036810_Keywords_WIDGET_PROPERTYSHEET_"></a>FONT</h3>
        <p>The name of the font to be used by the widget. The font specified is a device font (an X Windows font on Motif systems; a TrueType or PostScript font on Windows systems). See “About Device Fonts” in Appendix I of the <i>IDL Reference Guide</i> manual for details on specifying names for device fonts. If this keyword is omitted, the default font is used.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>On Microsoft Windows platforms, if FONT is not specified, IDL uses the system default font. Different versions of Windows use different system default fonts; in general, the system default font is the font appropriate for the version of Windows in question.</p>
        <h3 class="Keyword"><a name="W_811389549_1070614"></a><a name="W_811389549_39799"></a>FRAME</h3>
        <p>The value of this keyword specifies the width of a frame in units specified by the UNITS keyword (pixels are the default) to be drawn around the borders of the widget. Note that this keyword is only a “hint” to the toolkit, and may be ignored in some instances. If <a href="#W_811389549_1070660" class="selected">SUNKEN_FRAME</a> is also set, FRAME is ignored.</p>
        <h3 class="Keyword"><a name="W_811389549_1036813"></a><a name="W_811389549_1036813_Keywords_WIDGET_PROPERTYSHEET_"></a>FUNC_GET_VALUE</h3>
        <p>A string containing the name of a function to be called when the GET_VALUE keyword to the WIDGET_CONTROL procedure is called for this widget. Using this technique allows you to change the value that should be returned for a widget. Compound widgets use this ability to define their values transparently to the user.</p>
        <h3 class="Keyword">HIDE_ADVANCED_ONLY</h3>
        <p>Set this keyword to 1 to only display simple properties (properties that do not have the ADVANCED_ONLY attribute set). The default behavior is to display all properties.</p>
        <h3 class="Keyword"><a name="W_811389549_1097821"></a><a name="W_811389549_50554"></a>IGNORE_ACCELERATORS<a name="kanchor2872"></a></h3>
        <p>Set this keyword to specify what WIDGET_BUTTON accelerators are to be ignored when this propertysheet widget has keyboard focus. Valid values are:</p>
        <ul>
            <li value="1">A string or string array containing any value that is legal for WIDGET_BUTTON’s <a href="WIDGET_BUTTON.htm#W_811389549_1069174">ACCELERATOR</a> keyword </li>
            <li value="2">The number 1, indicating all accelerators should be ignored</li>
        </ul>
        <p>Ordinarily, accelerators are processed before keyboard events reach the widget that has the keyboard focus. Consider a case where the accelerator “Ctrl+V” has been mapped to a button that allows the user to paste objects copied from one drawing area into another. In an application that also has a propertysheet, attempting to use <b>Ctrl</b>+<b>V</b> to paste text into the propertysheet would fail as this event would be stolen by the accelerator. Setting IGNORE_ACCELERATORS to “Ctrl+V” allows a propertysheet widget with an editable text area to receive keyboard events instead of the button with a conflicting accelerator. Once the propertysheet text field loses focus, all specified accelerators are automatically re-enabled.</p>
        <p>See <a href="../../Creating IDL Programs/Creating Applications in IDL/Enhancing_Widget_Applica.htm#widget_techniques_4218446668_150796">Disabling Button Widget Accelerators</a> for usage details and examples. </p>
        <h3 class="Keyword"><a name="W_811389549_1036815"></a><a name="W_811389549_1036815_Keywords_WIDGET_PROPERTYSHEET_"></a>KILL_NOTIFY</h3>
        <p>Set this keyword to a string that contains the name of a procedure to be called automatically when the specified widget dies. Each widget is allowed a single such “callback” procedure. It can be removed by setting the routine to an empty string (<code>''</code>).</p>
        <p>The callback routine is called with the widget identifier as its only argument. At that point, the widget identifier can only be used with the WIDGET_CONTROL procedure to get or set the user value. All other requests that require a widget ID are disallowed for the target widget. The callback is not issued until the WIDGET_EVENT function is called. </p>
        <h3 class="Keyword"><a name="W_811389549_1100848"></a><a name="W_811389549_46519"></a>MULTIPLE_PROPERTIES</h3>
        <p>Set this property to 1 to allow multiple properties to be selected at the same time. When this keyword is set, you can hold down the <b>Ctrl</b> key while left-clicking with the mouse to make nonadjacent selections, or hold down the <b>Shift</b> key to select an adjacent range of properties in a property sheet. Set this property to 0 (zero) to disallow multiple property selection. This is the default. See <a href="../../Creating IDL Programs/Creating Applications in IDL/Selecting_Properties.htm#widget_propertysheet_3756481120_127532">Selecting Properties</a> for more information.</p>
        <h3 class="Keyword"><a name="W_811389549_1036819"></a><a name="W_811389549_1036819_Keywords_WIDGET_PROPERTYSHEET_"></a>NO_COPY</h3>
        <p>Usually, when setting or getting widget user values, either at widget creation or using the SET_UVALUE and GET_UVALUE keywords to WIDGET_CONTROL, IDL makes a second copy of the data being transferred. Although this technique is fine for small data, it can have a significant memory cost when the data being copied is large.</p>
        <p>If the NO_COPY keyword is set, IDL handles these operations differently. Rather than copy the source data, it takes the data away from the source and attaches it directly to the destination. This feature can be used by compound widgets to obtain state information from a UVALUE without all the memory copying that would otherwise occur. However, it has the side effect of causing the source variable to become undefined. During a set operation (using the UVALUE keyword to WIDGET_BASE or the SET_UVALUE keyword to WIDGET_CONTROL), the variable passed as value becomes undefined. During a get operation (GET_UVALUE keyword to WIDGET_CONTROL), the user value of the widget in question becomes undefined.</p>
        <h3 class="Keyword"><a name="W_811389549_1036822"></a><a name="W_811389549_1036822_Keywords_WIDGET_PROPERTYSHEET_"></a>NOTIFY_REALIZE</h3>
        <p>Set this keyword to a string that contains the name of a procedure to be called automatically when the specified widget is realized. This callback occurs just once (because widgets are realized only once). Each widget is allowed a single such callback procedure. It can be removed by setting the routine to an empty string (<code>''</code>). The callback routine is called with the widget ID as its only argument.</p>
        <h3 class="Keyword"><a name="W_811389549_1036824"></a><a name="W_811389549_1036824_Keywords_WIDGET_PROPERTYSHEET_"></a>PRO_SET_VALUE</h3>
        <p>A string containing the name of a procedure to be called when the SET_VALUE keyword to the WIDGET_CONTROL procedure is called for this widget. See the description of the <a href="WIDGET_CONTROL.htm#W_811389549_680154">PRO_SET_VALUE</a> keyword to <a href="WIDGET_CONTROL.htm#W_811389549_1232714">WIDGET_CONTROL</a> for information on using this keyword.</p>
        <h3 class="Keyword"><a name="W_811389549_1036826"></a><a name="W_811389549_1036826_Keywords_WIDGET_PROPERTYSHEET_"></a>SCR_XSIZE</h3>
        <p>Set this keyword to the desired screen width of the widget, in units specified by the UNITS keyword (pixels are the default). If neither XSIZE nor SCR_XSIZE is specified, then the property sheet widget will be naturally sized based on the width of cell contents. See <a href="../../Creating IDL Programs/Creating Applications in IDL/Property_Sheet_Sizing.htm#widget_propertysheet_3756481120_151392">Property Sheet Sizing</a> for details.</p>
        <h3 class="Keyword"><a name="W_811389549_1036828"></a><a name="W_811389549_1036828_Keywords_WIDGET_PROPERTYSHEET_"></a>SCR_YSIZE</h3>
        <p>Set this keyword to the desired screen height of the widget, in units specified by the UNITS keyword (pixels are the default). If neither YSIZE nor SCR_YSIZE is specified, the property sheet will use a default height. This default is based on the number of rows: 10, or the number of visible properties, whichever is less.</p>
        <h3 class="Keyword"><a name="W_811389549_1036830"></a><a name="W_811389549_1036830_Keywords_WIDGET_PROPERTYSHEET_"></a>SENSITIVE</h3>
        <p>Set this keyword to control the initial sensitivity state of the widget.</p>
        <p>If SENSITIVE is zero, the widget becomes insensitive. If nonzero, it becomes sensitive. When a widget is sensitive, it has normal appearance and can receive user input. For example, a sensitive button widget can be activated by moving the mouse cursor over it and pressing a mouse button. When a widget is insensitive, it indicates the fact by changing its appearance, looking disabled, and it ignores any input. </p>
        <p>Sensitivity can be used to control when a user is allowed to manipulate the widget. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Some widgets do not change their appearance when they are made insensitive, but they cease generating events.</p>
        <p>After creating the widget hierarchy, you can change the sensitivity state using the SENSITIVE keyword with the WIDGET_CONTROL procedure.</p>
        <h3 class="Keyword"><a name="W_811389549_1070660"></a><a name="W_811389549_99248"></a>SUNKEN_FRAME</h3>
        <p>Set this keyword to create the appearance of a three-dimensional, beveled border around the property sheet widget. This makes the widget appear slightly inset. If the FRAME keyword is also set, SUNKEN_FRAME overrides the setting, and the frame's width will be the minimum necessary to give the appearance of indentation.</p>
        <h3 class="Keyword"><a name="W_811389549_1036836"></a><a name="W_811389549_1036836_Keywords_WIDGET_PROPERTYSHEET_"></a>TRACKING_EVENTS</h3>
        <p>Set this keyword to cause widget tracking events to be issued for the widget whenever the mouse pointer enters or leaves the region covered by that widget. For the structure of tracking events, see “TRACKING_EVENTS” in the <i>IDL Reference Guide</i> manual in the documentation for WIDGET_BASE.</p>
        <h3 class="Keyword"><a name="W_811389549_1036838"></a><a name="W_811389549_1036838_Keywords_WIDGET_PROPERTYSHEET_"></a>UNAME </h3>
        <p>Set this keyword to a string that can be used to identify the widget in your code. You can associate a name with each widget in a specific hierarchy, and then use that name to query the widget hierarchy and get the correct widget ID.</p>
        <p>To query the widget hierarchy, use the WIDGET_INFO function with the FIND_BY_UNAME keyword. The UNAME should be unique to the widget hierarchy because the FIND_BY_UNAME keyword returns the ID of the first widget with the specified name.</p>
        <h3 class="Keyword"><a name="W_811389549_1036841"></a><a name="W_811389549_1036841_Keywords_WIDGET_PROPERTYSHEET_"></a>UNITS</h3>
        <p>Set this keyword to specify the units used when <i>supplying</i> measurements or position values. Set UNITS equal to 0 (zero) to specify that all measurements are in pixels (this is the default), to 1 (one) to specify that all measurements are in inches, or to 2 (two) to specify that all measurements are in centimeters. This keyword does not change the units used in a widget event structure or in most of the fields of the geometry structure returned by WIDGET_INFO.</p>
        <h3 class="Keyword"><a name="W_811389549_1036843"></a><a name="W_811389549_1036843_Keywords_WIDGET_PROPERTYSHEET_"></a>UVALUE</h3>
        <p>The user value to be assigned to the widget. Each widget can contain a user-specified value of any data type and organization. This value is not used by the widget in any way, but exists entirely for the convenience of the IDL programmer. This keyword allows you to set this value when the widget is first created.</p>
        <p>If UVALUE is not present, the widget’s initial user value is undefined.</p>
        <p>The user value for a widget can be accessed and modified at any time by using the GET_UVALUE and SET_UVALUE keywords to the WIDGET_CONTROL procedure.</p>
        <h3 class="Keyword"><a name="W_811389549_1036847"></a><a name="W_811389549_1036847_Keywords_WIDGET_PROPERTYSHEET_"></a>VALUE</h3>
        <p>Set this keyword to the object reference or array of object references to objects that subclass from the IDLitComponent class. Registered properties of the specified objects will be displayed in the property sheet.</p>
        <p>If a single object reference is supplied, the property sheet will have a single column containing the object’s properties. If an array of object references is supplied, the property sheet will have multiple columns.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Due to limitations of the user interface controls that underlie the property sheet widget, a property sheet can display properties for at most 100 component objects.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>All object references must be to objects of the same type.</p>
        <p>If no object references are supplied, the property sheet will initially be empty. Object references can be loaded into an existing property sheet using the SET_VALUE keyword to WIDGET_CONTROL. Whenever the value is set, via SET_VALUE, the property sheet widget is loaded with the registered, visible properties of the new component. Setting the value to a null object will clear the property sheet widget. A null object can be created by calling the OBJ_NEW function without any arguments:</p>
        <p class="Code">nullObject = OBJ_NEW()</p>
        <h3 class="Keyword"><a name="W_811389549_1036853"></a><a name="W_811389549_1036853_Keywords_WIDGET_PROPERTYSHEET_"></a>XOFFSET</h3>
        <p>The horizontal offset of the widget in units specified by the UNITS keyword (pixels are the default) relative to its parent.</p>
        <p>Specifying an offset relative to a row or column major base widget does not work because those widgets enforce their own layout policies. This keyword is primarily of use relative to a bulletin board base widget. Note that it is best to avoid using this style of widget layout.</p>
        <h3 class="Keyword"><a name="W_811389549_1036856"></a><a name="W_811389549_1036856_Keywords_WIDGET_PROPERTYSHEET_"></a>XSIZE</h3>
        <p>The widget width, measured in average character widths of the widget's font. This value includes the row label, but does not include any vertical scrollbar or frame thickness. If neither XSIZE nor SCR_XSIZE is specified, then the property sheet widget will be naturally sized based on the width of cell contents. See <a href="../../Creating IDL Programs/Creating Applications in IDL/Property_Sheet_Sizing.htm#widget_propertysheet_3756481120_151392">Property Sheet Sizing</a> for details.</p>
        <h3 class="Keyword"><a name="W_811389549_1036858"></a><a name="W_811389549_1036858_Keywords_WIDGET_PROPERTYSHEET_"></a>YOFFSET</h3>
        <p>The vertical offset of the widget in units specified by the UNITS keyword (pixels are the default) relative to its parent. This offset is specified relative to the <i>upper left</i> corner of the parent widget.</p>
        <p>Specifying an offset relative to a row or column major base widget does not work because those widgets enforce their own layout policies. This keyword is primarily of use relative to a bulletin board base widget. Note that it is best to avoid using this style of widget layout.</p>
        <h3 class="Keyword"><a name="W_811389549_1036861"></a><a name="W_811389549_1036861_Keywords_WIDGET_PROPERTYSHEET_"></a>YSIZE</h3>
        <p>The desired height of the widget, in number of visible properties. The ultimate height of the property sheet in pixels will include the heights of the column header, the possible horizontal scrollbar, and any frame. If neither YSIZE nor SCR_YSIZE is specified, the property sheet will use a default height. This default is based on the number of rows: 10, or the number of visible properties, whichever is less.</p>
        <h2 class="API"><a name="W_811389549_1036864"></a><a name="W_811389549_41843"></a>Keywords to WIDGET_CONTROL</h2>
        <p>A number of keywords to the WIDGET_CONTROL affect the behavior of property sheet widgets. In addition to those keywords that affect all widgets, the following keywords are particularly useful: <a href="WIDGET_CONTROL.htm#W_811389549_949802">CONTEXT_EVENTS</a>, <a href="WIDGET_CONTROL.htm#W_811389549_889314">EDITABLE</a>, <a href="WIDGET_CONTROL.htm#W_811389549_1183394">IGNORE_ACCELERATORS</a>, <a href="WIDGET_CONTROL.htm#W_811389549_1100768">MULTIPLE_PROPERTIES</a>, <a href="WIDGET_CONTROL.htm#W_811389549_1070765">PROPERTYSHEET_SETSELECTED</a>, <a href="WIDGET_CONTROL.htm#W_811389549_1018381">REFRESH_PROPERTY</a>.</p>
        <h2 class="API"><a name="W_811389549_1036870"></a><a name="W_811389549_41746"></a>Keywords to WIDGET_INFO</h2>
        <p>Some keywords to WIDGET_INFO return information that applies specifically to property sheet widgets. In addition to those keywords that apply to all widgets, the following keywords are particularly useful: <a href="WIDGET_INFO.htm#W_811389549_1018415">COMPONENT</a>, <a href="WIDGET_INFO.htm#W_811389549_1018413">CONTEXT_EVENTS</a><a href="WIDGET_INFO.htm#W_811389549_1100808">MULTIPLE_PROPERTIES</a>, <a href="WIDGET_INFO.htm#W_811389549_1018429">PROPERTY_VALID</a>, <a href="WIDGET_INFO.htm#W_811389549_1018452">PROPERTY_VALUE</a>, <a href="WIDGET_INFO.htm#W_811389549_1070799">PROPERTYSHEET_NSELECTED</a>, <a href="WIDGET_INFO.htm#W_811389549_1082483">PROPERTYSHEET_SELECTED</a>, <a href="WIDGET_INFO.htm#W_811389549_1186243">STRING_SIZE</a>.</p>
        <h2 class="API"><a name="W_811389549_1036882"></a><a name="W_811389549_29011"></a>Widget Events Returned by Property Sheet Widgets</h2>
        <p>Several variations of the property sheet widget event structure depend upon the specific event being reported. All of these structures contain the standard three fields (ID, TOP, and HANDLER). The select and change events also include an integer TYPE field that indicates which type of structure has been returned or which type of event was generated. Programs should always check the TYPE field before referencing fields that are not present in all property sheet event structures, unless the CONTEXT_EVENTS keyword is set. When handling context menu events, the event structure name must be used instead of the TYPE field. The different property sheet widget event structures are described below.</p>
        <h3><a name="W_811389549_1036884_Keywords_WIDGET_PROPERTYSHEET_"></a>Change Event (TYPE=0)</h3>
        <p>This event is generated whenever the user enters a new value for a property. It is also used to signal that a user-defined property needs to be changed. The following statement defines the event structure returned by the WIDGET_EVENT function:</p>
        <p class="Code">{WIDGET_PROPSHEET_CHANGE, ID:0L, TOP:0L, HANDLER:0L, TYPE:0L, &#160;&#160;&#160;COMPONENT:OBJREF, IDENTIFIER:"", PROPTYPE:0L, SET_DEFINED: OL}</p>
        <p>The COMPONENT field contains an object reference to the object associated with the property sheet. When multiple objects are associated with the property sheet, this field indicates which object is to change.</p>
        <p>The IDENTIFIER field specifies the value of the property’s identifier attribute. This identifier is unique among all of the component’s properties.</p>
        <p>The PROPTYPE field indicates the type of the property (integer, string, etc.). The integer values for these types are:</p>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" class="TableStyle_VersionTable" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>6.0</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>6.1</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Added EDITABLE, FRAME, IGNORE_ACCELERATORS, MULTIPLE_PROPERTIES, and SUNKEN_FRAME keywords</p>
                        <p>Added NSELECTED field to WIDGET_PROPSHEET_SELECT event structure</p>
                        <p>Added ROW and COL fields to WIDGET_CONTEXT event structure</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API"><a name="W_811389549_1193108"></a><a name="W_811389549_53774"></a>See Also</h2>
        <p><a href="../../Creating IDL Programs/Creating Applications in IDL/About_Property_Sheet_Wid.htm#widget_propertysheet_3756481120_100059">About Property Sheet Widgets</a>
        </p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>