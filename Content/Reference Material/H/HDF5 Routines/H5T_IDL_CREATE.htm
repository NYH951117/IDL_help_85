<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: H|HDF5 Routines">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>H5T_IDL_CREATE</title>
        <link href="../../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../H_list.htm">Routines: H</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../HDF5_Routines.htm">HDF5 Routines</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">H5T_IDL_CREATE</span>
        </div>
        <h1 class="Routine"><a name="HDF5_209170119_1012456"></a><a name="HDF5_209170119_14804"></a>H5T_IDL_CREATE</h1>
        <p>The <a name="kanchor1451"></a>H5T_IDL_CREATE function creates a datatype object based on the IDL type of the supplied data.</p>
        <h2 class="API"><a name="HDF5_209170119_43100"></a>Example</h2>
        <p>See the example under <a href="H5F_CREATE.htm#HDF5_209170119_1007521">H5F_CREATE</a>.</p>
        <h2 class="API"><a name="HDF5_209170119_95626"></a>Syntax</h2>
        <p class="Syntax"><i>Result</i> = H5T_IDL_CREATE(<i>Data</i> [,<a href="#HDF5_209170119_1012558" class="selected">MEMBER_NAMES</a>=<i>vector</i>] [,&#160;/<a href="#HDF5_209170119_1012566" class="selected">OPAQUE</a>])</p>
        <h2 class="API"><a name="HDF5_209170119_86236"></a>Return Value</h2>
        <p>Returns a long integer containing the identifier of the new datatype.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Datatype identifiers created by this function should be released with H5T_CLOSE.</p>
        <h2 class="API"><a name="HDF5_209170119_10299"></a>Arguments</h2>
        <h3 class="Argument">Data</h3>
        <p>An IDL variable containing the type of data that will be used by the resulting datatype. If a structure is passed in a compound datatype will be created based on the fields of the structure. The following table shows how IDL data types are converted to HDF5 datatypes. Pointers, complex numbers, and object references cannot be written to HDF5 datatypes.</p>
        <table style="caption-side: bottom;mc-table-style: url('../../../Resources/TableStyles/Description.css');" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>IDL type</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>HDF5 Datatype</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>Byte</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>H5T_NATIVE_UINT8</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>Integer</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>H5T_NATIVE_INT16</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>Unsigned integer</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>H5T_NATIVE_UINT16</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>Long integer</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>H5T_NATIVE_INT32</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>Unsigned long integer</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>H5T_NATIVE_UINT32</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>64-bit Integer</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>H5T_NATIVE_INT64</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>Unsigned 64-bit integer</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>H5T_NATIVE_UINT64</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>Floating point</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>H5T_NATIVE_FLOAT</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>Double-precision floating</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>H5T_NATIVE_DOUBLE</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p><b>String</b>
                        </p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>H5T_C_S1</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p>Structure</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p>(Member datatypes)</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If the data is an array, the datatype is constructed from the first element in the array. If an HDF5 array datatype is desired, then the datatype returned in this routine should be passed into H5T_ARRAY_CREATE. Using the first element could affect the size of a string datatype. All elements of a string datatype will have the same length, or number of characters. Strings smaller than the datatype length will be stored appropriately, but strings longer than the datatype length will be truncated. The size of the returned datatype will include a null termination character and thus will be one more than the number of characters in the string. For example: <br /><br /><code>	datatype_id = H5T_IDL_CREATE('dog')</code><br /><br />This produces a datatype with a size of 4. A dataset created with this datatype will only store up to 4 characters per element of the data being written. The following:<br /><br /><code>datatype_id = H5T_IDL_CREATE(['dog', 'dragon']) </code><br /><br />will still produce a datatype with a size of 4 because the first element of the array is used when creating the datatype. When creating a string datatype the longest string needed should be used. Note that an excessively long string could result in a bloated file.</p>
        <h2 class="API"><a name="HDF5_209170119_32127"></a>Keywords</h2>
        <h3 class="Keyword"><a name="HDF5_209170119_1012558"></a><a name="HDF5_209170119_72506"></a>MEMBER_NAMES</h3>
        <p>A string vector giving the name of each member of the compound datatype. This keyword is ignored if <i>Data</i> is not an IDL structure. If <i>Data</i> is an IDL structure and this keyword is not provided, the member names will be constructed from the field names in the structure, converting all letters to uppercase and all non-alphanumeric characters to underscores. If the number of elements in MEMBER_NAMES is less than the number of elements in the structure, field names will be used for member names where needed. If the number of elements in MEMBER_NAMES is greater than the number of elements in the structure, the extra string values will be ignored.</p>
        <p>Elements of MEMBER_NAMES are assigned to fields in a depth-first, left-to-right traversal of the structure. For example, if <i>Data</i> contains a structure that looks like:</p>
        <p class="Code">{ a:0l, b:{d:0l, e:0l}, c:0l }</p>
        <p>and MEMBER_NAMES contains:</p>
        <p class="Code">['cat', 'dog', 'dragon', 'emu']</p>
        <p>then the resulting compound datatype uses the name <code>'cat'</code> to refer to the datatype created from field <code>a</code>, <code>'dog'</code> to refer to field <code>b</code>, <code>'dragon'</code> to refer to field <code>d</code>, and <code>'emu'</code> to refer to field <code>e</code>. Since only four names are provided, the compound datatype uses the name <code>'C'</code> to refer to field <code>c</code>.</p>
        <h3 class="Keyword"><a name="HDF5_209170119_1012566"></a><a name="HDF5_209170119_1238464_Keywords_H5T_IDL_CREATE_"></a>OPAQUE</h3>
        <p>Set this keyword to create an opaque datatype. The size of the datatype will be determined by the size of the <i>Data</i> argument.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Opaque datatypes store data as a simple string of bytes, regardless of the form the data is in when written to the datatype. An opaque datatype is always a single element, regardless of the number of bytes.</p>
        <h2 class="API"><a name="HDF5_209170119_70824"></a>Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>6.2</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>6.3</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Added support for opaque datatypes and OPAQUE keyword</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API"><a name="HDF5_209170119_90505"></a>See Also</h2>
        <p><a href="H5T_ARRAY_CREATE.htm#HDF5_209170119_1010250">H5T_ARRAY_CREATE</a>, <a href="H5T_CLOSE.htm#HDF5_209170119_1010315">H5T_CLOSE</a>, <a href="H5T_REFERENCE_CREATE.htm#HDF5_209170119_1012836">H5T_REFERENCE_CREATE</a></p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>