<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: C">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>CW_BGROUP </title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="C_list.htm">Routines: C</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">CW_BGROUP</span>
        </div>
        <h1 class="Routine"><a name="C_854643309_755132"></a><a name="C_854643309_73565"></a>CW_BGROUP<a name="kanchor413"></a> <![CDATA[ ]]></h1>
        <p><a name="kanchor414"></a><a name="kanchor415"></a>The CW_BGROUP function creates a widget base of buttons. It simplifies creation of a cluster of buttons, and handles the details of creating the proper base (standard, exclusive, or non-exclusive) and filling in the desired buttons. Button groups can be simple menus in which each button acts independently, <i>exclusive</i> groups (also known as “radio buttons”), or <i>non-exclusive</i> groups (often called “checkboxes”). Events for the individual buttons are handled transparently, and a CW_BGROUP event returned. This event can return any one of the following:</p>
        <ul>
            <li value="1">Index of the button within the base</li>
            <li value="2">Widget ID of the button</li>
            <li value="3">Name of the button</li>
            <li value="4">Arbitrary value taken from an array of user values</li>
        </ul>
        <p>Only buttons with textual names are handled by this widget. Bitmaps are not understood.</p>
        <p>This routine is written in the IDL language. Its source code can be found in the file <code>cw_bgroup.pro</code> in the <code>lib</code> subdirectory of the IDL distribution.</p>
        <h2 class="API"><a name="C_854643309_1298147"></a><a name="C_854643309_22223"></a>Examples</h2>
        <p>See <a href="../../Creating IDL Programs/Creating Applications in IDL/Creating_Menus.htm#widget_techniques_4218446668_121921">Creating Menus</a> for example CW_BGROUP code. </p>
        <h2 class="API"><a name="C_854643309_147542"></a><a name="C_854643309_147542_PageTOC_CW_BGROUP_"></a>Syntax</h2>
        <p class="Syntax"><i>Result</i> = CW_BGROUP( <i>Parent</i>, <i>Names</i> [,&#160;<a href="#C_854643309_755175" class="selected">BUTTON_UVALUE</a>=<i>array</i>] [,&#160;<a href="#C_854643309_755178" class="selected">COLUMN</a>=<i>value</i>] [,&#160;<a href="#C_854643309_755181" class="selected">EVENT_FUNCT</a>=<i>string</i>] [{, /<a href="#C_854643309_755184" class="selected">EXCLUSIVE</a> | , /<a href="#C_854643309_755205" class="selected">NONEXCLUSIVE</a>} | [,&#160;<a href="#C_854643309_755230" class="selected">SPACE</a>=<i>pixels</i>] [,&#160;<a href="#C_854643309_755239" class="selected">XPAD</a>=<i>pixels</i>] [,&#160;<a href="#C_854643309_755251" class="selected">YPAD</a>=<i>pixels</i>]] [,&#160;<a href="#C_854643309_755187" class="selected">FONT</a>=<i>font</i>] [,&#160;<a href="#C_854643309_755190" class="selected">FRAME</a>=<i>width</i>] [,&#160;<a href="#C_854643309_755193" class="selected">IDS</a>=<i>variable</i>] [,&#160;<a href="#C_854643309_755196" class="selected">LABEL_LEFT</a>=<i>string</i>&#160;|&#160;,&#160;<a href="#C_854643309_755199" class="selected">LABEL_TOP</a>=<i>string</i>] [,&#160;/<a href="#C_854643309_755202" class="selected">MAP</a>] [,&#160;/<a href="#C_854643309_755208" class="selected">NO_RELEASE</a>] [,&#160;/<a href="#C_854643309_755211" class="selected">RETURN_ID</a> | , /<a href="#C_854643309_755214" class="selected">RETURN_INDEX</a> | , /<a href="#C_854643309_755217" class="selected">RETURN_NAME</a>] [,&#160;<a href="#C_854643309_755220" class="selected">ROW</a>=<i>value</i>] [,&#160;/<a href="#C_854643309_755223" class="selected">SCROLL</a>] [,&#160;<a href="#C_854643309_755226" class="selected">SET_VALUE</a>=<i>value</i>] [,&#160;<a href="#C_854643309_1189560" class="selected">TAB_MODE</a>=<i>value</i>] [,&#160;<a href="#C_854643309_755245" class="selected">X_SCROLL_SIZE</a>=<i>width</i>] [,&#160;<a href="#C_854643309_755257" class="selected">Y_SCROLL_SIZE</a>=<i>height</i>] [,&#160;<a href="#C_854643309_755226" class="selected">SET_VALUE</a>=<i>value</i>] [,&#160;<a href="#C_854643309_996707" class="selected">UNAME</a>=<i>string</i>] [,&#160;<a href="#C_854643309_755233" class="selected">UVALUE</a>=<i>value</i>] [,&#160;<a href="#C_854643309_755236" class="selected">XOFFSET</a>=<i>value</i>] [,&#160;<a href="#C_854643309_755242" class="selected">XSIZE</a>=<i>width</i>] [,&#160;<a href="#C_854643309_755248" class="selected">YOFFSET</a>=<i>value</i>] [,&#160;<a href="#C_854643309_755254" class="selected">YSIZE</a>=<i>value</i>] )</p>
        <h2 class="API"><a name="C_854643309_755168"></a><a name="C_854643309_755168_PageTOC_CW_BGROUP_"></a>Return Value</h2>
        <p>This function returns the widget ID of the newly-created button group widget.</p>
        <h2 class="API"><a name="C_854643309_1026984"></a><a name="C_854643309_1026984_PageTOC_CW_BGROUP_"></a>Arguments</h2>
        <h3 class="Argument">Parent</h3>
        <p>The widget ID of the parent widget.</p>
        <h3 class="Argument">Names</h3>
        <p>A string array, one string per button, giving the name of each button.</p>
        <h2 class="API"><a name="C_854643309_755173"></a><a name="C_854643309_755173_PageTOC_CW_BGROUP_"></a>Keywords</h2>
        <h3 class="Keyword"><a name="C_854643309_755175"></a><a name="C_854643309_755175_Keywords_CW_BGROUP__"></a>BUTTON_UVALUE</h3>
        <p>An array of user values to be associated with each button and returned in the event structure. If this keyword is set, the user values are always returned, even if the any of the RETURN_ID, RETURN_INDEX, or RETURN_NAME keywords are set.</p>
        <h3 class="Keyword"><a name="C_854643309_755178"></a><a name="C_854643309_755178_Keywords_CW_BGROUP__"></a>COLUMN</h3>
        <p>Buttons will be arranged in the number of columns specified by this keyword.</p>
        <h3 class="Keyword"><a name="C_854643309_755181"></a><a name="C_854643309_755181_Keywords_CW_BGROUP__"></a>EVENT_FUNCT</h3>
        <p>A string containing the name of a function to be called by the WIDGET_EVENT function when an event arrives from a widget in the widget hierarchy rooted at the newly-created widget. This function is called with the return value structure whenever a button is pressed, and follows the conventions for user-written event functions.</p>
        <h3 class="Keyword"><a name="C_854643309_755184"></a><a name="C_854643309_755184_Keywords_CW_BGROUP__"></a>EXCLUSIVE</h3>
        <p>Set this keyword to cause buttons to be placed in an exclusive base, in which only one button can be selected at a time.</p>
        <h3 class="Keyword"><a name="C_854643309_755187"></a><a name="C_854643309_755187_Keywords_CW_BGROUP__"></a>FONT</h3>
        <p>The name of the font to be used for the button titles. The font specified is a “device font” (an X Windows font on Motif systems; a TrueType or PostScript font on Windows systems). See <a href="../../Creating IDL Programs/Appendices/Using_Device_Fonts.htm#fonts_2203613354_1049926">About Device Fonts</a> for details on specifying names for device fonts. If this keyword is omitted, the default font is used.</p>
        <h3 class="Keyword"><a name="C_854643309_755190"></a><a name="C_854643309_755190_Keywords_CW_BGROUP__"></a>FRAME</h3>
        <p>Specifies the width of the frame to be drawn around the base.</p>
        <h3 class="Keyword"><a name="C_854643309_755193"></a><a name="C_854643309_755193_Keywords_CW_BGROUP__"></a>IDS</h3>
        <p>A named variable in which the button IDs will be stored, as a longword vector.</p>
        <h3 class="Keyword"><a name="C_854643309_755196"></a><a name="C_854643309_755196_Keywords_CW_BGROUP__"></a>LABEL_LEFT</h3>
        <p>Set this keyword to a string creating a text label to the left of the buttons.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>You can use language catalogs to internationalize this value with strings in particular languages. </p>
        <h3 class="Keyword"><a name="C_854643309_755199"></a><a name="C_854643309_755199_Keywords_CW_BGROUP__"></a>LABEL_TOP</h3>
        <p>Set this keyword to a string creating a text label above the buttons.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>You can use language catalogs to internationalize this value with strings in particular languages.</p>
        <h3 class="Keyword"><a name="C_854643309_755202"></a><a name="C_854643309_755202_Keywords_CW_BGROUP__"></a>MAP</h3>
        <p>Set this keyword to cause the base to be mapped when the widget is realized (the default).</p>
        <h3 class="Keyword"><a name="C_854643309_755205"></a><a name="C_854643309_755205_Keywords_CW_BGROUP__"></a>NONEXCLUSIVE</h3>
        <p>Set this keyword to cause buttons to be placed in an non-exclusive base, in which any number of buttons can be selected at once.</p>
        <h3 class="Keyword"><a name="C_854643309_755208"></a><a name="C_854643309_755208_Keywords_CW_BGROUP__"></a>NO_RELEASE</h3>
        <p>If set, button release events will not be returned.</p>
        <h3 class="Keyword"><a name="C_854643309_755211"></a><a name="C_854643309_755211_Keywords_CW_BGROUP__"></a>RETURN_ID</h3>
        <p>Set this keyword to return the widget ID of the button in the VALUE field of returned events. This keyword is ignored if the BUTTON_UVALUE keyword is set.</p>
        <h3 class="Keyword"><a name="C_854643309_755214"></a><a name="C_854643309_755214_Keywords_CW_BGROUP__"></a>RETURN_INDEX</h3>
        <p>Set this keyword to return the zero-based index of the button within the base in the VALUE field of returned events. This keyword is ignored if the BUTTON_UVALUE keyword is set. THIS IS THE DEFAULT.</p>
        <h3 class="Keyword"><a name="C_854643309_755217"></a><a name="C_854643309_755217_Keywords_CW_BGROUP__"></a>RETURN_NAME</h3>
        <p>Set this keyword to return the name of the button within the base in the VALUE field of returned events. This keyword is ignored if the BUTTON_UVALUE keyword is set.</p>
        <h3 class="Keyword"><a name="C_854643309_755220"></a><a name="C_854643309_755220_Keywords_CW_BGROUP__"></a>ROW</h3>
        <p>Buttons will be arranged in the number of rows specified by this keyword.</p>
        <h3 class="Keyword"><a name="C_854643309_755223"></a><a name="C_854643309_755223_Keywords_CW_BGROUP__"></a>SCROLL</h3>
        <p>If set, the base will include scroll bars to allow viewing a large base through a smaller viewport.</p>
        <h3 class="Keyword"><a name="C_854643309_755226"></a><a name="C_854643309_755226_Keywords_CW_BGROUP__"></a>SET_VALUE</h3>
        <p>
            <img src="../../images/cw_bgroup_set_value.gif" style="float: right;margin-left: 5.99976px;margin-top: 5.99976px;margin-right: 6.02496px;margin-bottom: 6.000469px;" />Allows changing the current state of toggle buttons. SET_VALUE works differently for exclusive and nonexclusive buttons. For exclusive buttons, the SET_VALUE argument is set to the zero-based index of the button when the widget is realized. For example, to set the default to the fourth button in a series, then set the SET_VALUE keyword equal to three.</p>
        <p>For nonexclusive buttons, the SET_VALUE keyword works as an array of flags to set the buttons on (1) or off (0).</p>
        <p>The following example demonstrates both of these concepts:</p>
        <p class="Code">PRO ex_cw_bgroup</p>
        <p class="Code">values = ['One', 'Two', 'Three', 'Four', 'Five'] </p>
        <p class="Code">base = WIDGET_BASE(/ROW) </p>
        <p class="Code">bgroup1 = CW_BGROUP(base, values, /COLUMN, /EXCLUSIVE, $ </p>
        <p class="Code">  LABEL_TOP='Exclusive', /FRAME, SET_VALUE=3) </p>
        <p class="Code">bgroup2 = CW_BGROUP(base, values, /COLUMN, /NONEXCLUSIVE, $ </p>
        <p class="Code">  LABEL_TOP='Nonexclusive', /FRAME, SET_VALUE=[1,0,1,0,1]) </p>
        <p class="Code">WIDGET_CONTROL, base, /REALIZE </p>
        <p class="Code">END</p>
        <h3 class="Keyword"><a name="C_854643309_755230"></a><a name="C_854643309_755230_Keywords_CW_BGROUP__"></a>SPACE</h3>
        <p>The space, in pixels, to be left horizontally and vertically between each individual button member of the CW_BGROUP base. This keyword’s value is only applied if one of the COLUMN or ROW keywords is set.</p>
        <h3 class="Keyword"><a name="C_854643309_1189560"></a><a name="C_854643309_71533"></a>TAB_MODE</h3>
        <p>Set this keyword to one of the values shown in the table below to determine how the widget hierarchy can be navigated using the <b>Tab</b> key. The TAB_MODE setting is inherited by lower-level bases and child widgets unless it is explicitly set on an individual widget.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>It is not possible to tab to disabled (SENSITIVE=0) or hidden (MAP=0) widgets.</p>
        <p>Valid settings are:</p>
        <table style="caption-side: bottom;mc-table-style: url('../../Resources/TableStyles/Description.css');" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Value</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Description</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>0</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Disable navigation onto or off of the widget. This is the default. Child widgets automatically inherit the tab mode of the parent base as described in <a href="../../Creating IDL Programs/Creating Applications in IDL/Enhancing_Widget_Applica.htm#widget_techniques_4218446668_142828">Inheriting the TAB_MODE Value</a>.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>1</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Enable navigation onto and off of the widget.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>2</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Navigate only onto the widget.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p>3</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColEnd">
                        <p>Navigate only off of the widget.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>In widget applications on the UNIX platform, the Motif library controls what widgets are brought into and released from focus using tabbing. The TAB_MODE keyword value is always zero, and any attempt to change it is ignored when running a widget application on the UNIX platform. Tabbing behavior may vary significantly between UNIX platforms; do not rely on a particular behavior being duplicated on all UNIX systems.</p>
        <h3 class="Keyword"><a name="C_854643309_996707"></a><a name="C_854643309_996707_Keywords_CW_BGROUP__"></a>UNAME </h3>
        <p>Set this keyword to a string that can be used to identify the widget in your code. You can associate a name with each widget in a specific hierarchy, and then use that name to query the widget hierarchy and get the correct widget ID.</p>
        <p>To query the widget hierarchy, use the <a href="../W/WIDGET_INFO.htm#W_811389549_680333">WIDGET_INFO</a> function with the FIND_BY_UNAME keyword. The UNAME should be unique to the widget hierarchy because the FIND_BY_UNAME keyword returns the ID of the first widget with the specified name.</p>
        <h3 class="Keyword"><a name="C_854643309_755233"></a><a name="C_854643309_755233_Keywords_CW_BGROUP__"></a>UVALUE</h3>
        <p>The “user value” to be assigned to the widget.</p>
        <h3 class="Keyword"><a name="C_854643309_755236"></a><a name="C_854643309_755236_Keywords_CW_BGROUP__"></a>XOFFSET</h3>
        <p>The X offset of the widget relative to its parent.</p>
        <h3 class="Keyword"><a name="C_854643309_755239"></a><a name="C_854643309_755239_Keywords_CW_BGROUP__"></a>XPAD</h3>
        <p>The horizontal space, in pixels, to be left around the edges of a row or column major base. This keyword’s value is only applied if one of the COLUMN or ROW keywords is set.</p>
        <h3 class="Keyword"><a name="C_854643309_755242"></a><a name="C_854643309_755242_Keywords_CW_BGROUP__"></a>XSIZE</h3>
        <p>The width of the base. </p>
        <h3 class="Keyword"><a name="C_854643309_755245"></a><a name="C_854643309_755245_Keywords_CW_BGROUP__"></a>X_SCROLL_SIZE</h3>
        <p>The width of the viewport if SCROLL is specified.</p>
        <h3 class="Keyword"><a name="C_854643309_755248"></a><a name="C_854643309_755248_Keywords_CW_BGROUP__"></a>YOFFSET</h3>
        <p>The Y offset of the widget relative to its parent.</p>
        <h3 class="Keyword"><a name="C_854643309_755251"></a><a name="C_854643309_755251_Keywords_CW_BGROUP__"></a>YPAD</h3>
        <p>The vertical space, in pixels, to be left around the edges of a row or column major base. This keyword’s value is only applied if one of the COLUMN or ROW keywords is set.</p>
        <h3 class="Keyword"><a name="C_854643309_755254"></a><a name="C_854643309_755254_Keywords_CW_BGROUP__"></a>YSIZE</h3>
        <p>The height of the base. </p>
        <h3 class="Keyword"><a name="C_854643309_755257"></a><a name="C_854643309_755257_Keywords_CW_BGROUP__"></a>Y_SCROLL_SIZE</h3>
        <p>The height of the viewport if SCROLL is specified.</p>
        <h3><a name="C_854643309_837205_Keywords_CW_BGROUP__"></a>Keywords to WIDGET_CONTROL and WIDGET_INFO</h3>
        <p>The widget ID returned by most compound widgets is actually the ID of the compound widget’s base widget. This means that many keywords to the WIDGET_CONTROL and WIDGET_INFO routines that affect or return information on base widgets can be used with compound widgets.</p>
        <p>In addition, you can use the <a href="../W/WIDGET_CONTROL.htm#W_811389549_680122">GET_VALUE</a> and <a href="../W/WIDGET_CONTROL.htm#W_811389549_680190">SET_VALUE</a> keywords to WIDGET_CONTROL to obtain or set the value of the button group. The values for different types of CW_BGROUP widgets is shown in the table below:</p>
        <table style="caption-side: bottom;mc-table-style: url('../../Resources/TableStyles/Description.css');" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Type</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Value</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>normal</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>None</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>exclusive</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Index of currently set button</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p>non-exclusive</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p>Vector indicating the position of each button (1-set, 0-unset)</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>See <a href="../../Creating IDL Programs/Creating Applications in IDL/Creating_a_Compound_Widg.htm#widget_apps_4063420628_1042483">Writing Compound Widgets</a> for a more complete discussion of controlling compound widgets using WIDGET_CONTROL and WIDGET_INFO.</p>
        <h2 class="API"><a name="C_854643309_1083074"></a><a name="C_854643309_97406"></a>Widget Events Returned by the CW_BGROUP Widget</h2>
        <p>CW_BGROUP generates an event that specifies which button or buttons were selected. The widgets generate event structures with the following definition:</p>
        <p class="Code">event = {ID:0L, TOP:0L, HANDLER:0L, SELECT:0, VALUE:0 }</p>
        <p>The SELECT field is passed through from the button event. VALUE is either the INDEX, ID, NAME, or BUTTON_UVALUE of the button, depending on how the widget was created.</p>
        <h2 class="API"><a name="C_854643309_755264"></a><a name="C_854643309_755264_PageTOC_CW_BGROUP_"></a>Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>Pre 4.0</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>6.1</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Added TAB_MODE keyword</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API"><a name="C_854643309_1052310"></a><a name="C_854643309_1052310_PageTOC_CW_BGROUP_"></a>See Also</h2>
        <p><a href="CW_PDMENU.htm#C_854643309_998412">CW_PDMENU</a>, <a href="../W/WIDGET_BUTTON.htm#W_811389549_36288">WIDGET_BUTTON</a></p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>