<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: C">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>CW_DEFROI </title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="C_list.htm">Routines: C</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">CW_DEFROI</span>
        </div>
        <h1 class="Routine"><a name="dg_routines_3604229493_881234"></a>CW_DEFROI<a name="kanchor422"></a> <![CDATA[ ]]></h1>
        <p><a name="kanchor423"></a><a name="kanchor424"></a>The CW_DEFROI function creates a compound widget that allows the user to define a region of interest within a widget draw window. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This is a <i>modal</i> widget. No other widget applications will be responsive while this widget is in use. Also, since CW_DEFROI has its own event-handling loop, it should not be created as a child of a modal base.</p>
        <p>This routine is written in the IDL language. Its source code can be found in the file <code>cw_defroi.pro</code> in the <code>lib</code> subdirectory of the IDL distribution.</p>
        <h2 class="API"><a name="dg_routines_3604229493_881267"></a>Syntax</h2>
        <p class="Syntax"><i>Result</i> = CW_DEFROI( <i>Draw</i> [,&#160;<a href="#dg_routines_3604229493_881300" class="selected">IMAGE_SIZE</a>=<i>vector</i>] [,&#160;<a href="#dg_routines_3604229493_881303" class="selected">OFFSET</a>=<i>vector</i>] [,&#160;/<a href="#dg_routines_3604229493_881306" class="selected">ORDER</a>] [,&#160;/<a href="#dg_routines_3604229493_881309" class="selected">RESTORE</a>] [,&#160;<a href="#dg_routines_3604229493_881312" class="selected">TAB_MODE</a>=<i>value</i>] [,&#160;<a href="#dg_routines_3604229493_881346" class="selected">ZOOM</a>=<i>vector</i>] )</p>
        <h2 class="API"><a name="dg_routines_3604229493_881288"></a>Return Value</h2>
        <p>This function returns an array of subscripts defining the region. If no region is defined, the scalar -1 is returned.</p>
        <h2 class="API"><a name="dg_routines_3604229493_881291"></a>Arguments</h2>
        <h3 class="Argument">Draw</h3>
        <p>The widget ID of draw window in which to draw the region. Note that the draw window must have both BUTTON and MOTION events enabled (see <a href="../W/WIDGET_DRAW.htm">WIDGET_DRAW</a> for more information).</p>
        <h2 class="API"><a name="dg_routines_3604229493_881298"></a>Keywords</h2>
        <h3 class="Keyword"><a name="dg_routines_3604229493_881300"></a>IMAGE_SIZE</h3>
        <p>The size of the underlying array, expressed as a two element vector: [<i>columns</i>, <i>rows</i>]. Default is the size of the draw window divided by the value of ZOOM.</p>
        <h3 class="Keyword"><a name="dg_routines_3604229493_881303"></a>OFFSET</h3>
        <p>The offset of lower left corner of image within the draw window. Default = [0,0].</p>
        <h3 class="Keyword"><a name="dg_routines_3604229493_881306"></a>ORDER</h3>
        <p>Set this keyword to return inverted subscripts, as if the array were output from top to bottom.</p>
        <h3 class="Keyword"><a name="dg_routines_3604229493_881309"></a>RESTORE</h3>
        <p>Set this keyword to restore the draw window to its previous appearance on exit. Otherwise, the regions remain on the drawable.</p>
        <h3 class="Keyword"><a name="dg_routines_3604229493_881312"></a>TAB_MODE</h3>
        <p>Set this keyword to one of the values shown in the table below to determine how the widget hierarchy can be navigated using the <b>Tab</b> key. The TAB_MODE setting is inherited by lower-level bases and child widgets unless it is explicitly set on an individual widget.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>It is not possible to tab to disabled (SENSITIVE=0) or hidden (MAP=0) widgets.</p>
        <p>Valid settings are:</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');margin-left: 0;margin-right: auto;caption-side: bottom;" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Value</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Description</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>0</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Disable navigation onto or off of the widget. This is the default. Child widgets automatically inherit the tab mode of the parent base as described in <a href="../../Creating IDL Programs/Creating Applications in IDL/Enhancing_Widget_Applica.htm#Specifyi">Inheriting the TAB_MODE Value</a>.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>1</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Enable navigation onto and off of the widget.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>2</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Navigate only onto the widget.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p>3</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColEnd">
                        <p>Navigate only off of the widget.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>In widget applications on the UNIX platform, the Motif library controls what widgets are brought into and released from focus using tabbing. The TAB_MODE keyword value is always zero, and any attempt to change it is ignored when running a widget application on the UNIX platform. Tabbing behavior may vary significantly between UNIX platforms; do not rely on a particular behavior being duplicated on all UNIX systems.</p>
        <h3 class="Keyword"><a name="dg_routines_3604229493_881346"></a>ZOOM</h3>
        <p>If the image array was expanded (using REBIN, for example) specify this two element vector containing the expansion factor in X and Y. Default = [1,1]. Both elements of ZOOM must be integers.</p>
        <h2 class="API"><a name="dg_routines_3604229493_881349"></a>Widget Events Returned by the CW_DEFROI Widget</h2>
        <p>Region definition widgets do not return an event structure.</p>
        <h2 class="API"><a name="dg_routines_3604229493_881352"></a>Examples</h2>
        <p>The following two procedures create a region-of-interest widget and its event handler. Create a file containing the program code using a text editor and compile using the .RUN command, or type .RUN at the IDL prompt and enter the lines interactively. First, create the event handler:</p>
        <p class="Code">PRO test_event, ev</p>
        <p class="Code">&#160;</p>
        <p class="Code">; The common block holds variables that are shared between the</p>
        <p class="Code">; routine and its event handler:</p>
        <p class="Code">COMMON T, draw, dbutt, done, image</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Define what happens when you click the "Draw ROI" button:</p>
        <p class="Code">IF ev.id EQ dbutt THEN BEGIN</p>
        <p class="Code">&#160;&#160;&#160;; The ROI definition will be stored in the variable Q:</p>
        <p class="Code">&#160;&#160;&#160;Q = CW_DEFROI(draw)</p>
        <p class="Code">&#160;&#160;&#160;IF (Q[0] NE -1) then BEGIN</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;; Show the size of the ROI definition array:</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;HELP, Q</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;; Duplicate the original image.</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;image2 = image</p>
        <p class="Code">&#160;</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;; Set the points in the ROI array Q equal to a single</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;; color value:</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;image2(Q)=!P.COLOR-1</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;; Get the window ID of the draw widget:</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;WIDGET_CONTROL, draw, GET_VALUE=W</p>
        <p class="Code">&#160;</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;; Set the draw widget as the current graphics window:</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;WSET, W</p>
        <p class="Code">&#160;</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;; Load the image plus the ROI into the draw widget:</p>
        <p class="Code">&#160;&#160;&#160;&#160;&#160;&#160;TV, image2</p>
        <p class="Code">&#160;&#160;&#160;ENDIF</p>
        <p class="Code">ENDIF</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Define what happens when you click the "Done" button:</p>
        <p class="Code">IF ev.id EQ done THEN WIDGET_CONTROL, ev.top, /DESTROY</p>
        <p class="Code">&#160;</p>
        <p class="Code">END</p>
        <p>Next, create a draw widget that can call CW_DEFROI. Note that you <i>must</i> specify both button events and motion events when creating the draw widget, if it is to be used with CW_DEFROI.</p>
        <p class="Code">PRO test</p>
        <p class="Code">COMMON T, draw, dbutt, done, image</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Create a base to hold the draw widget and buttons:</p>
        <p class="Code">base = WIDGET_BASE(/COLUMN)</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Create a draw widget that will return both button and </p>
        <p class="Code">; motion events:</p>
        <p class="Code">draw = WIDGET_DRAW(base, XSIZE=256, YSIZE=256, /BUTTON, /MOTION)</p>
        <p class="Code">dbutt = WIDGET_BUTTON(base, VALUE='Draw ROI')</p>
        <p class="Code">done = WIDGET_BUTTON(base, VALUE='Done')</p>
        <p class="Code">WIDGET_CONTROL, base, /REALIZE</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Get the widget ID of the draw widget:</p>
        <p class="Code">WIDGET_CONTROL, draw, GET_VALUE=W</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Set the draw widget as the current graphics window:</p>
        <p class="Code">WSET, W</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Create an original image:</p>
        <p class="Code">image = BYTSCL(SIN(DIST(256)))</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Display the image in the draw widget:</p>
        <p class="Code">TV, image</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Start XMANAGER:</p>
        <p class="Code">XMANAGER, "test", base</p>
        <p class="Code">&#160;</p>
        <p class="Code">END</p>
        <p>This results in the following:</p>
        <p>
            <img src="../../Resources/Images/cwdfroi1.gif" style="margin-left: 5.99976px;margin-top: 5.99976px;margin-right: 5.999752px;margin-bottom: 6.000484px;" />
        </p>
        <h2 class="API"><a name="dg_routines_3604229493_881428"></a>Version History </h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>Pre 4.0</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>6.1</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Added TAB_MODE keyword</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API"><a name="dg_routines_3604229493_881440"></a>See Also</h2>
        <p><a href="../D/DEFROI.htm#dg_routines_3604229493_891529">DEFROI</a>
        </p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>