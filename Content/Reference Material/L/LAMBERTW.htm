<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: L">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>LAMBERTW</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="L_list.htm">Routines: L</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">LAMBERTW</span>
        </div>
        <h1><a name="kanchor1654"></a>LAMBERTW</h1>
        <p>The LAMBERTW function returns the value <i>W(z)</i> of the Lambert W function, also known as the omega function or product logarithm function. The defining equation is given by:</p>
        <p><i>z</i> = <i>W</i>(<i>z</i>) e<sup><i>W</i>(<i>z</i>)</sup></p>
        <p>where <i>z</i> is any complex number. Because the equation has an infinite number of solutions for each <i>z</i>, there are an infinite number of branches. By default LAMBERTW returns the principal branch of the equation, but you can also pass in an optional branch parameter <i>k</i>.</p>
        <p>The Lambert W function has many applications in mathematics, computer science, and the physical sciences. It is used in the enumeration of trees, when solving equations with exponentials (such as the maxima of the Bose-Einstein or Fermi-Dirac distributions), or in the solution of linear constant-coefficient delay equations. It is also closely related to the tree function, with <i>T</i>(<i>z</i>) = –<i>W</i>(–<i>z</i>).</p>
        <p>This routine is written in the IDL language. Its source code can be found in the file <code>lambertw.pro</code> in the <code>lib</code> subdirectory of the IDL distribution.</p>
        <p>The routine uses Halley's method to find the solution, with an initial guess based upon the series expansion:</p>
        <p class="indent"><i>W</i>(<i>z</i>) = <i>L</i> – <i>M</i> + <i>M</i>/<i>L</i> + <i>M</i>(<i>M</i>–2)/(2<i>L</i><sup>2</sup>) + <i>M</i>(6 – 9<i>M</i> + 2<i>M</i><sup>2</sup>)/(6<i>L</i><sup>3</sup>)</p>
        <p>For the principal branch, <i>L</i> = log(<i>z</i>) and <i>M</i>=log(<i>L</i>). For other branches, <i>L</i>=log(<i>z</i>) + 2∏i<i>k</i> and <i>M</i>=log(<i>L</i>).</p>
        <h2 class="API"><a name="L_826528365_942592"></a><a name="L_826528365_942592_PageTOC_LEGENDRE_"></a>Examples</h2>
        <h3>Example 1</h3>
        <p>Compute the value of the Lambert W function at the following X values:</p>
        <p class="Code">x = [-0.3d, -0.2d, -0.1d, 0, 0.1d, 0.2d, 0.3d]</p>
        <p class="Code">result = LAMBERTW(x)</p>
        <p class="Code">PRINT, result</p>
        <p>IDL prints:</p>
        <p class="Code">     -0.48940223     -0.25917110     -0.11183256      0.00000000     0.091276527      0.16891597      0.23675531</p>
        <p>For the negative values, also compute the lower branch:</p>
        <p class="Code">x = [-0.3d, -0.2d, -0.1d, 0]</p>
        <p class="Code">result = LAMBERTW(x, /LOWER_BRANCH)</p>
        <p class="Code">PRINT, result</p>
        <p>IDL prints:</p>
        <p class="Code">      -1.7813370      -2.5426414      -3.5771521       -Infinity</p>
        <h3>Example 2</h3>
        <p>Plot both the principal and lower branch of the real-valued Lambert W function:</p>
        <p class="Code">p1 = PLOT('LambertW(x)', '3', LAYOUT=[2,1,1], $</p>
        <p class="Code_Indented">XTITLE='x', YTITLE='W(x)', $</p>
        <p class="Code_Indented">XRANGE=[-0.4,0.4], YRANGE=[-6,1], DIMENSIONS=[800,300], $</p>
        <p class="Code_Indented">XMAJOR=9, XTICKLEN=0.5, XSUBTICKLEN=0.05, XMINOR=4, $</p>
        <p class="Code_Indented">YTICKLEN=0.5, YSUBTICKLEN=0.05, YMINOR=4, $</p>
        <p class="Code_Indented">XCOLOR='gray', YCOLOR='gray', $</p>
        <p class="Code_Indented">XTEXT_COLOR='black', YTEXT_COLOR='black')</p>
        <p class="Code">p2 = PLOT('LambertW(x, /LOWER_BRANCH)', '3--', $</p>
        <p class="Code_Indented">/OVERPLOT)</p>
        <p>Plot the real and imaginary parts for the principal value with complex Z:</p>
        <p class="Code">p3 = PLOT('REAL_PART(LambertW(DCOMPLEX(x)))', '3r', $</p>
        <p class="Code_Indented">LAYOUT=[2,1,2], /CURRENT, $</p>
        <p class="Code_Indented">XTITLE='x', YTITLE='W(x)', $</p>
        <p class="Code_Indented">XRANGE=[-1.5,1.5], YRANGE=[-1,1.5], $</p>
        <p class="Code_Indented">XMAJOR=7, XTICKLEN=0.5, XSUBTICKLEN=0.05, $</p>
        <p class="Code_Indented">YTICKLEN=0.5, YSUBTICKLEN=0.05, $</p>
        <p class="Code_Indented">XCOLOR='gray', YCOLOR='gray', $</p>
        <p class="Code_Indented">XTEXT_COLOR='black', YTEXT_COLOR='black')</p>
        <p class="Code">p4 = PLOT('IMAGINARY(LambertW(DCOMPLEX(x)))', '3b', $</p>
        <p class="Code_Indented">/OVERPLOT)</p>
        <p class="Code">t = TEXT(0.35, 0.7, 'Real{W(z)}', /DATA, COLOR='red', TARGET=p3)</p>
        <p class="Code">t = TEXT(-0.55, 1.1, 'Imag{W(z)}', /DATA, COLOR='blue', TARGET=p3)</p>
        <p>
            <img src="../images/ex_lambertw1.png" />
        </p>
        <h2 class="API">Syntax</h2>
        <p class="Syntax"><i>Result</i> = LAMBERTW( <i>Z</i> [, <i>K</i>] [, /<a href="#LOWER_BR" class="selected">LOWER_BRANCH</a>] )</p>
        <h2 class="API">Return Value</h2>
        <h4>Single Argument</h4>
        <p>If <i>Z</i> is a scalar the result will be a scalar, otherwise the result will have the same dimensions as <i>Z</i>.</p>
        <h4>Both Arguments</h4>
        <p>If  both <i>Z</i> and <i>K</i> are scalars, the function returns a scalar. If both arguments are arrays, the function matches up the corresponding elements of <i>Z</i> and <i>K</i>, returning an array with the same dimensions as the smallest array. If one argument is a scalar and the other argument is an array, the function uses the scalar value with each element of the array, and returns an array with the same dimensions as the smallest input array.</p>
        <h4>Result Type</h4>
        <p>If <i>Z</i> is type float or double and <i>K</i> is not specified then the result is double-precision.</p>
        <p>If <i>Z</i> is type complex or dcomplex or <i>K</i> is specified then the result is double-complex.</p>
        <h2 class="API">Arguments</h2>
        <h3 class="Argument">Z</h3>
        <p>The expression for which IDL should computer <i>W</i>(<i>z</i>). If <i>Z</i> is type float or double and you do not specify <i>K</i>,  then the <i>Z</i> values should be greater than or equal to –EXP(–1) = –0.367879. Furthermore, if you set the <a href="#LOWER_BR" class="selected">LOWER_BRANCH</a> keyword, the Z values should be between –EXP(–1) and 0. IDL will set the result for <i>Z</i> values outside of this range to the special value NaN.</p>
        <h3 class="Argument">K</h3>
        <p>An integer scalar or array specifying the branch <i>k</i> for <i>W</i>(<i>z</i>). If you do not specify <i>K</i> then the principal branch (<i>k</i>=0) is returned.</p>
        <h2 class="API">Keywords</h2>
        <h3 class="Keyword"><a name="LOWER_BR"></a>LOWER_BRANCH</h3>
        <p>Set this keyword to force LAMBERTW to return the lower branch (<i>k</i>=–1) instead of the default upper branch. This keyword is only designed to work with float or double input in the range –EXP(–1) to 0. This keyword can not be used with complex input or with the <i>K</i> argument.</p>
        <h2 class="API">Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>8.3</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API">Resources and References</h2>
        <p>For more details on the Lambert W function, see Eqn. 4.18 in Corless, R. M., Gonnet, G. H., Hare, D. E. G., Jeffrey, D. J. and Knuth, D. E., 1996: On the Lambert W function, <i>Advances in Computational Mathematics</i>, <b>5</b>, 329–359.</p>
        <h2 class="API">See Also</h2>
        <p><a href="../A/ALOG.htm">ALOG</a>, <a href="../E/EXP.htm">EXP</a>, <a href="../P/PLOT.htm">PLOT</a></p>
        <p>&#160;</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>