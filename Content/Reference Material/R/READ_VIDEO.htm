<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: R">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>READ_VIDEO</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="R_list.htm">Routines: R</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">READ_VIDEO</span>
        </div>
        <h1><a name="kanchor2238"></a>READ_VIDEO</h1>
        <p>The READ_VIDEO function is a wrapper for <a href="../../Object Classes/File Format/IDLffVideoRead.htm">IDLffVideoRead</a> and provides a way to read video, audio, and/or data streams from a video file. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Frame counts may vary slightly depending on the method used to obtain the count. Variabilities in timestamps and video standards, discontinuities in the videos themselves, or differences in the types of frames may influence the apparent frame count.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Animated GIF files do not contain header information on the frame rate, duration, or the number of frames. Instead of retrieving frames using the time stamp, you should retrieve individual frames using the frame keywords.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>READ_VIDEO is not available with the <a href="../../Creating IDL Programs/Distributing IDL Applications/VirtualMachineApplications/VirtualMachineApplicationsIntro.htm">IDL Virtual Machine</a>.</p>
        <h2 class="API" data-mc-conditions="">Examples</h2>
        <p data-mc-conditions="">The following example uses a NASA video displaying the Coronal Mass Ejection (CME) event of August, 2012. The video is available online (see <a href="#Resource" class="selected">Resources and References</a>, below) or in the \examples\data directory of your IDL installation. </p>
        <p data-mc-conditions="">See the <a href="../Q/QUERY_VIDEO.htm">Examples in the QUERY_VIDEO topic</a> for examples on obtaining information about the video file used in this example.</p>
        <p data-mc-conditions="">Copy the following to the IDL command line to read in the CME.mp4 file:</p>
        <p class="Code">; Define the file to read.</p>
        <p class="Code">file = FILEPATH('CME.mp4', $</p>
        <p class="Code">&#160;&#160;&#160;SUBDIRECTORY=['examples','data'])</p>
        <p class="Code">&#160;</p>
        <p class="Code">; Read a subset of the original video file.</p>
        <p class="Code">myVid = READ_VIDEO(file, TIME_START=5, TIME_END=15)</p>
        <p class="Code">&#160;</p>
        <p>See <a href="../W/WRITE_VIDEO.htm">WRITE_VIDEO</a> for an example of writing this video snippet to another file.</p>
        <h2 class="API">Syntax</h2>
        <p class="Syntax"><i>data</i> = READ_VIDEO(<i><a href="#Filename" class="selected">Filename</a></i> [,&#160;<a href="#Stream_I" style="font-style: italic;" class="selected">Stream_Index</a>] [, /<a href="#ALL" class="selected">ALL</a>] [, /<a href="#CLOSE" class="selected">CLOSE</a>] [, <a href="#HANDLE" class="selected">HANDLE</a>=<i>variable</i>] [, <a href="#FRAME_EN" class="selected">FRAME_END</a>=<i>value</i>] [, <a href="#FRAME_OU" class="selected">FRAME_OUT</a>=<i>variable</i>] [, <a href="#FRAME_ST" class="selected">FRAME_START</a>=<i>value</i>] [, /<a href="#NODATA" class="selected">NODATA</a>] [, <a href="#SUB_RECT" class="selected">SUB_RECT</a>=[<i>x</i><sub style="font-style: italic;">0</sub><i>, y</i><sub style="font-style: italic;">0</sub><i>, x</i><sup style="vertical-align: sub;font-style: italic;">1</sup><i>, y</i><sub style="font-style: italic;">1</sub>] [, <a href="#TIME_END" class="selected">TIME_END</a>=<i>integer</i>]   [, <a href="#TIME_OUT" class="selected">TIME_OUT</a>=<i>variable</i>] [, <a href="#TIME_STA" class="selected">TIME_START</a>=<i>integer</i>]   )</p>
        <h2 class="API">Return Value</h2>
        <p>The type of data returned depends on the type of stream read. </p>
        <ul>
            <li value="1">For a video stream, the data returned will be an array with dimensions of [<i>3, width, height, nFrames</i>]. </li>
            <li value="2">For an audio stream, the data returned will be an array with dimensions of [<i>nChannels, packetLength</i>]. </li>
            <li value="3">For a data stream, the data returned will be a vector of byte data.</li>
        </ul>
        <h3>Arguments</h3>
        <h3 class="Argument"><a name="Filename"></a>Filename</h3>
        <p>Set this required argument to a string denoting the full path to a video file to open.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If you specify HANDLE, IDL ignores the Filename argument (although you must still supply it).</p>
        <h3 class="Argument"><a name="Stream_I"></a>Stream_Index</h3>
        <p>Set the Stream_Index argument to a scalar integer denoting the stream index from which to read the data. If not specified, IDL reads the first video stream in the file. See <a href="../Q/QUERY_VIDEO.htm">QUERY_VIDEO</a> for a description of the streams available in a file.</p>
        <h2 class="API">Keywords</h2>
        <h3 class="Keyword"><a name="ALL"></a>ALL</h3>
        <p>If set, this keyword prompts IDL to read all of the data from the stream.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Reading the entire contents of the video data could result in a very large array and may not be possible depending on your computer's available memory.
        </p>
        <h3 class="Keyword"><a name="CLOSE"></a>CLOSE</h3>
        <p>Set this keyword to close the file currently used in HANDLE.
        </p>
        <h3 class="Keyword"><a name="FRAME_EN"></a>FRAME_END (video only)</h3>
        <p>Set this keyword to the frame index value at which to stop reading.  Note that if you specify only the FRAME_END, IDL will return all frames from the beginning up through the FRAME_END.</p>
        <h3 class="Keyword"><a name="FRAME_OU"></a>FRAME_OUT (video only)</h3>
        <p>If set to a named variable, this keyword returns a long array containing the frame index(es) of the frame(s) returned by READ_VIDEO.</p>
        <h3 class="Keyword"><a name="FRAME_ST"></a>FRAME_START (video only)</h3>
        <p>Set this keyword to the frame index value at which to start reading.  If neither TIME_START or FRAME_START are set, IDL returns the first frame from the specified stream. If TIME_START is specified, FRAME_START is ignored.</p>
        <h3 class="Keyword"><a name="HANDLE"></a>HANDLE</h3>
        <p>Set this keyword to a named variable  to create a reference to your video that allows for more efficient reading of multiple frames. When reading from a file multiple times (for example,  frames 0 - 74  read via a loop structure), by default IDL opens, reads, and closes the file once for each frame. When using a handle, IDL opens the video, reads each of the 75 frames, then closes the file.</p>
        <p>If set to a handle previously returned from a READ_VIDEO call, the file used in the handle will be used and the Filename argument will be ignored.</p>
        <p>If set to a named variable that is currently not in use as a handle, the handle for the current file will be returned in the variable.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If a HANDLE is used, make sure to close it  by specifying the CLOSE keyword along with the handle.</p>
        <h3 class="Keyword"><a name="NODATA"></a>NODATA</h3>
        <p>If set, IDL does not return any data. Use this keyword to obtain all of the time stamps for a stream without having to allocate memory to read the entire data stream.</p>
        <h3 class="Keyword"><a name="SUB_RECT"></a>SUB_RECT (video only)</h3>
        <p>This keyword allows you to specify the dimensional area of the video frames you want returned. Set SUB_RECT to a four-element vector [x<sub>0</sub>, y<sub>0</sub>, x<sub>1</sub>, y<sub>1</sub>] denoting two corners of the sub-rectangle you wish to capture.</p>
        <h3 class="Keyword"><a name="TIME_END"></a>TIME_END</h3>
        <p>Set this keyword to indicate the time, in seconds, at which to stop reading. Note that if you specify only the TIME_END, IDL will return all video/audio/data from the beginning up through the TIME_END.</p>
        <h3 class="Keyword"><a name="TIME_OUT"></a>TIME_OUT</h3>
        <p>If set to a named variable, this keyword returns a float array containing the time stamp(s) from the file of the frame(s) or packet(s) of data returned.</p>
        <h3 class="Keyword"><a name="TIME_STA"></a>TIME_START</h3>
        <p>Set to the time, in seconds, at which to start reading. If neither TIME_START nor FRAME_START are set, IDL returns the first frame or packet of data from the specified stream.</p>
        <h2 class="API">Version History</h2>
        <table style="mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>8.2.3</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API" data-mc-conditions=""><a name="Resource"></a>Resources and References</h2>
        <p data-mc-conditions="">The NASA "CME.mp4" video used in the example is courtesy of the Solar Dynamics Observatory (SDO) and the Solar and Heliospheric Observatory (SOHO). The file is available for download here:</p>
        <p data-mc-conditions=""><a href="http://www.nasa.gov/multimedia/videogallery/index.html?media_id=160387251">http://www.nasa.gov/multimedia/videogallery/index.html?media_id=160387251</a>
        </p>
        <p data-mc-conditions="">&#160;</p>
        <p data-mc-conditions="">A longer, similar video that can be substituted in the example code, is available for download here:</p>
        <p data-mc-conditions=""><a href="http://www.nasa.gov/mission_pages/sdo/news/coronal-rain.html">http://www.nasa.gov/mission_pages/sdo/news/coronal-rain.html</a>
        </p>
        <h2 class="API">See Also</h2>
        <p><a href="../../Creating IDL Programs/Application Programming/CreatingVideo.htm">Creating Video</a>, <a href="../../Object Classes/File Format/IDLffVideoRead.htm">IDLffVideoRead</a>, <a href="../../Object Classes/File Format/IDLffVideoWrite.htm">IDLffVideoWrite</a>, <a href="../Q/QUERY_VIDEO.htm">QUERY_VIDEO</a>, <a href="../W/WRITE_VIDEO.htm">WRITE_VIDEO</a> <a href="../O/OBJ_NEW.htm">  <![CDATA[ ]]></a></p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>