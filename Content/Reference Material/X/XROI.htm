<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Routines: X">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>XROI </title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/NoLines.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="X_list.htm">Routines: X</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">XROI</span>
        </div>
        <h1 class="Routine"><a name="X_800576109_976751"></a><a name="kanchor3053"></a><a name="X_800576109_11188"></a>XROI </h1>
        <p><a name="kanchor3054"></a><a name="kanchor3055"></a>The XROI procedure is a utility for interactively defining regions of interest (ROIs), and obtaining geometry and statistical data about these ROIs.</p>
        <p>This routine is written in the IDL language. Its source code can be found in the file <code>xroi.pro</code> in the <code>lib/utilities</code> subdirectory of the IDL distribution.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>See <a href="#X_800576109_984620" class="selected">“Using XROI” </a>for detailed information describing importing images, modifying image and ROI colors, retrieving ROI information and growing regions.</p>
        <h2 class="API"><a name="X_800576109_984496"></a><a name="X_800576109_984496_PageTOC_XROI_"></a>Syntax</h2>
        <p class="Syntax">XROI [,&#160;<i>ImageData</i>] [,&#160;<i>R</i>] [,&#160;<i>G</i>] [,&#160;<i>B</i>] [,&#160;/<a href="#X_800576109_984509" class="selected">BLOCK</a>] [[,&#160;/<a href="#X_800576109_984515" class="selected">FLOATING</a>]&#160;,&#160;<a href="#X_800576109_984518" class="selected">GROUP</a>=<i>widget_ID</i>] [,&#160;/<a href="#X_800576109_984520" class="selected">MODAL</a>] [,&#160;<a href="#X_800576109_984522" class="selected">REGIONS_IN</a>=<i>value</i>] [,&#160;<a href="#X_800576109_984530" class="selected">REGIONS_OUT</a>=<i>value</i>] [,&#160;<a href="#X_800576109_984535" class="selected">REJECTED</a>=<i>variable</i>] [,&#160;<a href="#X_800576109_984540" class="selected">RENDERER</a>={0 | 1}] [,&#160;<a href="#X_800576109_984544" class="selected">ROI_COLOR</a>=<i>[r</i>,&#160;<i>g</i>,&#160;<i>b]</i><i>or variable</i>] [,&#160;<a href="#X_800576109_984546" class="selected">ROI_GEOMETRY</a>=<i>variable</i>] [,&#160;<a href="#X_800576109_984572" class="selected">ROI_SELECT_COLOR</a>=<i>[r</i>,&#160;<i>g</i>,&#160;<i>b]</i><i>or variable</i>] [,&#160;<a href="#X_800576109_984574" class="selected">STATISTICS</a>=<i>variable</i>] [,&#160;<a href="#X_800576109_984608" class="selected">TITLE</a>=<i>string</i>] [,&#160;<a href="#X_800576109_984610" class="selected">TOOLS</a>=<i>string/string array </i>{valid values are 'Translate Scale', 'Rectangle', 'Ellipse', 'Freehand Draw', 'Polygon Draw', and 'Selection'}] [,&#160;<a href="#X_800576109_999474" class="selected">X_SCROLL_SIZE</a>=<i>value</i>] [,&#160;<a href="#X_800576109_999479" class="selected">Y_SCROLL_SIZE</a>=<i>value</i>]</p>
        <h2 class="API"><a name="X_800576109_984498"></a><a name="X_800576109_984498_PageTOC_XROI_"></a>Arguments</h2>
        <h3 class="Argument">ImageData</h3>
        <p><i>ImageData</i> is both an input and output argument. It is an array representing an 8-bit or 24-bit image to be displayed. <i>ImageData </i>can be any of the following:</p>
        <ul>
            <li value="1">[<i>m</i>,&#160;<i>n</i>] —&#160;&#160;8-bit image</li>
            <li value="2">[3,&#160;<i>m</i>,&#160;<i>n</i>] — 24-bit image</li>
            <li value="3">[<i>m</i>,&#160;3,&#160;<i>n</i>] — 24-bit image</li>
            <li value="4">[<i>m</i>,&#160;<i>n</i>,&#160;3] — 24-bit image</li>
        </ul>
        <p>If <i>ImageData</i> is not supplied, the user will be prompted for a file via DIALOG_PICKFILE. On output, <i>ImageData</i> will be set to the current image data. (The current image data can be different than the input image data if the user imported an image via the <b>File</b> &gt; <b>Import Image</b> menu item.)</p>
        <h3 class="Argument">R, G, B</h3>
        <p><i>R</i>, <i>G</i>, and <i>B</i> are arrays of bytes representing red, green, or blue color table values, respectively. <i>R</i>, <i>G</i>, and <i>B</i> are both input and output arguments. On input, these values are applied to the image if the image is 8-bit. To get the red, green, or blue color table values for the image on output from XROI, specify a named variable for the appropriate argument. (If the image is 24-bit, this argument will output a 256-element byte array containing the values given at input, or BINDGEN(256) if the argument was undefined on input.)</p>
        <h2 class="API"><a name="X_800576109_984508"></a><a name="X_800576109_984508_PageTOC_XROI_"></a>Keywords</h2>
        <h3 class="Keyword"><a name="X_800576109_984509"></a><a name="X_800576109_984509_Keywords_XROI__"></a>BLOCK</h3>
        <p>Set this keyword to have XMANAGER block when this application is registered. By default, BLOCK is set equal to zero, providing access to the command line if active command line processing is available. Note that setting the BLOCK keyword causes all widget applications to block, not just this application. For more information, see the documentation for the <a href="XMANAGER.htm#X_800576109_921241">NO_BLOCK</a> keyword to XMANAGER.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Only the outermost call to XMANAGER can block. Therefore, to have XROI block, any earlier calls to XMANAGER must have been called with the NO_BLOCK keyword. See the documentation for the NO_BLOCK keyword to XMANAGER for an example.</p>
        <h3 class="Keyword"><a name="X_800576109_984515"></a><a name="X_800576109_984515_Keywords_XROI__"></a>FLOATING</h3>
        <p>Set this keyword, along with the GROUP keyword, to create a floating top-level base widget. If the windowing system provides Z-order control, floating base widgets appear above the base specified as their group leader. If the windowing system does not provide Z-order control, the FLOATING keyword has no effect.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Floating widgets must have a group leader. Setting this keyword without also setting the GROUP keyword causes an error.</p>
        <h3 class="Keyword"><a name="X_800576109_984518"></a><a name="X_800576109_984518_Keywords_XROI__"></a>GROUP</h3>
        <p>Set this keyword to the widget ID of the widget that calls XROI. When this keyword is specified, the death of the caller results in the death of XROI.</p>
        <h3 class="Keyword"><a name="X_800576109_984520"></a><a name="X_800576109_984520_Keywords_XROI__"></a>MODAL</h3>
        <p>Set this keyword to block other IDL widgets from receiving events while XROI is active.</p>
        <h3 class="Keyword"><a name="X_800576109_984522"></a><a name="X_800576109_984522_Keywords_XROI__"></a>REGIONS_IN</h3>
        <p>Set this keyword to an array of IDLgrROI references. This allows you to open XROI with previously defined regions of interest (see <a href="#X_800576109_984959" class="selected">Example: Save ROI Data</a>). This is also useful when using a loop to open multiple images in XROI. By using the same named variable for both the REGIONS_IN and REGIONS_OUT keywords, you can reuse the same ROIs in multiple images (see <a href="#X_800576109_984939" class="selected">Example: Preserving ROIs Among Images</a>). This keyword also accepts –1, or OBJ_NEW() (Null object) to indicate that there are no ROIs to read in. This allows you to assign the result of a previous REGIONS_OUT to REGIONS_IN without worrying about the case where the previous REGIONS_OUT is undefined.</p>
        <h3 class="Keyword"><a name="X_800576109_984530"></a><a name="X_800576109_984530_Keywords_XROI__"></a>REGIONS_OUT</h3>
        <p>Set this keyword to a named variable that will contain an array of IDLgrROI references. This keyword is assigned the null object reference if there are no ROIs defined. By using the same named variable for both the REGIONS_IN and REGIONS_OUT keywords, you can reuse the same ROIs in multiple images (see <a href="#X_800576109_984939" class="selected">Example: Preserving ROIs Among Images</a>).</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This keyword must be used in conjunction with the BLOCK keyword.</p>
        <h3 class="Keyword"><a name="X_800576109_984535"></a><a name="X_800576109_984535_Keywords_XROI__"></a>REJECTED</h3>
        <p>Set this keyword to a named variable that will contain those REGIONS_IN that are not in REGIONS_OUT. The objects defined in the variable specified for REJECTED can be destroyed with a call to OBJ_DESTROY, allowing you to perform cleanup on objects that are not required (see <a href="#X_800576109_984939" class="selected">Example: Preserving ROIs Among Images</a>). This keyword is assigned the null object reference if no REGIONS_IN are rejected by the user.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This keyword must be used in conjunction with the BLOCK keyword.</p>
        <h3 class="Keyword"><a name="X_800576109_984540"></a><a name="X_800576109_984540_Keywords_XROI__"></a>RENDERER</h3>
        <p>Set this keyword to an integer value to indicate which graphics renderer to use when drawing objects within the window. Valid values are:</p>
        <ul>
            <li value="1">0 = Platform native OpenGL</li>
            <li value="2">1 = IDL’s software implementation (the default)</li>
        </ul>
        <h3 class="Keyword"><a name="X_800576109_984544"></a><a name="X_800576109_984544_Keywords_XROI__"></a>ROI_COLOR</h3>
        <p>This keyword is both an input and an output parameter. Set this keyword to a <br />3-element byte array, [<i>r</i>,&#160;<i>g</i>,&#160;<i>b</i>], indicating the color of ROI outlines when they are not selected. This color will be used by XROI unless and until the color is changed by the user via the “Unselected Outline Color” portion of the “ROI Outline Colors” dialog (which is accessed by selecting <b>Edit</b> &gt; <b>ROI Outline Colors</b>). If this keyword is assigned a named variable, that variable will be set to the current [<i>r</i>,&#160;<i>g</i>,&#160;<i>b</i>] value at the time that XROI returns.</p>
        <h3 class="Keyword"><a name="X_800576109_984546"></a><a name="X_800576109_984546_Keywords_XROI__"></a>ROI_GEOMETRY</h3>
        <p>Set this keyword to a named variable that will contain an array of anonymous structures, one for each ROI that is valid when this routine returns. The structures will contain the following fields: </p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');margin-left: 0;margin-right: auto;caption-side: bottom;" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Field</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Description</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>area</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>The area of the region of interest, in square pixels.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>centroid</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>The coordinates (<i>x</i>, <i>y</i>, <i>z</i>) of the centroid of the region of interest, in pixels.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p>perimeter</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p>The perimeter of the region of interest, in pixels.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>If there are no valid regions of interest when this routine returns, ROI_GEOMETRY will be undefined.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If there are no REGIONS_IN, XROI must either be modal or must block control flow in order for ROI_GEOMETRY to be defined upon exit from XROI. Otherwise, XROI will return before an ROI can be defined, and ROI_GEOMETRY will therefore be undefined.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>This keyword must be used in conjunction with the BLOCK keyword.</p>
        <h3 class="Keyword"><a name="X_800576109_984572"></a><a name="X_800576109_984572_Keywords_XROI__"></a>ROI_SELECT_COLOR</h3>
        <p>This keyword is both an input and an output parameter. Set this keyword to a <br />3-element byte array, [<i>r</i>,&#160;<i>g</i>,&#160;<i>b</i>], indicating the color of ROI outlines when they are selected. This color will be used by XROI unless and until the color is changed by the user via the “Selected Outline Color” portion of the “ROI Outline Colors” dialog (which is accessed by selecting <b>Edit</b> &gt; <b>ROI Outline Colors</b>). If this keyword is assigned a named variable, that variable will be set to the current [<i>r</i>,&#160;<i>g</i>,&#160;<i>b</i>] value at the time that XROI returns.</p>
        <h3 class="Keyword"><a name="X_800576109_984574"></a><a name="X_800576109_984574_Keywords_XROI__"></a>STATISTICS</h3>
        <p>Set this keyword to a named variable to receive an array of anonymous structures, one for each ROI that is valid when this routine returns. The structures will contain the following fields:</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');margin-left: 0;margin-right: auto;caption-side: bottom;" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Field</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Description</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>count</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Number of pixels in region.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>minimum</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Minimum pixel value.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>maximum</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Maximum pixel value.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>mean</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Mean pixel value.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p>stddev</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p>Standard deviation of pixel values.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>If <i>ImageData</i> is 24-bit, or if there are no valid regions of interest when the routine exits, STATISTICS will be undefined.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If there are no REGIONS_IN, XROI must either be modal or must block control flow in order for STATISTICS to be defined upon exit from XROI. Otherwise, XROI will return before an ROI can be defined, and STATISTICS will therefore be undefined.</p>
        <h3 class="Keyword"><a name="X_800576109_984608"></a><a name="X_800576109_984608_Keywords_XROI__"></a>TITLE</h3>
        <p>Set this keyword to a string to appear in the XROI title bar.</p>
        <h3 class="Keyword"><a name="X_800576109_984610"></a><a name="X_800576109_984610_Keywords_XROI__"></a>TOOLS</h3>
        <p>Set this keyword a string or vector of strings from the following list to indicate which ROI manipulation tools should be supported when XROI is run:</p>
        <ul>
            <li value="1">'Translate&#8209;Scale' — Translation and scaling of ROIs. Mouse down inside the bounding box selects a region, mouse motion translates (repositions) the region. Mouse down on a scale handle of the bounding box enables scaling (stretching, enlarging and shrinking) of the region according to mouse motion. Mouse up finishes the translation or scaling.</li>
            <li value="2">'Rectangle' — Rectangular ROI drawing. Mouse down positions one corner of the rectangle, mouse motions creates the rectangle, positioning the rectangle’s opposite corner, mouse up finishes the rectangular region.</li>
            <li value="3">'Ellipse' — Elliptical ROI drawing. Mouse down positions the center of the ellipse, mouse motion positions the corner of the ellipse’s imaginary bounding box, mouse up finishes the elliptical region.</li>
            <li value="4">'Freehand Draw' — Freehand ROI drawing. Mouse down begins a region, mouse motion adds vertices to the region (following the path of the mouse), mouse up finishes the region.</li>
            <li value="5">'Polygon Draw' — Polygon ROI drawing. Mouse down begins a region, subsequent mouse clicks add vertices, double-click finishes the region.</li>
            <li value="6">'Selection' — ROI selection. Mouse down/up selects the nearest region. The nearest vertex in that region is identified with a crosshair symbol.</li>
        </ul>
        <p>If more than one string is specified, a series of bitmap buttons will appear at the top of the XROI widget in the order specified (to the right of the fixed set of bitmap buttons used for saving regions, displaying region information, copying to clipboard, and flipping the image). If only one string is specified, no additional bitmap buttons will appear, and the manipulation mode is implied by the given string. If this keyword is not specified, bitmap buttons for all three manipulation tools are included on the XROI toolbar.</p>
        <h3 class="Keyword"><a name="X_800576109_999474"></a><a name="X_800576109_999474_Keywords_XROI__"></a>X_SCROLL_SIZE</h3>
        <p>Set this keyword to the width of the scroll window. If this keyword is larger than the image width then it will be set to the image width. The default is to use the image width or the screen width, whichever is smaller.</p>
        <h3 class="Keyword"><a name="X_800576109_999479"></a><a name="X_800576109_999479_Keywords_XROI__"></a>Y_SCROLL_SIZE</h3>
        <p>Set this keyword to the height of the scroll window. If this keyword is larger than the image height then it will be set to the image height. The default is to use the image height or the screen height, whichever is smaller.</p>
        <h2 class="API"><a name="X_800576109_984620"></a><a name="X_800576109_984620_PageTOC_XROI_"></a><a name="kanchor3056"></a>Using XROI</h2>
        <p>XROI displays a top-level base with a menu, toolbar and draw widget. After defining an ROI, the <b>ROI Information</b> window appears, as shown in the following figure:</p>
        <p>
            <img src="../../images/xroi1.gif" style="margin-left: 5.99976px;margin-top: 5.99976px;margin-right: 6.000484px;margin-bottom: 6.000484px;" /> </p>
        <p>As you move the mouse over an image, the x and y pixel locations are shown in the status line on the bottom of the XROI window. For 8-bit images, the data value (z) is also shown. If an ROI is defined, the status line also indicates the mouse position relative to the ROI using the text “Inside”, “Outside”, “On Edge,” or “On Vertex.”</p>
        <h3><a name="X_800576109_984632_Keywords_XROI__"></a>The XROI Toolbar</h3>
        <p>The XROI toolbar contains the following buttons:  </p>
        <table style="mc-table-style: url('../../Resources/TableStyles/NoLines.css');margin-left: 0;margin-right: auto;caption-side: top;" cellspacing="0" class="TableStyle_NoLines">
            <col />
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p>
                            <img src="../../images/save.gif" style="margin-left: 4.04064px;margin-top: 4.08096px;margin-right: 4.0716px;margin-bottom: 4.103279px;" />
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p><b>Save:</b>
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColEnd">
                        <p>Opens a file selection dialog for saving the currently defined ROIs to a save file.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p>
                            <img src="../../images/xroi_info.gif" style="margin-left: 4.04064px;margin-top: 1.08072px;margin-right: 4.0716px;margin-bottom: 1.127519px;" />
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p><b>Info:</b>
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColEnd">
                        <p>Opens the <b>ROI Information</b> window.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p>
                            <img src="../../images/xroi_copy.gif" style="margin-left: 4.04064px;margin-top: 1.08072px;margin-right: 4.0716px;margin-bottom: 0.3355178px;" />
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p><b>Copy:</b>
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColEnd">
                        <p>Copies the contents of the display area to the clipboard.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_NoLines_Body_0_0_RowEnd_ColSep">
                        <p>
                            <img src="../../images/xroi_flip.gif" style="margin-left: 4.04064px;margin-top: 1.08072px;margin-right: 4.0716px;" />
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowEnd_ColSep">
                        <p><b>Flip:</b>
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowEnd_ColEnd">
                        <p>Flips image vertically. Note that only the image is flipped; any ROIs that have been defined do not move.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>Depending on the value of the TOOLS keyword, the XROI toolbar may also contain the following buttons:  </p>
        <table style="mc-table-style: url('../../Resources/TableStyles/NoLines.css');margin-left: 0;margin-right: auto;caption-side: top;" cellspacing="0" class="TableStyle_NoLines">
            <col />
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p>
                            <img src="../../images/xroitranscale.gif" style="margin-left: 3.41352px;margin-top: 1.66536px;margin-right: 4.698719px;" />
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p><b>Translate/ Scale:</b>
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColEnd">
                        <p>Click this button to translate or scale ROIs. Mouse down inside the bounding box selects a region, mouse motion translates (repositions) the region. Mouse down on a scale handle of the bounding box enables scaling (stretching, enlarging and shrinking) of the region according to mouse motion. Mouse up finishes the translation or scaling.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p>
                            <img src="../../images/xroirect.gif" style="margin-left: 4.33584px;margin-top: 1.37664px;margin-right: 3.7764px;margin-bottom: 0.0395987px;" />
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p><b>Draw Rectangle:</b>
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColEnd">
                        <p>Click this button to draw rectangular ROIs. Mouse down positions one corner of the rectangle, mouse motions creates the rectangle, positioning the rectangle’s opposite corner, mouse up finishes the rectangular region.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p>
                            <img src="../../images/xroiellipse.gif" style="margin-left: 3.41352px;margin-top: 1.66536px;margin-right: 4.698719px;margin-bottom: 0.47088px;" />
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p><b>Draw Ellipse:</b>
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColEnd">
                        <p>Click this button to draw elliptical ROIs. Mouse down positions the center of the ellipse, mouse motion positions the corner of the ellipse’s imaginary bounding box, mouse up finishes the elliptical region.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p>
                            <img src="../../images/xroi_smooth.gif" style="margin-left: 4.04064px;margin-top: 1.08072px;margin-right: 4.0716px;margin-bottom: 0.3355178px;" />
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p><b>Draw Freehand:</b>
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColEnd">
                        <p>Click this button to draw freehand ROIs. Mouse down begins a region, mouse motion adds vertices to the region (following the path of the mouse), mouse up finishes the region.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p>
                            <img src="../../images/xroi_poly.gif" style="margin-left: 4.04064px;margin-top: 1.83096px;margin-right: 4.0716px;margin-bottom: 0.305281px;" />
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p><b>Draw Polygon:</b>
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColEnd">
                        <p>Click this button to draw polygon ROIs. Mouse down begins a region, subsequent mouse clicks add vertices, double-click finishes the region.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_NoLines_Body_0_0_RowEnd_ColSep">
                        <p>
                            <img src="../../images/xroi_select.gif" style="margin-left: 4.04064px;margin-top: 1.83096px;margin-right: 4.0716px;" />
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowEnd_ColSep">
                        <p><b>Select:</b>
                        </p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowEnd_ColEnd">
                        <p>Click this button to select an ROI region. Clicking the image causes a cross hairs symbol to be drawn at the nearest vertex of the selected ROI.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h3><a name="X_800576109_984815_Keywords_XROI__"></a>Importing an Image into XROI</h3>
        <p>To import an image into <a name="kanchor3057"></a>XROI, select <b>File</b> &gt; <b>Import Image</b>. This opens a DIALOG_READ_IMAGE dialog, which can be used to preview and select an image.</p>
        <h3><a name="X_800576109_984818_Keywords_XROI__"></a>Changing the Image Color Table</h3>
        <p>To change the color table properties for the current image, select <b>Edit</b> &gt; <b>Image Color Table</b>. This opens the CW_PALETTE_EDITOR dialog, which is a compound widget used to edit color palettes. See <a href="../C/CW_PALETTE_EDITOR.htm#C_854643309_755661">CW_PALETTE_EDITOR</a> for more information. This menu item is grayed out if the image does not have a color palette.</p>
        <h3><a name="X_800576109_984823_Keywords_XROI__"></a>Changing the ROI Outline Colors</h3>
        <p>To change the outline colors for selected and unselected ROIs, select <b>Edit</b> &gt; <b>ROI Outline Colors</b>. This opens the <b>ROI Outline Colors</b> dialog, which consists of two CW_RGBSLIDER widgets for interactively adjusting the ROI outline colors. The left widget is used to define the color for the selected ROI, and the right widget is used to define the color of unselected ROIs. You can select the RGB, CMY, HSV, or HLS color system from the <b>Color System</b> drop-down list.</p>
        <h3><a name="X_800576109_984825_Keywords_XROI__"></a>Viewing ROI Information</h3>
        <p>To view geometry and statistical data about the currently selected ROI, click the <b>Info</b> button or select <b>Edit</b> &gt; <b>ROI Information</b>. This opens the <b>ROI Information</b> dialog, which displays area, perimeter, number of pixels, minimum and maximum pixel values, mean, and standard deviation. Values for statistical information (minimum, maximum, mean, and standard deviation) appear as “N/A” for 24-bit images.</p>
        <h3><a name="X_800576109_984827_Keywords_XROI__"></a><a name="kanchor3058"></a>Viewing a Histogram Plot for an ROI</h3>
        <p><a name="kanchor3059"></a>To view a histogram for an ROI, use either the shortcut menu or the ROI Information dialog. </p>
        <p>To view an ROI’s histogram plot using the shortcut menu:</p>
        <ol>
            <li value="1">Position the cursor on the line defining the boundary of an ROI in the drawing window and click the right mouse button. This selects the region and brings up its shortcut menu.</li>
            <li value="2">Select the <b>Plot Histogram</b> menu option from the shortcut menu.</li>
        </ol>
        <p>To view an ROI’s histogram plot using the ROI Information dialog:</p>
        <ol>
            <li value="1">Open the ROI Information dialog by clicking the <b>Info</b> button or selecting <b>Edit</b> &gt; <b>ROI Information</b>.</li>
            <li value="2">Select a region from the list and click the <b>Histogram</b> button on the ROI Information dialog. </li>
        </ol>
        <p>Either of the previous methods opens an iTool showing the ROI’s histogram that can be used to interactively control the plot properties.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>XROI’s histogram plot feature now supports RGB images.</p>
        <h3><a name="X_800576109_984841"></a><a name="X_800576109_984841_Keywords_XROI__"></a><a name="X_800576109_25047"></a><a name="kanchor3060"></a>Growing an ROI</h3>
        <p>Once a region has been created, it may be used as a source ROI for region growing. Region growing is a process of generating one or more new ROIs based upon the image pixel values that fall within the source ROI and the values of the neighboring pixels. New pixels are added to the new grown region if those image pixel values fall within a specified threshold.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span><a name="kanchor3061"></a>This option is an interactive implementation of the REGION_GROW function.</p>
        <p>To create a new, grown region, do the following:</p>
        <ol>
            <li value="1">Within the draw area, click the right mouse button on the ROI that is to be grown. This will select the region and bring up its shortcut menu.</li>
            <li value="2">Select <b>Grow Region</b> &gt; <b>By threshold </b>or select <b>Grow Region </b>&gt; <b>By std. dev. multiple </b>from the shortcut menu to control how the region is grown. </li>
        </ol>
        <p class="indent">The <b>By threshold</b> option grows the region to include all neighboring pixels that fall within a specified threshold range. By default, the range is defined by the minimum and maximum pixel values occurring within the original region. To specify a different threshold range, see <a href="#X_800576109_984857" class="selected">Using the Region Grow Properties Dialog</a>. </p>
        <p class="indent">The <b>By std. dev. multiple</b> option grows a region to include all neighboring pixels that fall within the range of:</p>
        <p class="indent"><code>Mean +/- StdDevMultiplier * StdDev</code>
        </p>
        <p class="indent">where<code> Mean </code>is the mean value of the pixel values within the source ROI, <code>StdDevMultiplier</code> is a multiplier that is set using the Region Grow Properties dialog (described below), and <code>StdDev </code>is the sample standard deviation of the pixel values within the original region. </p>
        <h3><a name="X_800576109_984857"></a><a name="X_800576109_984857_Keywords_XROI__"></a><a name="X_800576109_61393"></a>Using the Region Grow Properties Dialog</h3>
        <p>The Region Grow Properties dialog allows you to view and edit the properties associated with a region growing process. To bring up the Region Grow Properties dialog, do one of the following:</p>
        <ul>
            <li value="1">Click the right mouse button on an ROI in the drawing window and select <b>Grow</b><b>Region</b> &gt; <b>Properties...</b> shortcut menu option.</li>
            <li value="2">Select<b> Edit</b> &gt; <b>Region Grow Properties</b>... from the XROI menu bar.</li>
        </ul>
        <p>This brings up the Region Grow Properties dialog, shown in the following figure.</p>
        <p>
            <img src="../../images/xroi_growprop.gif" style="margin-left: 5.99976px;margin-top: 5.99976px;margin-right: 5.999767px;margin-bottom: 5.999767px;" />
        </p>
        <p>The Region Grow Properties dialog offers the following options:</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');margin-left: 0;margin-right: auto;caption-side: bottom;" cellspacing="0" class="TableStyle_Description">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Option</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Description</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>Pixel search method:</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Describes which pixels are searched when growing the original ROI. The option are:</p>
                        <p><b>4-neighbor</b> — Searches only the four neighboring pixels that share a common edge with the current pixel. This is the default.</p>
                        <p><b>8-neighbor</b> — Searches all eight neighboring pixels, including those that are located diagonally relative to the original pixel and share a common corner.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>Threshold range:</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Represents the minimum and maximum image pixel values that are to be included in the grown region when using the <b>Grow Region</b> &gt; <b>By threshold</b> option (described in <a href="#X_800576109_984841" class="selected">Growing an ROI</a>). By default, the range of pixel values used are those occurring in the ROI to be grown.</p>
                        <p>To change the threshold values, uncheck <b>Use</b><b>source ROI threshold </b>and enter the minimum and maximum threshold values in the <b>Min:</b> and <b>Max:</b> fields provided.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>Standard deviation multiplier:</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p>Represents the factor by which the sample standard deviation of the original ROI’s pixel values is multiplied. This factor only applies when the <b>Grow Region</b> &gt; <b>By std. dev. multiple </b>option (described in <a href="#X_800576109_984841" class="selected">Growing an ROI</a>) is used. </p>
                        <p>Change the multiplier value by typing the value into the <b>Standard deviation multiplier</b> field provided.</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>For RGB image, use:</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p>Determines the basis of region growing for an RGB (rather than indexed) image. The image data values used when growing a RGB region can be one of the following:</p>
                        <p><b>Luminosity</b> — Uses the luminosity values associated with an RGB image. This is the default method. Luminosity is computed as:</p>
                        <p>Luminosity = (0.3 * Red) + (0.59 * Green) + (0.11 * Blue)</p>
                        <p><b>Red Channel</b>, <b>Green Channel</b> or <b>Blue Channel </b>— Uses the ROI’s red, green or blue channel as a basis for region growing. Click the channel’s associated button to specify the channel to be used.</p>
                        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>For indexed images, the image data itself is always used for region growing. </p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColSep">
                        <p>Acceptance criteria:</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowEnd_ColEnd">
                        <p>Determines which contours of the grown region are accepted as new regions, (which will also be displayed in the draw area and in the ROI Information dialog list of regions). The region growing process can result in a large number of contours, some of which may be considered insignificant. By default, no more than two regions (those with the greatest geometrical area) are accepted. Modify the acceptance criteria by altering the following values:</p>
                        <p><b>Maximum number of regions:</b> — Specifies the upper limit of the number of regions to create when growing an ROI.</p>
                        <p><b>Minimum area per region:</b> — Specifies that only contours having a geometric area (computed in device coordinates) of at least the value stated are accepted and displayed. </p>
                        <p><b>Accept all regions:</b> — Select this option to accept all generated contours, regardless of count or area.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h3><a name="X_800576109_984920_Keywords_XROI__"></a>Deleting an ROI</h3>
        <p><a name="kanchor3062"></a><a name="kanchor3063"></a>An ROI can be deleted using either the shortcut menu or using the ROI Information dialog.</p>
        <p>To delete an ROI using the shortcut menu:</p>
        <ol>
            <li value="1">Click the right mouse button on the line defining the boundary of the ROI in the drawing area that you wish to delete. This selects the region and bring up the shortcut menu.</li>
            <li value="2">Select the <b>Delete</b> menu option from the shortcut menu.</li>
        </ol>
        <p>To delete an ROI using the ROI Information dialog:</p>
        <ol>
            <li value="1">Click the <b>Info</b> button or select <b>Edit</b> &gt; <b>ROI Information</b>. This opens the <b>ROI Information</b> dialog.</li>
            <li value="2">In the <b>ROI Information</b> dialog, select the ROI you wish to delete from the list of ROIs. You can also select an ROI by clicking the <b>Select</b> button on the XROI toolbar, then clicking on an ROI on the image.</li>
            <li value="3">Click the <b>Delete ROI</b> button.</li>
        </ol>
        <h2 class="API"><a name="X_800576109_984932"></a><a name="X_800576109_984932_PageTOC_XROI_"></a>Examples</h2>
        <p>See the following examples:</p>
        <ul>
            <li value="1"><a href="#X_800576109_984933" class="selected">Example: Open Image File in XROI</a>
            </li>
            <li value="2"><a href="#X_800576109_984939" class="selected">Example: Preserving ROIs Among Images</a>
            </li>
            <li value="3"><a href="#X_800576109_984959" class="selected">Example: Save ROI Data</a>
            </li>
            <li value="4"><a href="#X_800576109_1031731" class="selected">Example: Save the XROI Utility with ROI Data</a>
            </li>
        </ul>
        <h3><a name="X_800576109_984933"></a><a name="X_800576109_984933_Keywords_XROI__"></a>Example: Open Image File in XROI</h3>
        <p>This example opens a single image in XROI:</p>
        <p class="Code">image = READ_PNG(FILEPATH('mineral.png', $<br />&#160;&#160;&#160;SUBDIR=['examples', 'data']))<br />XROI, image</p>
        <h3><a name="X_800576109_984939"></a><a name="X_800576109_984939_Keywords_XROI__"></a><a name="X_800576109_22507"></a>Example: Preserving ROIs Among Images</h3>
        <p>This example reads three images from the file <code>mr_abdomen.dcm</code>, and calls XROI for each image. A single list of regions is maintained, saving the user from having to redefine regions on each image.</p>
        <p>To try the example, save the following code in a file named <code>docs_xroi_maintain_rois.pro</code>, then compile and execute the procedure. <MadCap:conditionalText data-mc-conditions="Reference Material.Online_Help_Only">(If you are viewing this topic in the IDL Workbench help, you can simply click on the code block below to compile the routine, then enter <code>docs_xroi_maintain_rois</code> at the IDL command line.)</MadCap:conditionalText></p>
        <p class="Code">PRO docs_xroi_maintain_rois<br /><br />; Read 3 images from mr_abdomen.dcm and open each one in XROI:<br />FOR i=0,2 DO BEGIN<br />   image = READ_DICOM(FILEPATH('mr_abdomen.dcm',$<br />      SUBDIR=['examples', 'data']), IMAGE_INDEX=i)<br />   XROI, image, r, g, b, REGIONS_IN = regions, $<br />      REGIONS_OUT = regions, $<br />      ROI_SELECT_COLOR = roi_select_color, $<br />      ROI_COLOR = roi_color, REJECTED = rejected, /BLOCK<br />   OBJ_DESTROY, rejected<br />ENDFOR<br /><br />OBJ_DESTROY, regions<br /><br />END</p>
        <p>Perform the following steps:</p>
        <ol>
            <li value="1">Run the example code and draw an ROI on the first image, then close that XROI window. Note that the next image contains the ROI defined in the first image. This is accomplished by setting REGIONS_IN and REGIONS_OUT to the same named variable in the FOR loop of the above code.</li>
            <li value="2">Draw another ROI on the second image.</li>
            <li value="3">Click the <b>Select</b> button and select the first ROI. Then click the <b>Info</b> button to open the <b>ROI Information</b> window, and click the <b>Delete ROI</b> button.</li>
            <li value="4">Close the second XROI window. Note that the third image contains the ROI defined in the second image, but not the ROI deleted on the second image. This example sets the REJECTED keyword to a named variable, and calls OBJ_DESTROY on that variable. Use of the REJECTED keyword is not necessary to prevent deleted ROIs from appearing on subsequent images, but allows you perform cleanup on objects that are no longer required.</li>
        </ol>
        <h3><a name="X_800576109_984959"></a><a name="X_800576109_984959_Keywords_XROI__"></a><a name="X_800576109_51427"></a>Example: Save ROI Data</h3>
        <p>XROI’s <b>File</b> &gt; <b>Save ROIs</b> option allows you to save selected regions of interest. This example shows how to restore such a save file. Suppose you have a file named <code>mineralRoi.sav</code> that contains regions of interest selected in the <code>mineral.png</code> image file. You would need to complete the following steps to restore the file:</p>
        <ol>
            <li value="1">
                <p>First, restore the file, <code>mineralRoi.sav</code>. Provide a value for the RESTORE procedure’s RESTORED_OBJECTS keyword. Using the scenario stated above, you could enter the following:</p>
                <p class="Code">RESTORE, 'mineralRoi.sav', RESTORED_OBJECTS = myRoi</p>
            </li>
            <li value="2">
                <p>Pass the restored object data containing your regions of interest into XROI by specifying <code>myRoi</code> as the value for REGIONS_IN as follows:</p>
                <p class="Code">XROI, READ_PNG(FILEPATH('mineral.png', SUBDIRECTORY = $<br />&#160;&#160;&#160;&#160;['examples', 'data'])), REGIONS_IN = myRoi</p>
                <p>This opens the previously selected regions of interest in the XROI utility.</p>
            </li>
        </ol>
        <h3><a name="X_800576109_1031731"></a><a name="X_800576109_30313"></a>Example: Save the XROI Utility with ROI Data</h3>
        <p>You can easily share your own IDL routines or utilities with other IDL users by using the SAVE routine to create a binary file of your compiled code. The following example creates a <code><a name="kanchor3064"></a></code>SAVE file of the XROI utility (a <code>.pro </code>file) and from within this file, restores a secondary SAVE file containing selected regions of interest.</p>
        <ol>
            <li value="1">Type <code>XROI</code> at the command line to open the XROI utility.</li>
            <li value="2">In the file selection dialog, select <code>mineral.png</code> from the <code>examples/data </code>subdirectory of the IDL distribution. </li>
            <li value="3">Select the <b>Draw Polygon</b> toolbar button and roughly outline the three large, angular areas of the image. </li>
            <li value="4">Select <b>File &gt; Save ROIs</b>and name the file <code>mineralROI.sav</code>. This creates a SAVE file containing the regions of interest selected within the image. &#160;</li>
            <li value="5">
                <p>In the IDL Editor or any text editor, enter the following routine:</p>
                <p class="Code">PRO myXRoi<br /><br />; Restore ROI object data by specifying a value for the <br />; RESTORED_OBJECTS keyword.<br />RESTORE, 'mineralROI.sav', RESTORED_OBJECTS = myROI<br /><br />; Open XROI, specifying the previously defined value for the<br />; restored object data as the value for "REGIONS_IN".<br />XROI, READ_PNG(FILEPATH('mineral.png', $<br />&#160;&#160;&#160;SUBDIRECTORY = ['examples', 'data'])), $<br />&#160;&#160;&#160;REGIONS_IN = myROI, /BLOCK<br /><br />END</p>
                <p>Save the routine as <code>myXRoi.pro</code></p>
            </li>
            <li value="6">
                <p>Compile the program you just created:</p>
                <p class="Code">.COMPILE myXRoi.pro</p>
            </li>
            <li value="7">
                <p><a name="kanchor3065"></a>Use RESOLVE_ALL to iteratively compile any uncompiled user-written or library procedures or functions that are called in any already-compiled procedure or function:</p>
                <p class="Code">RESOLVE_ALL</p>
                <p class="NoteIndented">RESOLVE_ALL does not resolve procedures or functions that are called via quoted strings such as CALL_PROCEDURE, CALL_FUNCTION, or EXECUTE, or in keywords that can contain procedure names such as TICKFORMAT or EVENT_PRO. You must manually compile these routines.</p>
            </li>
            <li value="8">
                <p>Create a SAVE file named <code>myXRoi.sav</code>, containing all of the XROI utility routines. When the SAVE procedure is called with the ROUTINES keyword and no arguments, it creates a SAVE file containing all currently compiled routines. Because the routines associated with the XROI utility are the only ones that are currently compiled in our IDL session, we can create a SAVE file as follows:</p>
                <p class="Code">SAVE, /ROUTINES, FILENAME='myXRoi.sav'</p>
            </li>
            <li value="9">
                <p>It is not necessary to use RESTORE to open <code>myXRoi.sav</code>. If the SAVE file uses the <code>.sav</code> extension and has the same base name as the main level routine, and all necessary files (in this case, <code>mineralROI.sav</code> and <code>myXRoi.sav</code>) are stored in the current working directory, simply type the name of the file, minus the <code>.sav</code> extension, at the command line:</p>
                <p class="Code">myXRoi</p>
            </li>
        </ol>
        <p>The following figure will appear, showing the selected regions of interest.</p>
        <p>
            <img src="../../images/xroi.gif" style="margin-left: 5.99976px;margin-top: 5.99976px;margin-right: 6.000469px;margin-bottom: 6.000477px;" />
        </p>
        <h2 class="API"><a name="X_800576109_991478"></a><a name="X_800576109_991478_PageTOC_XROI_"></a>Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>5.4</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>5.6</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Added X_SCROLL_SIZE and Y_SCROLL_SIZE keywords</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <h2 class="API">See Also</h2>
        <p>&#160;</p>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>