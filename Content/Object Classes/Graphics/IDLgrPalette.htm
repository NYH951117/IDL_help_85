<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Object Classes|Graphics Object Classes">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>IDLgrPalette</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../ObjectClasses.htm">Object Classes</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="objects_gr.htm">Graphics Object Classes</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">IDLgrPalette</span>
        </div>
        <h1 class="ObjClass"><a name="objects_gr_2157407275_1012113"></a><a name="objects_gr_2157407275_45361"></a>IDLgrPalette</h1>
        <p data-mc-conditions="Reference Material.Online_Help_Only">
            <MadCap:conditionalText data-mc-conditions="Reference Material.Online_Help_Only"><a href="#objects_gr_2157407275_1012131" class="selected">Superclasses</a> | <a href="#objects_gr_2157407275_1012134" class="selected">Creation</a> | <a href="#objects_gr_2157407275_1043989" class="selected">Properties</a> | <a href="#objects_gr_2157407275_1012140" class="selected">Methods</a> | <a href="#objects_gr_2157407275_1653138" class="selected">Examples</a> | <a href="#objects_gr_2157407275_1012176" class="selected">Version History</a></MadCap:conditionalText>
        </p>
        <p>A <a name="kanchor3680"></a>palette object represents a color lookup table that maps indices to red, green, and blue values.</p>
        <h2 class="API"><a name="objects_gr_2157407275_1012131"></a><a name="objects_gr_2157407275_1005057_PageTOC_IDLgrPalette__"></a>Superclasses</h2>
        <p>None</p>
        <h2 class="API"><a name="objects_gr_2157407275_1012134"></a><a name="objects_gr_2157407275_1005061_PageTOC_IDLgrPalette__"></a>Creation</h2>
        <p>See <a href="IDLgrPalette__Init.htm#objects_gr_2157407275_1012290" target="" title="" alt="">IDLgrPalette::Init</a>.</p>
        <h2 class="API"><a name="objects_gr_2157407275_1043989"></a><a name="objects_gr_2157407275_58547"></a>Properties</h2>
        <p>Objects of this class have the following properties. See <a href="IDLgrPalette_Properties.htm#objects_gr_2157407275_1044755" target="" title="" alt="">IDLgrPalette Properties</a> for details on individual properties.</p>
        <ul>
            <li value="1"><a href="IDLgrPalette_Properties.htm#objects_gr_2157407275_1056048">ALL</a>
            </li>
            <li value="2"><a href="IDLgrPalette_Properties.htm#objects_gr_2157407275_1056069">BLUE_VALUES</a>
            </li>
            <li value="3"><a href="IDLgrPalette_Properties.htm#objects_gr_2157407275_1056071">BOTTOM_STRETCH</a>
            </li>
            <li value="4"><a href="IDLgrPalette_Properties.htm#objects_gr_2157407275_1056073">GAMMA</a>
            </li>
            <li value="5"><a href="IDLgrPalette_Properties.htm#objects_gr_2157407275_1056075">GREEN_VALUES</a>
            </li>
            <li value="6"><a href="IDLgrPalette_Properties.htm#objects_gr_2157407275_1688744">NAME</a>
            </li>
            <li value="7"><a href="IDLgrPalette_Properties.htm#objects_gr_2157407275_1056093">N_COLORS</a>
            </li>
            <li value="8"><a href="IDLgrPalette_Properties.htm#objects_gr_2157407275_1056079">RED_VALUES</a>
            </li>
            <li value="9"><a href="IDLgrPalette_Properties.htm#objects_gr_2157407275_1056081">TOP_STRETCH</a>
            </li>
            <li value="10"><a href="IDLgrPalette_Properties.htm#objects_gr_2157407275_1688797">UVALUE</a>
            </li>
        </ul>
        <p>In addition, objects of this class inherit the properties of all superclasses of this class.</p>
        <h2 class="API"><a name="objects_gr_2157407275_1012140"></a><a name="objects_gr_2157407275_1005074_PageTOC_IDLgrPalette__"></a>Methods<a name="kanchor3681"></a></h2>
        <p>This class has this following methods:</p>
        <ul>
            <li value="1"><a href="IDLgrPalette__Cleanup.htm#objects_gr_2157407275_1012181">IDLgrPalette::Cleanup</a>
            </li>
            <li value="2"><a href="IDLgrPalette__GetRGB.htm#objects_gr_2157407275_1012216">IDLgrPalette::GetRGB</a>
            </li>
            <li value="3"><a href="IDLgrPalette__GetPropert.htm#objects_gr_2157407275_1012249">IDLgrPalette::GetProperty</a>
            </li>
            <li value="4"><a href="IDLgrPalette__Init.htm#objects_gr_2157407275_1012290">IDLgrPalette::Init</a>
            </li>
            <li value="5"><a href="IDLgrPalette__LoadCT.htm#objects_gr_2157407275_1012353">IDLgrPalette::LoadCT</a>
            </li>
            <li value="6"><a href="IDLgrPalette__NearestCol.htm#objects_gr_2157407275_1012387">IDLgrPalette::NearestColor</a>
            </li>
            <li value="7"><a href="IDLgrPalette__SetRGB.htm#objects_gr_2157407275_1012424">IDLgrPalette::SetRGB</a>
            </li>
            <li value="8"><a href="IDLgrPalette__SetPropert.htm#objects_gr_2157407275_1012463">IDLgrPalette::SetProperty</a>
            </li>
        </ul>
        <p>In addition, this class inherits the methods of its superclasses (if any).</p>
        <h2 class="API"><a name="objects_gr_2157407275_1653138"></a><a name="objects_gr_2157407275_72018"></a>Examples</h2>
        <p>This section contains the following examples:</p>
        <ul>
            <li value="1"><a href="#objects_gr_2157407275_1653152" target="" title="" alt="" class="selected">Displaying Indexed Images with Object Graphics</a> — accesses the palette associated with an indexed image and passes the palette data to an IDLgrPalette object</li>
            <li value="2"><a href="#objects_gr_2157407275_1653335" target="" title="" alt="" class="selected">Highlighting Features with Color in Object Graphics</a> — loads a pre-defined color table into a palette object and then modifies this color table to highlight image features</li>
        </ul>
        <h3><a name="objects_gr_2157407275_1653152"></a><a name="objects_gr_2157407275_97003"></a>Displaying<a name="kanchor3682"></a> Indexed <a name="kanchor3683"></a>Images with <a name="kanchor3684"></a>Object Graphics</h3>
        <p><a name="kanchor3685"></a>An <a name="kanchor3686"></a>indexed image contains up to 256 colors, typically defined by a color table associated with the image. The value of each pixel relates to a color within the associated color table. Combinations of the primary colors (red, green, and blue) make up the colors within the color table. Most indexed images are stored as byte and therefore do not require scaling prior to display.</p>
        <p>The following example imports an indexed image from the <code>avhrr.png</code> image file. This indexed image is a satellite photograph of the world. Complete the following steps for a detailed description of the process.</p>
        <p class="ExampleCode">See <code>displayindexedimage_object.<a name="kanchor3687"></a>pro</code> in the <code>examples/doc/objects</code> subdirectory of the IDL installation directory for code that duplicates this example. Run the example procedure by entering <code>displayindexedimage</code> at the IDL command prompt or view the file in an IDL Editor window by entering <code>displayindexedimage.pro</code>. </p>
        <ol>
            <li value="1">
                <p>Determine the path to the <code>avhrr.png</code> file:</p>
                <p class="Code">file = FILEPATH('avhrr.png', $</p>
                <p class="Code">   SUBDIRECTORY = ['examples', 'data'])</p>
            </li>
            <li value="2">
                <p>Use <a href="../../Reference Material/Q/QUERY_IMAGE.htm#Q_815714925_1095965" target="" title="" alt="">QUERY_IMAGE</a> to query the file to determine image parameters:</p>
                <p class="Code">queryStatus = QUERY_IMAGE(file, imageInfo)</p>
            </li>
            <li value="3">
                <p>Output the results of the file query:</p>
                <p class="Code">PRINT, 'Query Status = ', queryStatus</p>
                <p class="Code">HELP, imageInfo, /STRUCTURE</p>
                <p>The following text appears in the Output Log:</p>
                <p class="Code">Query Status =            1</p>
                <p class="Code">** Structure &lt;141d0b0&gt;, 7 tags, length=36, refs=1:</p>
                <p class="Code">   CHANNELS &#160;&#160;&#160;&#160;&#160;LONG &#160;&#160;&#160;&#160;1</p>
                <p class="Code">   DIMENSIONS &#160;&#160;&#160;LONG &#160;&#160;&#160;&#160;Array[2]</p>
                <p class="Code">   HAS_PALETTE &#160;&#160;INT &#160;&#160;&#160;&#160;&#160;1</p>
                <p class="Code">   IMAGE_INDEX &#160;&#160;LONG &#160;&#160;&#160;&#160;0</p>
                <p class="Code">   NUM_IMAGES &#160;&#160;&#160;LONG &#160;&#160;&#160;&#160;1</p>
                <p class="Code">   PIXEL_TYPE &#160;&#160;&#160;INT &#160;&#160;&#160;&#160;&#160;1</p>
                <p class="Code">   TYPE &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;STRING &#160;&#160;'PNG'</p>
            </li>
            <li value="4">
                <p>Set the image size parameter from the query information:</p>
                <p class="Code">imageSize = imageInfo.dimensions</p>
                <p>The HAS_PALETTE tag has a value of 1. Thus, the image has a palette (color table), which is also contained within the file. The color table is made up of its three primary components (the red component, the green component, and the blue component).</p>
            </li>
            <li value="5">
                <p>Use <a href="../../Reference Material/R/READ_IMAGE.htm#R_822202989_1071039" target="" title="" alt="">READ_IMAGE</a> to import the image and its associated color table from the file:</p>
                <p class="Code">image = READ_IMAGE(file, red, green, blue)</p>
            </li>
            <li value="6">
                <p>Initialize the display objects:</p>
                <p class="Code">oWindow = OBJ_NEW('IDLgrWindow', RETAIN = 2, $</p>
                <p class="Code">&#160;&#160;&#160;DIMENSIONS = imageSize, TITLE = 'An Indexed Image')</p>
                <p class="Code">oView = OBJ_NEW('IDLgrView', $</p>
                <p class="Code">&#160;&#160;&#160;VIEWPLANE_RECT = [0., 0., imageSize])</p>
                <p class="Code">oModel = OBJ_NEW('IDLgrModel')</p>
            </li>
            <li value="7">
                <p>Initialize the image’s palette object:</p>
                <p class="Code">oPalette = OBJ_NEW('IDLgrPalette', red, green, blue)</p>
            </li>
            <li value="8">
                <p>Initialize the image object with the resulting palette object:</p>
                <p class="Code">oImage = OBJ_NEW('IDLgrImage', image, $</p>
                <p class="Code">&#160;&#160;&#160;PALETTE = oPalette)</p>
            </li>
            <li value="9">
                <p>Add the image object to the model, which is added to the view, then display the view in the window:</p>
                <p class="Code">oModel -&gt; Add, oImage</p>
                <p class="Code">oView -&gt; Add, oModel</p>
                <p class="Code">oWindow -&gt; Draw, oView</p>
            </li>
            <li value="10">
                <p>Use the colorbar object to display the associated color table in another window:</p>
                <p class="Code">oCbWindow = OBJ_NEW('IDLgrWindow', RETAIN = 2, $</p>
                <p class="Code">&#160;&#160;&#160;DIMENSIONS = [256, 48], $</p>
                <p class="Code">&#160;&#160;&#160;TITLE = 'Original Color Table')</p>
                <p class="Code">oCbView = OBJ_NEW('IDLgrView', $</p>
                <p class="Code">&#160;&#160;&#160;VIEWPLANE_RECT = [0., 0., 256., 48.])</p>
                <p class="Code">oCbModel = OBJ_NEW('IDLgrModel')</p>
                <p class="Code">oColorbar = OBJ_NEW('IDLgrColorbar', PALETTE = oPalette, $</p>
                <p class="Code">&#160;&#160;&#160;DIMENSIONS = [256, 16], SHOW_AXIS = 1)</p>
                <p class="Code">oCbModel -&gt; Add, oColorbar</p>
                <p class="Code">oCbView -&gt; Add, oCbModel</p>
                <p class="Code">oCbWindow -&gt; Draw, oCbView</p>
                <p>The following figure shows the resulting indexed image and its color table in Object Graphics.</p>
                <p>
                    <img src="../../images/imgdisp08.gif" style="margin-left: 5.99976px;margin-top: 5.99976px;margin-right: 6.000484px;margin-bottom: 6.000484px;" />
                </p>
                <p>The data values within the image are indexed to specific colors within the table. You can change the color table associated with this image to show how an indexed image is dependent upon its related color tables.</p>
            </li>
            <li value="11">
                <p>Change the palette (color table) to the EOS B pre-defined color table:</p>
                <p class="Code">oPalette -&gt; LoadCT, 27</p>
            </li>
            <li value="12">
                <p>Redisplay the image in another window to show the palette change:</p>
                <p class="Code">oWindow = OBJ_NEW('IDLgrWindow', RETAIN = 2, $</p>
                <p class="Code">&#160;&#160;&#160;DIMENSIONS = imageSize, TITLE = 'An Indexed Image')</p>
                <p class="Code">oWindow -&gt; Draw, oView</p>
            </li>
            <li value="13">
                <p>Redisplay the colorbar in another window to show the palette change:</p>
                <p class="Code">oCbWindow = OBJ_NEW('IDLgrWindow', RETAIN = 2, $</p>
                <p class="Code">&#160;&#160;&#160;DIMENSIONS = [256, 48], $</p>
                <p class="Code">&#160;&#160;&#160;TITLE = 'EOS B Color Table')</p>
                <p class="Code">oCbWindow -&gt; Draw, oCbView</p>
                <p>The following figure shows the indexed image with the EOS B color table in Object Graphics.</p>
                <p>
                    <img src="../../images/imgdisp09.gif" style="margin-left: 5.99976px;margin-top: 5.99976px;margin-right: 6.000484px;margin-bottom: 6.000484px;" />
                </p>
            </li>
            <li value="14">
                <p>Clean up the object references. When working with objects always remember to clean up any object references with the OBJ_DESTROY routine. Since the view contains all the other objects, except for the window (which is destroyed by the user), you only need to use OBJ_DESTROY on the view object.</p>
                <p class="Code">OBJ_DESTROY, [oView, oCbVeiw, oPalette]</p>
            </li>
        </ol>
        <h3><a name="objects_gr_2157407275_1653335"></a><a name="objects_gr_2157407275_13255"></a>Highlighting<a name="kanchor3688"></a> Features with Color in <a name="kanchor3689"></a>Object Graphics</h3>
        <p>This example shows how to create a color table to highlight image features using Object Graphics. Complete the following steps for a detailed description of the process.</p>
        <p class="ExampleCode">See <code>highlightfeatures_object.<a name="kanchor3690"></a>pro</code> in the <code>examples/doc/objects</code> subdirectory of the IDL installation directory for code that duplicates this example. Run the example procedure by entering <code>highlightfeatures_object</code> at the IDL command prompt or view the file in an IDL Editor window by entering <code>highlightfeatures_object.pro</code>. </p>
        <ol>
            <li value="1">
                <p>Determine the path to the <code>mineral.png </code>file:</p>
                <p class="Code">mineralFile = FILEPATH('mineral.png', $</p>
                <p class="Code">&#160;&#160;&#160;SUBDIRECTORY = ['examples', 'data'])</p>
            </li>
            <li value="2">
                <p>Import the image and its associated color table into IDL:</p>
                <p class="Code">mineralImage = READ_PNG(mineralFile, red, green, blue)</p>
            </li>
            <li value="3">
                <p>Determine the size of the imported image:</p>
                <p class="Code">mineralSize = SIZE(mineralImage, /DIMENSIONS)</p>
            </li>
            <li value="4">
                <p>Initialize objects necessary for a graphics display:</p>
                <p class="Code">oWindow = OBJ_NEW('IDLgrWindow', RETAIN = 2, $</p>
                <p class="Code">&#160;&#160;&#160;DIMENSIONS = [mineralSize[0], mineralSize[1]], $</p>
                <p class="Code">&#160;&#160;&#160;TITLE = 'mineral.png')</p>
                <p class="Code">oView = OBJ_NEW('IDLgrView', VIEWPLANE_RECT = [0., 0., $</p>
                <p class="Code">&#160;&#160;&#160;mineralSize[0], mineralSize[1]])</p>
                <p class="Code">oModel = OBJ_NEW('IDLgrModel')</p>
            </li>
            <li value="5">
                <p>Initialize a palette object containing the image’s associated color table and apply the palette to the image objects:</p>
                <p class="Code">oPalette = OBJ_NEW('IDLgrPalette', red, green, blue)</p>
                <p class="Code">oImage = OBJ_NEW('IDLgrImage', mineralImage, $</p>
                <p class="Code">&#160;&#160;&#160;PALETTE = oPalette)</p>
                <p>The objects are then added to the view, which is displayed in the window.</p>
            </li>
            <li value="6">
                <p>Add the image to the model, then add the model to the view:</p>
                <p class="Code">oModel -&gt; Add, oImage</p>
                <p class="Code">oView -&gt; Add, oModel</p>
                <p>Draw the view in the window:</p>
                <p class="Code">oWindow -&gt; Draw, oView</p>
                <p>This scanning electron microscope image shows mineral deposits in a sample of polished granite and gneiss. The associated color table is a reverse grayscale.</p>
                <p>The following figure of a mineral image and default color table (Object Graphics) shows that the associated color table highlights the gneiss very well, but the other features are not very clear. The other features can be defined with IDL’s pre-defined color table, RAINBOW.</p>
                <p>
                    <img src="../../images/imgcolor21.gif" style="margin-left: 5.99976px;margin-top: 5.99976px;margin-right: 5.999767px;margin-bottom: 5.999752px;" />
                </p>
                <p>The palette can easily be modified to show the RAINBOW pre-defined color table in another instance of the window object.</p>
            </li>
            <li value="7">
                <p>Update palette with RAINBOW color table and then display the image with this color table in another instance window of the window object:</p>
                <p class="Code">oPalette -&gt; LoadCT, 13</p>
                <p class="Code">oWindow = OBJ_NEW('IDLgrWindow', RETAIN = 2, $</p>
                <p class="Code">&#160;&#160;&#160;DIMENSIONS = [mineralSize[0], mineralSize[1]], $	</p>
                <p class="Code">&#160;&#160;&#160;TITLE = 'RAINBOW Color')</p>
                <p class="Code">oWindow -&gt; Draw, oView</p>
                <p>The following figure of a mineral image with the RAINBOW color table applied (Object Graphics) shows that the yellow, cyan, and red sections are now apparent, but the cracks are no longer visible. Details within the yellow areas and the green background are also difficult to distinguish. These features can be highlighted by designing your own color table.</p>
                <p>
                    <img src="../../images/imgcolor22.gif" style="margin-left: 5.99976px;margin-top: 5.99976px;margin-right: 5.999767px;margin-bottom: 5.999752px;" />
                </p>
                <p>The features within the image are at specific ranges in between 0 and 255. Instead of a progressive color table, specific colors can be defined to be constant over these ranges. Any contrasting colors can be used, but the easiest to derive are the additive and subtractive primary colors used in the previous section.</p>
            </li>
            <li value="8">
                <p>Define colors for a new color table:</p>
                <p class="Code">colorLevel = [[0, 0, 0], $ ; black</p>
                <p class="Code">&#160;&#160;&#160;[255, 0, 0], $ ; red</p>
                <p class="Code">&#160;&#160;&#160;[255, 255, 0], $ ; yellow</p>
                <p class="Code">&#160;&#160;&#160;[0, 255, 0], $ ; green</p>
                <p class="Code">&#160;&#160;&#160;[0, 255, 255], $ ; cyan</p>
                <p class="Code">&#160;&#160;&#160;[0, 0, 255], $ ; blue</p>
                <p class="Code">&#160;&#160;&#160;[255, 0, 255], $ ; magenta</p>
                <p class="Code">&#160;&#160;&#160;[255, 255, 255]] ; white</p>
            </li>
            <li value="9">
                <p>Create a new color table that contains eight levels, including the highest end boundary by first deriving levels for each color in the new color table:</p>
                <p class="Code">numberOfLevels = CEIL(!D.TABLE_SIZE/8.)</p>
                <p class="Code">level = INDGEN(!D.TABLE_SIZE)/numberOfLevels</p>
            </li>
            <li value="10">
                <p>Place each color level into its appropriate range.</p>
                <p class="Code">newRed = colorLevel[0, level]</p>
                <p class="Code">newGreen = colorLevel[1, level]</p>
                <p class="Code">newBlue = colorLevel[2, level]</p>
            </li>
            <li value="11">
                <p>Include the last color in the last level:</p>
                <p class="Code">newRed[!D.TABLE_SIZE - 1] = 255</p>
                <p class="Code">newGreen[!D.TABLE_SIZE - 1] = 255</p>
                <p class="Code">newBlue[!D.TABLE_SIZE - 1] = 255</p>
            </li>
            <li value="12">
                <p>Apply the new color table to the palette object:</p>
                <p class="Code">oPalette -&gt; SetProperty, RED_VALUES = newRed, $</p>
                <p class="Code">&#160;&#160;&#160;GREEN_VALUES = newGreen, BLUE_VALUES = newBlue</p>
            </li>
            <li value="13">
                <p>Display the image with this color table in another window:</p>
                <p class="Code">oWindow = OBJ_NEW('IDLgrWindow', RETAIN = 2, $</p>
                <p class="Code">&#160;&#160;&#160;DIMENSIONS = [mineralSize[0], mineralSize[1]], $</p>
                <p class="Code">&#160;&#160;&#160;TITLE = 'Cube Corner Colors')</p>
                <p class="Code">oWindow -&gt; Draw, oView</p>
                <p>The following figure shows in a mineral image and derived color table (Object Graphics) that each image feature is readily distinguishable.</p>
                <p>
                    <img src="../../images/imgcolor23.gif" style="margin-left: 5.99976px;margin-top: 5.99976px;margin-right: 5.999767px;margin-bottom: 5.999752px;" />
                </p>
            </li>
            <li value="14">
                <p>Clean up object references. When working with objects always remember to clean up any object references with the OBJ_DESTROY routine. Since the view contains all the other objects, except for the window (which is destroyed by the user), you only need to use OBJ_DESTROY on the view and the palette object:</p>
                <p class="Code">OBJ_DESTROY, [oView, oPalette]</p>
            </li>
        </ol>
        <h2 class="API"><a name="objects_gr_2157407275_1012176"></a><a name="objects_gr_2157407275_1395009_PageTOC_IDLgrPalette__"></a>Version History</h2>
        <table style="mc-table-style: url('../../Resources/TableStyles/VersionTable.css');margin-left: 0;margin-right: auto;caption-side: top;" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_ColSep">
                        <p>5.0</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>6.2</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Added UVALE and NAME properties</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>