<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Object Classes|Graphics Object Classes|IDLgrImage">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>IDLgrImage::ReadFilteredData</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/NoLines.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/Description.css" rel="stylesheet" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../ObjectClasses.htm">Object Classes</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="objects_gr.htm">Graphics Object Classes</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">IDLgrImage::ReadFilteredData</span>
        </div>
        <h1 class="ObjMethod"><a name="objects_gr_2157407275_1812558"></a><a name="kanchor3638"></a><a name="kanchor3639"></a><a name="objects_gr_2157407275_71372"></a>IDLgrImage::ReadFilteredData</h1>
        <p>The IDLgrImage::ReadFilteredData function method returns image data after a shader program (contained in an <a href="IDLgrShader.htm#objects_gr_2157407275_1789376">IDLgrShader</a> object or object subclassed from IDLgrShader) has been applied, or after one or more shaders (contained in an <a href="IDLgrFilterChain.htm#objects_gr_2157407275_1808615">IDLgrFilterChain</a> object) have been applied. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>If there is sufficient hardware support for IDLgrShader programs, this method will complete the shader operations and read the results generated by the graphic cardâ€™s GPU (Graphic Processing Unit). If there is insufficient support or if software rendering has been specified, the software-based alternative will be used if you have provided one.  </p>
        <h2 class="API">Syntax</h2>
        <p class="Syntax"><i>Result = Obj</i>-&gt;[<a href="IDLgrImage.htm#objects_gr_2157407275_1010038">IDLgrImage</a>::]ReadFilteredData( <i>Dest </i>[,&#160;<a href="#objects_gr_2157407275_1812656" class="selected">DATA_TYPE</a>=<i>value</i>] [,&#160;<a href="#objects_gr_2157407275_1812765" class="selected">READ_POSITION</a>=<i>value</i>] [,&#160;<a href="#objects_gr_2157407275_1812736" class="selected">TILE</a>=<i>tileinfo</i>] )</p>
        <h2 class="API">Return Value </h2>
        <p>Returns an array containing the filtered image data. The returned array is always of dimensions [4, <i>w</i>, <i>h</i>] where <i>w</i> is the width of the returned image and <i>h</i> is the height. The data is always pixel interleaved RGBA. The type of the returned data is determined by the <a href="#objects_gr_2157407275_1812656" class="selected">DATA_TYPE</a> keyword.</p>
        <p>If there was an error this method returns 0.</p>
        <h2 class="API">Arguments</h2>
        <h3 class="Argument">Dest</h3>
        <p>A object reference to a graphics destination object, (e.g. IDLgrWindow). </p>
        <h2 class="API">Keywords</h2>
        <h3 class="Keyword"><a name="objects_gr_2157407275_1812656"></a><a name="objects_gr_2157407275_74670"></a>DATA_TYPE</h3>
        <p>Set this to one of the following allowable values to specify the data type of the returned data: </p>
        <table style="margin-left: 0;margin-right: auto;caption-side: top;mc-table-style: url('../../Resources/TableStyles/NoLines.css');" class="TableStyle_NoLines" cellspacing="0">
            <col class="Column-Column1" />
            <col class="Column-Column1" />
            <tbody>
                <tr class="Body-Body1">
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p>0</p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColEnd">
                        <p>BYTE (default)</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p>1</p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColEnd">
                        <p>INT</p>
                    </td>
                </tr>
                <tr class="Body-Body1">
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColSep">
                        <p>2</p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowSep_ColEnd">
                        <p>FLOAT</p>
                    </td>
                </tr>
                <tr class="Body-Body2">
                    <td class="TableStyle_NoLines_Body_0_0_RowEnd_ColSep">
                        <p>3</p>
                    </td>
                    <td class="TableStyle_NoLines_Body_0_0_RowEnd_ColEnd">
                        <p>UINT</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>The output of shader programs is always floating point so if 0, 1, or 3 is specified, the output is clamped to the range of 0.0 to 1.0 and then scaled to fill the requested data type range. If 2 is specified, the data is returned unmodified. The data is converted from floating point to the requested type as follows:</p>
        <table style="mc-table-style: url('../../Resources/TableStyles/Description.css');margin-left: 0;margin-right: auto;caption-side: top;" class="TableStyle_Description" cellspacing="0">
            <col />
            <col />
            <thead>
                <tr>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColSep">
                        <p>Requested Type</p>
                    </td>
                    <td class="TableStyle_Description_Head_0_0_RowSep_ColEnd">
                        <p>Conversion from Floating Point (f)</p>
                    </td>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>BYTE (0)</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p><i>c </i>= (2<sup>8</sup>-1)<i>f</i></p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColSep">
                        <p>INT (1)</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowSep_ColEnd">
                        <p><i>c </i>= [(2<sup>16</sup>-1)<i>f -</i>1]/2</p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColSep">
                        <p>FLOAT (2)</p>
                    </td>
                    <td class="TableStyle_Description_Body_0_0_RowSep_ColEnd">
                        <p><i>c = f</i>
                        </p>
                    </td>
                </tr>
                <tr>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColSep">
                        <p>UINT (3)</p>
                    </td>
                    <td class="TableStyle_Description_Body_1_0_RowEnd_ColEnd">
                        <p><i>c </i>= (2<sup>16</sup>-1)<i>f</i></p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>It is very important that this keyword and the IDLgrShader <a href="IDLgrShader_Properties.htm#objects_gr_2157407275_1807807">OUTPUT_DATA_TYPE</a> property are set in a consistent manner. For example, suppose you have UINT image data, but OUTPUT_DATA_TYPE is set to BYTE while DATA_TYPE is set to UINT. You will lose accuracy (due to the intermediate BYTE stage). In this example OUTPUT_DATA_TYPE should be set to FLOAT32 (or possibly FLOAT16 if only 10-bits of the UINT are used).</p>
        <p>If not set, BYTE data is returned by default. </p>
        <h3 class="Keyword"><a name="objects_gr_2157407275_1812765"></a><a name="objects_gr_2157407275_15199"></a>READ_POSITION</h3>
        <p>When the IDLgrImage <a href="IDLgrImage_Properties.htm#objects_gr_2157407275_1799401">SHADER</a> property has been set to an IDLgrFilterChain object, set this keyword to a scalar long value specifying the zero-based position in the chain from which the data should be read. </p>
        <p>For instance, if the filter chain contains a series of 3 shader objects, setting this keyword to one of the following values returns the specified data: </p>
        <ul>
            <li value="1">0 reads the result without any shaders applied</li>
            <li value="2">1 reads the result after application of only the first shader</li>
            <li value="3">2 reads the result after application of the first and second shaders</li>
            <li value="4">3 reads the result after application of all three shaders</li>
        </ul>
        <p>If this keyword isn't set then the default behavior is to return the image data after application of all filtering shaders in the filter chain.</p>
        <h3 class="Keyword"><a name="objects_gr_2157407275_1812736"></a><a name="objects_gr_2157407275_88470"></a>TILE</h3>
        <p>If the IDLgrImage is tiled (TILING=1) then this keyword must be set to a valid IDLIMAGETILE structure specifying the tile or tiles for which to return filtered data. For example, to retrieve the filtered data for the currently visible tiles call IDLgrWindow::QueryRequiredTiles, /ALL_VISIBLE, then for each tile call ReadFilteredData. </p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>Data must be loaded into the tiles using <a href="IDLgrImage__SetTileData.htm#objects_gr_2157407275_1667909">IDLgrImage::SetTileData</a> before doing this.</p>
        <p>An error will be generated if the image is tiled and this keyword is not set to a valid IDLIMAGETILE structure. </p>
        <h2 class="API">Examples</h2>
        <p>Create an instance of the example object, <code>shader_rgb_doc</code>, which includes the ability to capture an image and display the results in iImage. Run the example by creating an instance of the object at the IDL command prompt using <code>orgbshader=OBJ_NEW("shader_rgb_doc")</code> or view the file in an IDL Editor window by entering <code>.EDIT shader_rgb_doc__define</code>. </p>
        <h2 class="API">Version History</h2>
        <table style="mc-table-style: url('../../Resources/TableStyles/VersionTable.css');margin-left: 0;margin-right: auto;caption-side: top;" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>6.4</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <div class="mp_footer">Â© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>