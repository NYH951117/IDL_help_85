<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="idl.xml" data-mc-path-to-help-system="../../../" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-medium="non-print" data-mc-toc-path="Routines (alphabetical)|Object Classes|Network Object Classes|IDLnetURL">
    <!-- saved from url=(0016)http://localhost -->
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta charset="utf-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>IDLnetURL::Get</title>
        <link href="../../../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../../Resources/TableStyles/VersionTable.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/Doc_Style.css" rel="stylesheet" />
        <script src="../../../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../../../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.min.js">
        </script>
        <script src="../../../Resources/Scripts/require.config.js">
        </script>
        <script src="../../../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../../../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../../../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <div class="MCBreadcrumbsBox_0"><span class="MCBreadcrumbsPrefix"> </span><a class="MCBreadcrumbsLink" href="../../images/ref_part1.htm">Routines (alphabetical)</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../ObjectClasses.htm">Object Classes</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="objects_network.htm">Network Object Classes</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">IDLnetURL::Get</span>
        </div>
        <h1 class="ObjMethod"><a name="objects_network_1009015_1406627"></a><a name="objects_network_1009015_37852"></a>I<a name="kanchor4173"></a>DLnetURL::Get</h1>
        <p>The IDLnetURL::Get function method retrieves a resource from a remote HTTP or FTP server and writes it to disk, a memory buffer, or an array of strings. The returned data is written to disk in the location specified by the FILENAME keyword. If the file name is the same between method calls, the last file received is overwritten. </p>
        <p>When retrieving a file from a remote FTP server, the Get method automatically changes directories to the path specified on the server before retrieving the file. The path is specified in the URL keyword or in the URL_PATH property. </p>
        <p>This method supports SSL data transfers to and from remote HTTP or FTP servers. When the scheme is FTP and the path ends in a slash, a directory listing for the path-specified directory is returned. If the scheme is HTTP and the path is not set, this method attempts to get the <code>index.htm</code> file from the remote HTTP server. </p>
        <p>This method sets the <a href="IDLnetURL_Properties.htm#objects_network_1009015_1405560">RESPONSE_CODE</a> and <a href="IDLnetURL_Properties.htm#objects_network_1009015_1405811">RESPONSE_HEADER</a> properties, which contain response information sent by the remote server. The information stored in these properties can be useful when troubleshooting transmission problems. Receiving callbacks and printing the status strings with the <a href="IDLnetURL_Properties.htm#objects_network_1009015_1406257">VERBOSE</a> and <a href="IDLnetURL_Properties.htm#objects_network_1009015_1408065">CALLBACK_FUNCTION</a> properties set is another valuable troubleshooting technique.</p>
        <p>This method generates an error if the transmission fails. Use a CATCH statement to trap errors and print the error messages and response codes.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>When the HTTP server issues response code 401 or the FTP server generates response code 530, a login is required or the current username and password are incorrect.</p>
        <p>Calls to the Get method are canceled when the return value of the callback function is zero. </p>
        <p>See <a href="IDLnetURL.htm#objects_network_1009015_1408886">Using Callbacks with the IDLnetURL Object</a> for details.</p>
        <p>If a FTP connection fails, try switching the connection mode from Active to Passive using the FTP_CONNECTION_MODE property.</p>
        <h2 class="API"><a name="objects_network_1009015_1407759"></a><a name="objects_network_1009015_1406645_PageTOC_IDLnetURL"></a>Syntax</h2>
        <p class="Syntax"><i>Result</i> = <i>Obj</i>-&gt;[<a href="IDLnetURL.htm#objects_network_1009015_1370815">IDLnetURL</a>::]Get( [,&#160;/<a href="#objects_network_1009015_1421529" class="selected">BUFFER</a>] [,&#160;<a href="#objects_network_1009015_1406656" class="selected">FILENAME</a>=<i>string</i>]  [,&#160;/<a href="#objects_network_1009015_1420600" class="selected">FTP_EXPLICIT_SSL</a>] [,&#160;/<a href="#objects_network_1009015_1406664" class="selected">STRING_ARRAY</a>] [,&#160;<a href="#objects_network_1009015_1420458" class="selected">URL</a>=<i>string</i>])</p>
        <h2 class="API"><a name="objects_network_1009015_1406647"></a><a name="objects_network_1009015_1406647_PageTOC_IDLnetURL"></a>Return Value</h2>
        <p>This method returns one of the following:</p>
        <ul>
            <li value="1">A string containing the full path of the file retrieved from the remote HTTP or FTP server.</li>
            <li value="2">A byte vector, if the BUFFER keyword is set.</li>
            <li value="3">An array of strings, if the STRING_ARRAY keyword is set.</li>
            <li value="4">An empty string, if no data were returned by the method.</li>
        </ul>
        <h2 class="API"><a name="objects_network_1009015_1406653"></a><a name="objects_network_1009015_1406653_PageTOC_IDLnetURL"></a>Arguments</h2>
        <p>None.</p>
        <h2 class="API"><a name="objects_network_1009015_1406655"></a><a name="objects_network_1009015_1406655_PageTOC_IDLnetURL"></a>Keywords</h2>
        <h3 class="Keyword"><a name="objects_network_1009015_1406656"></a><a name="objects_network_1009015_1406656_Keywords_IDLnetURL"></a>FILENAME</h3>
        <p>Set this keyword equal to a string that holds the file name and path where the retrieved file is locally stored. </p>
        <ul>
            <li value="1">If FILENAME specifies a full path, the file is stored in the specified path.</li>
            <li value="2">If FILENAME specifies a relative path, the path is relative to IDL’s current working directory.</li>
            <li value="3">If FILENAME is not present or specifies an empty string, the file is stored in IDL’s current working directory under the name <code>idl.dat</code>.</li>
            <li value="4">If FILENAME is the same between calls to Get, the last file received is overwritten.</li>
        </ul>
        <h3 class="Keyword"><a name="objects_network_1009015_1421529"></a><a name="objects_network_1009015_1406662_Keywords_IDLnetURL"></a>BUFFER</h3>
        <p>If this keyword is set, the return value is a buffer and the FILENAME keyword is ignored. </p>
        <h3 class="Keyword"><a name="objects_network_1009015_1420600"></a><a name="objects_network_1009015_1406671_Keywords_IDLnetURL"></a>FTP_EXPLICIT_SSL</h3>
        <p>Set this keyword to explicitly use SSL to transfer commands and data to or from a remote FTP server. It is not necessary to set this keyword when the scheme is “ftps” (which implicitly activates SSL). </p>
        <p>See <a href="IDLnetURL.htm#objects_network_1009015_1404804">Secure FTP</a> for additional notes on SSL connections.</p>
        <h3 class="Keyword"><a name="objects_network_1009015_1406664"></a><a name="objects_network_1009015_1406664_Keywords_IDLnetURL"></a>STRING_ARRAY</h3>
        <p>Set this keyword to treat the return value as an array of strings. If this keyword is set, the FILENAME and BUFFER keywords are ignored.</p>
        <h3 class="Keyword"><a name="objects_network_1009015_1420458"></a><a name="objects_network_1009015_1406666_Keywords_IDLnetURL"></a>URL</h3>
        <p>Set this keyword equal to a string that specifies the complete URL of the resource to be retrieved. The specified URL must contain a scheme and host, and may contain an optional path. If this keyword is set, the URL_* properties are ignored. If this keyword is not set, the URL_HOST property must be set prior to calling this method.</p>
        <p class="Note" data-mc-autonum="&lt;b&gt;Note: &lt;/b&gt;"><span class="autonumber"><span><b>Note: </b></span></span>When using a URL that contains a password, the password appears as clear text. To avoid this security problem when using a password, set the URL_* properties explicitly rather than using the URL keyword.</p>
        <h2 class="API" data-mc-conditions=""><a name="objects_network_1009015_1426529"></a><a name="objects_network_1009015_1406673_PageTOC_IDLnetURL"></a>Examples</h2>
        <p data-mc-conditions="">The following example uses the IDLnetURL::Get function method to retrieve files from the a directory on an FTP server that you specify. A binary image file is saved to your local IDL main directory, and a text file is retrieved as an array of strings. Note that you will need to provide a valid FTP server name and path.</p>
        <p class="ExampleCode" data-mc-conditions="">The code sample <code>url_docs_ftp_get<a name="kanchor4174"></a>.pro</code> is also located in the <code>examples/doc/objects</code> subdirectory of the IDL distribution. View the file in an IDL editor window by entering <code>.EDIT url_docs_ftp_get.pro</code> at the IDL Command Line.</p>
        <p class="Code" data-mc-conditions="">;-----------------------------------------------------------------</p>
        <p class="Code" data-mc-conditions="">FUNCTION Url_Callback, status, progress, data</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; print the info msgs from the url object</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;PRINT, status</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; return 1 to continue, return 0 to cancel</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;RETURN, 1</p>
        <p class="Code" data-mc-conditions="">END</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">;-----------------------------------------------------------------</p>
        <p class="Code" data-mc-conditions="">PRO url_docs_ftp_get</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; If the url object throws an error it will be caught here</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;CATCH, errorStatus </p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;IF (errorStatus NE 0) THEN BEGIN</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;CATCH, /CANCEL</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;; Display the error msg in a dialog and in the IDL output log</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;r = DIALOG_MESSAGE(!ERROR_STATE.msg, TITLE='URL Error', $</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;/ERROR)</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;PRINT, !ERROR_STATE.msg</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;; Get the properties that will tell us more about the error.</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;oUrl-&gt;GetProperty, RESPONSE_CODE=rspCode, $</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;RESPONSE_HEADER=rspHdr, RESPONSE_FILENAME=rspFn</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;PRINT, 'rspCode = ', rspCode</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;PRINT, 'rspHdr= ', rspHdr</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;PRINT, 'rspFn= ', rspFn</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;; Destroy the url object</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;OBJ_DESTROY, oUrl</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;&#160;&#160;&#160;RETURN</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;ENDIF</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; create a new IDLnetURL object </p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;oUrl = OBJ_NEW('IDLnetUrl')</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; Specify the callback function</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;oUrl-&gt;SetProperty, CALLBACK_FUNCTION ='Url_Callback'</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; Set verbose to 1 to see more info on the transacton</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;oUrl-&gt;SetProperty, VERBOSE = 1</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; Set the transfer protocol as ftp</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;oUrl-&gt;SetProperty, url_scheme = 'ftp'</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; EDIT&#160;THIS&#160;LINE: The FTP server</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;oUrl-&gt;SetProperty, URL_HOST = 'ftp_server_name'</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; EDIT&#160;THIS&#160;LINE: The FTP server path of the file to download</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;oUrl-&gt;SetProperty, URL_PATH = 'valid_path/Day.jpg'</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; Make a request to the FTP server.</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; Retrieve a binary image file and write it </p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; to the local disk's IDL main directory.</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;fn = oUrl-&gt;Get(FILENAME = !DIR + '/Day.jpg' )  </p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; Print the path to the file retrieved from the remote server</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;PRINT, 'filename returned = ', fn</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; EDIT&#160;THIS&#160;LINE: The FTP server path of the next file to download</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;oUrl-&gt;SetProperty, URL_PATH = 'valid_path/ascii.txt'</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; Retrieve an ascii text file as an array of strings</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;strings = oUrl-&gt;Get( /STRING_ARRAY )</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; Print the returned array of strings</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;PRINT, 'array of strings returned:'</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;for i=0, n_elements(strings)-1 do print, strings[i]</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;; Destroy the url object</p>
        <p class="Code" data-mc-conditions="">&#160;&#160;&#160;OBJ_DESTROY, oUrl</p>
        <p class="Code" data-mc-conditions="">&#160;</p>
        <p class="Code" data-mc-conditions="">END</p>
        <p class="Code">&#160;</p>
        <h2 class="API"><a name="objects_network_1009015_1427043"></a><a name="objects_network_1009015_1406741_PageTOC_IDLnetURL"></a>Version History</h2>
        <table style="caption-side: top;mc-table-style: url('../../Resources/TableStyles/VersionTable.css');" cellspacing="0" class="TableStyle_VersionTable">
            <col />
            <col />
            <tbody>
                <tr>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColSep">
                        <p>6.4</p>
                    </td>
                    <td class="TableStyle_VersionTable_Body_0_0_RowEnd_ColEnd">
                        <p>Introduced</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <div class="mp_footer">© <span class="DocumentTitleCopyrightYear">2015</span>&#160;<span class="DocumentTitleCopyrightCompanyName">Exelis Visual Information Solutions, Inc., a subsidiary of Harris Corporation</span>. All Rights Reserved. This information is not subject to the controls of the International Traffic in Arms Regulations (ITAR) or the Export Administration Regulations (EAR). However, this information may be restricted from transfer to various embargoed countries under U.S. laws and regulations.</div>
    </body>
</html>